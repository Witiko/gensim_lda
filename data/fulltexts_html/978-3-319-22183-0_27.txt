 
Skip to main content 
This service is more advanced with JavaScript available, learn more at http://activatejavascript.org 
Advertisement
Hide 

SpringerLink
Search SpringerLink 
  
Search 
    • Home 
    • Contact us 
    • Log in 
Search-Based Software Engineering  
International Symposium on Search Based Software Engineering 
SSBSE 2015: Search-Based Software Engineering pp 301-307 | Cite as
Inferring Test Models from Kate’s Bug Reports Using Multi-objective Search
    • Authors
    • Authors and affiliations
    • Yuanyuan Zhang
    • Mark Harman
    • Yue Jia
    • Federica Sarro
Conference paper
First Online: 28 July 2015
    • 1 Citations 
    • 6 Readers 
    • 586 Downloads 
Part of the Lecture Notes in Computer Science book series (LNCS, volume 9275)
Abstract
Models inferred from system execution logs can be used to test general system behaviour. In this paper, we infer test models from user bug reports that are written in the natural language. The inferred models can be used to derive new tests which further exercise the buggy features reported by users. Our search-based model inference approach considers three objectives: (1) to reduce the number of invalid user events generated (over approximation), (2) to reduce the number of unrecognised user events (under approximation), (3) to reduce the size of the model (readability). We apply our approach to 721 of Kate’s bug reports which contain the information required to reproduce the bugs. We compare our results to start-of-the-art KLFA tool. Our results show that our inferred models require 19 tests to reveal a bug on average, which is 98 times fewer than the models inferred by KLFA.
Keywords
SBSE NLP Topic modelling Model inference NSGA-II 

This is a preview of subscription content, log in to check access.

Notes
Acknowledgements
We wish to express our gratitude to Paolo Tonella for his helpful suggestion and the search-based FSM tools provided.
References
    1. 1.
       Yin, Z., Yuan, D., Zhou, Y., Pasupathy, S., Bairavasundaram, L.: How do fixes become bugs? In: Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (ESEC/FSE 2011), Szeged, Hungary, pp. 26–36. ACM, 5–9 September 2011Google Scholar
    2. 2.
       Buggy McAfee update whacks Wndows XP PCs: http://news.cnet.com/8301-1009_3-20003074-83.html 
    3. 3.
       Krka, I., Brun, Y., Popescu, D., Garcia, J., Medvidovic, N.: Using dynamic execution traces and program invariants to enhance behavioral model inference. In: Proceedings of the ACM/IEEE 32nd International Conference on Software Engineering (ICSE 2010), Cape Town, South Africa, pp. 179–182. IEEE, 2–8 May 2010Google Scholar
    4. 4.
       Lorenzoli, D., Mariani, L., Pezzè, M.: Automatic generation of software behavioral models. In: Proceedings of the 30th International Conference on Software Engineering (ICSE 2008), Leipzig, Germany, pp. 501–510. ACM, 10–18 May 2008Google Scholar
    5. 5.
       Tonella, P., Marchetto, A., Nguyen, D.C., Jia, Y., Lakhotia, K., Harman, M.: Finding the optimal balance between over and under approximation of models inferred from execution logs. In: Proceedings of IEEE 5th International Conference on Software Testing, Verification and Validation (ICST), Montreal, QC, Canada, pp. 21–30. IEEE, 17–21 April 2012Google Scholar
    6. 6.
       The Kate Editor: http://kate-editor.org/ 
    7. 7.
       KDE Bugtraking System: https://bugs.kde.org/ 
    8. 8.
       The Natural Language ToolKit (NLTK): http://www.nltk.org/ 
    9. 9.
       Řehůřek, R., Sojka, P.: Software framework for topic modelling with large corpora. In: Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks, Valletta, Malta, pp. 45–50. ELRA, May 2010. http://is.muni.cz/publication/884893/en 
    10. 10.
       Mariani, L., Pastore, F.: Automated identification of failure causes in system logs. In: Proceedings of the 19th International Symposium on Software Reliability Engineering (ISSRE 2008), Seattle, WA, USA, pp. 117–126. IEEE, 10–14 November 2008Google Scholar
    11. 11.
       Zitzler, E., Thiele, L.: Multiobjective evolutionary algorithms: a comparative case study and the strength pareto approach. IEEE Trans. Evol. Comput. 3(4), 257–271 (1999)CrossRefGoogle Scholar
    12. 12.
       Cliff, N.: Ordinal Methods for Behavioral Data Analysis. Lawrence Erlbaum Associates Inc., New Jersey (1996)Google Scholar
Copyright information
© Springer International Publishing Switzerland 2015
Authors and Affiliations
    • Yuanyuan Zhang
        ◦ 1
      Email author
    • Mark Harman
        ◦ 1
    • Yue Jia
        ◦ 1
    • Federica Sarro
        ◦ 1
    1. 1.CREST, Department of Computer ScienceUniversity College LondonLondonUK
About this paper
Cite this paper as: 
Zhang Y., Harman M., Jia Y., Sarro F. (2015) Inferring Test Models from Kate’s Bug Reports Using Multi-objective Search. In: Barros M., Labiche Y. (eds) Search-Based Software Engineering. SSBSE 2015. Lecture Notes in Computer Science, vol 9275. Springer, Cham 
    • First Online 28 July 2015 
    • DOI https://doi.org/10.1007/978-3-319-22183-0_27 
    • Publisher Name Springer, Cham 
    • Print ISBN 978-3-319-22182-3 
    • Online ISBN 978-3-319-22183-0 
    • eBook Packages Computer Science 
    • Buy this book on publisher's site 
    • Reprints and Permissions 
Personalised recommendations

Cite paper 
    • How to cite? 
    • .RIS Papers Reference Manager RefWorks Zotero 
    • .ENW EndNote 
    • .BIB BibTeX JabRef Mendeley 
Buy options 
Actions
Log in to check access 
Buy eBook 
EUR 47.59 
Buy paper (PDF) 
EUR 30.19 
    • Instant download 
    • Readable on all devices 
    • Own it forever 
    • Local sales tax included if applicable 
Learn about institutional subscriptions 
Cite paper 
    • How to cite? 
    • .RIS Papers Reference Manager RefWorks Zotero 
    • .ENW EndNote 
    • .BIB BibTeX JabRef Mendeley 
Advertisement
Hide 

Over 10 million scientific documents at your fingertips
Switch Edition
    • Academic Edition 
    • Corporate Edition 
    • Home 
    • Impressum 
    • Legal information 
    • Privacy statement 
    • How we use cookies 
    • Accessibility 
    • Contact us 
Springer Nature 
© 2017 Springer Nature Switzerland AG. Part of Springer Nature.
Not logged in Not affiliated 62.245.124.181 









    • Your Privacy
    • Strictly Necessary Cookies
    • Performance Cookies
    • Functional Cookies
    • Targeting Cookies
    • More Information
Privacy Preference Centre
Active
Always Active



Save Settings
Allow All
We use cookies to personalise content and ads, to provide social media features and to analyse our traffic. We also share information about your use of our site with our social media, advertising and analytics partners in accordance with our Privacy Statement. You can manage your preferences in Manage Cookies.
Close
OK
Manage Cookies

