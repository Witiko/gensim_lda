Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 644–654,
Baltimore, Maryland, USA, June 23-25 2014.
c
2014 Association for Computational Linguistics
Lexical Inference over Multi-Word Predicates: A Distributional Approach
Omri Abend
Shay B. Cohen
Mark Steedman
School of Informatics, University of Edinburgh,
Edinburgh EH8 9AB, United Kingdom
{
oabend,scohen,steedman
}
@inf.ed.ac.uk
Abstract
Representing predicates in terms of their
argument distribution is common practice
in NLP. Multi-word predicates (MWPs) in
this context are often either disregarded or
considered as fixed expressions.
The lat-
ter treatment is unsatisfactory in two ways:
(1) identifying MWPs is notoriously diffi-
cult,
(2) MWPs show varying degrees of
compositionality and could benefit
from
taking into account
the identity of
their
component
parts.
We propose a novel
approach that integrates the distributional
representation of multiple sub-sets of the
MWP’s words.
We assume a latent distri-
bution over sub-sets of the MWP, and esti-
mate it relative to a downstream prediction
task.
Focusing on the supervised identi-
fication of lexical inference relations,
we
compare against state-of-the-art baselines
that consider a single sub-set of an MWP,
obtaining substantial
improvements.
To
our
knowledge,
this is the first
work to
address lexical
relations between MWPs
of
varying degrees
of
compositionality
within distributional semantics.
1
Introduction
Multi-word expressions (MWEs)
constitute a
large part
of
the lexicon and account
for
much
of
its
growth (Jackendoff,
2002;
Seaton and
Macaulay,
2002).
However,
despite their impor-
tance, MWEs remain difficult to define and model,
and consequently pose serious difficulties for NLP
applications (Sag et al., 2001).
Multi-word Predi-
cates (MWPs; sometimes termed Complex Predi-
cates) form an important and much addressed sub-
class of MWEs and are the focus of this paper.
MWPs are informally defined as multiple words
that
constitute a single predicate (Alsina et
al.,
1997).
MWPs encompass a wide range of phe-
nomena, including causatives, light verbs, phrasal
verbs,
serial verb constructions and many others,
and pose considerable challenges to both linguistic
theory and NLP applications (see Section 2).
Part
of the difficulty in treating them stems from their
position on the borderline between syntax and the
lexicon.
It is therefore often unclear whether they
should be treated as fixed expressions, as compo-
sitional phrases that reflect the properties of their
component parts or as both.
This work addresses the modelling of MWPs
within the context of distributional semantics (Tur-
ney and Pantel,
2010),
in which predicates are
represented through the distribution of arguments
they may take.
In order
to collect
meaningful
statistics, the predicate’s lexical unit should be suf-
ficiently frequent and semantically unambiguous.
MWPs pose a challenge to such models,
as
na
¨
ıvely collecting statistics over all
instances of
highly ambiguous verbs is likely to result in noisy
representations. For instance, the verb “take” may
appear in MWPs as varied as “take time”,
“take
effect” and “take to the hills”.
This heterogene-
ity of “take” is likely to have a negative effect on
downstream systems that use its distributional rep-
resentation.
For instance,
while “take” and “ac-
cept” are often considered lexically similar,
the
high frequency in which “take” participates
in
non-compositional MWPs is likely to push the two
verbs’ distributional representations apart.
A straightforward approach to this problem is
to represent the predicate as a conjunction of mul-
tiple words,
thereby trading ambiguity for spar-
sity.
For instance,
the verb “take” could be con-
joined with its object
(e.g.,
“take care”,
“take a
bus”).
This approach,
however,
raises the chal-
lenge of identifying the sub-set of the predicate’s
words that should be taken to represent it (hence-
forth, its lexical components or LCs).
We propose a novel approach that addresses this
644
challenge in the context of identifying lexical in-
ference relations between predicates (Lin and Pan-
tel, 2001; Schoenmackers et al., 2010; Melamud et
al.,
2013a,
inter alia).
A (lexical) inference rela-
tion
p
L
→ p
R
is said to hold if the relation denoted
by
p
R
generally holds between a set of arguments
whenever the relation
p
L
does. For instance, an in-
ference relation holds between “annex” and “con-
trol” since if a country annexes another,
it gener-
ally controls it.
Most works to this task use dis-
tributional similarity, either as their main compo-
nent (Szpektor and Dagan, 2008; Melamud et al.,
2013b), or as part of a more comprehensive system
(Berant et al., 2011; Lewis and Steedman, 2013).
For example,
consider the verb “take”.
While
the inference relation “have
→
take” does not gen-
erally hold, it does hold in the case of some light
verbs, such as “have a look
→
take a look”, under-
scoring the importance of taking more inclusive
LCs into account.
On the other hand,
the pred-
icate “likely to give a green light” is unlikely to
appear often even within a very large corpus, and
could benefit from taking its lexical sub-units (e.g.,
“likely” or “give a green light”) into account.
We present
a novel
approach to the task that
models the selection and relative weighting of the
predicate’s LCs using latent
variables.
This ap-
proach allows the classifier
that
uses the distri-
butional
representations to take into account
the
most
relevant
LCs in order to make the predic-
tion.
By doing so,
we avoid the notoriously dif-
ficult problem of defining and identifying MWPs
and account for predicates of various sizes and de-
grees of compositionality.
To our knowledge, this
is the first
work to address lexical
relations be-
tween MWPs of varying degrees of composition-
ality within distributional semantics.
We conduct experiments on the dataset of Ze-
ichner et al. (2012) and compare our methods with
analogous ones that select a fixed LC, using state-
of-the-art
feature sets.
Our method obtains sub-
stantial performance gains across all scenarios.
Finally, we note that our approach is cognitively
appealing.
Significant cognitive findings support
the claim that a speaker’s lexicon consists of par-
tially overlapping lexical units of various sizes, of
which several can be evoked in the interpretation
of an utterance (Jackendoff, 2002; Wray, 2008).
2
Background and Related Work
Inference Relations.
The detection of inference
relations between predicates has become a central
task over the past few years (Sekine,
2005;
Zan-
zotto et
al.,
2006;
Schoenmackers et
al.,
2010;
Berant
et
al.,
2011;
Melamud et
al.,
2013a,
in-
ter alia).
Inference rules are used in a wide va-
riety of applications including Question Answer-
ing (Ravichandran and Hovy,
2002),
Information
Extraction (Shinyama and Sekine,
2006),
and as
a main component in Textual Entailment systems
(Dinu and Wang, 2009; Dagan et al., 2013).
Most approaches to the task used distributional
similarity as a major component within their sys-
tem.
Lin and Pantel (2001) introduced DIRT,
an
unsupervised distributional
system for
detecting
inference relations.
The system is still considered
a state-of-the-art baseline (Melamud et al., 2013a),
and is often used as a component within larger sys-
tems.
Schoenmackers et
al.
(2010) presented an
unsupervised system for learning inference rules
directly from open-domain web data.
Melamud
et al. (2013a) used topic models to combine type-
level predicate inference rules with token-level in-
formation from their arguments in a specific con-
text.
Melamud et al. (2013b) used lexical expan-
sion to improve the representation of infrequent
predicates. Lewis and Steedman (2013) combined
distributional and symbolic representations,
eval-
uating on a Question Answering task,
as well as
on a quantification-focused entailment dataset.
Several
studies tackled the task using super-
vised systems.
Weisman et al.
(2012) used a set
of linguistically motivated features, but evaluated
their system on a corpus that consists almost en-
tirely of
single-word predicates.
Mirkin et
al.
(2006) presented a system for learning inference
rules between nouns, using distributional similar-
ity and pattern-based features.
Hagiwara et
al.
(2009) identified synonyms using a supervised ap-
proach relying on distributional and syntactic fea-
tures. Berant et al. (2011) used distributional simi-
larity between predicates to weight the edges of an
entailment graph.
By imposing global constraints
on the structure of the graph, they obtained a more
accurate set of inference rules.
Previous work used simple methods to select
the predicate’s
LC.
Some filtered out
frequent
highly ambiguous verbs (Lewis and Steedman,
2013), others selected a single representative word
(Melamud et
al.,
2013a),
while yet
others used
multi-word LCs but treated them as fixed expres-
sions (Lin and Pantel, 2001; Berant et al., 2011).
The goals of the above studies are largely com-
645
plementary to ours.
While previous work focused
either
on improving the quality of
the distribu-
tional representations themselves or on their incor-
poration into more elaborate systems, we focus on
the integration of the distributional representation
of multiple LCs to improve the identification of
inference relations between MWPs.
MWP Extraction and Identification.
MWPs
have received considerable attention over the years
in both theoretical and applicative contexts.
Their
position on the crossroads of syntax and the lexi-
con, their varying degrees of compositionality, as
well
as the wealth of linguistic phenomena they
exhibit, made them the object of ongoing linguis-
tic discussion (Alsina et al., 1997; Butt, 2010).
In NLP,
the
discovery and identification of
MWEs in general
and MWPs in particular
has
been the focus
of
much work over
the years
(Lin,
1999;
Baldwin et
al.,
2003;
Biemann and
Giesbrecht,
2011).
Despite wide interest,
the
field has yet to converge to a general and widely
agreed-upon method for identifying MWPs.
See
(Ramisch et al., 2013) for an overview.
Most work on MWEs emphasized idiosyncratic
or non-compositional expressions.
Other lines of
work focused on specific MWP classes such as
light
verbs (Tu and Roth,
2011;
Vincze et
al.,
2013) and phrasal
verbs (McCarthy et
al.,
2003;
Pichotta and DeNero, 2013). Our work proposes a
uniform treatment to MWPs of varying degrees of
compositionality,
and avoids defining MWPs ex-
plicitly by modelling their LCs as latent variables.
Compositional
Distributional
Semantics.
Much work in recent
years has concentrated on
the relation between the distributional representa-
tions of composite phrases and the representations
of
their
component
sub-parts
(Widdows,
2008;
Mitchell
and Lapata,
2010;
Baroni
and Zampar-
elli,
2010;
Coecke et
al.,
2010).
Several
works
have used compositional distributional semantics
(CDS) representations to assess the composition-
ality of MWEs, such as noun compounds (Reddy
et
al.,
2011)
or
verb-noun combinations (Kiela
and Clark,
2013).
Despite significant
advances,
previous work has mostly been concerned with
highly compositional cases and does not address
the distributional
representation of predicates of
varying degrees of compositionality.
3
Our Proposal: A Latent LC Approach
This section details our approach for distribu-
tionally representing MWPs by leveraging their
component
LCs.
Section 3.1 describes our gen-
eral approach, Section 3.2 presents our model and
Section 3.3 details the feature set.
3.1
General Approach and Notation
We propose a method for
addressing MWPs of
varying degrees of compositionality through the
integration of the distributional
representation of
multiple sub-sets of the predicate’s words (LCs).
We use it to tackle a supervised prediction task that
represents predicates distributionally.
Our model
assumes a latent distribution over the LCs, and es-
timates its parameters so to best
conform to the
goals of the target prediction task.
Formally, given a predicate
p
, we denote the set
of words comprising it
as
W (p)
.
The set
of al-
lowable LCs for
p
is denoted with
H
p
⊂ 2
W (p)
.
H
p
contains all sub-sets of
p
that we consider as
apriori possible to represent
p
. For instance, if
p
is
“likely to give a green light”,
H
p
may include LCs
such as “likely” or “give light”.
As our method is
aimed at discovering the most relevant LCs, we do
not attempt to analyze the MWPs in advance, but
rather take an inclusive
H
p
, allowing the model to
estimate the relative weights of the LCs.
The task we use as a testbed for our approach
is the lexical inference identification task between
predicates.
Given a
pair
of
predicates
p
=
(p
L
, p
R
)
,
the task is to predict whether an infer-
ence relation holds between them.
For instance, if
p
L
is “devour” and
p
R
is “eat greedily”, the clas-
sifier should use the similarity between “devour”
and “eat” in order to correctly predict
an infer-
ence relation in this case.
Selecting the wider LC
“eat greedily” might result in sparser statistics.
In
other examples, however, taking a wider LC is po-
tentially beneficial.
For instance,
the dissimilar-
ity between “take” and “make” should not prevent
the classifier from identifying the inference rela-
tion between “take a step” and “make a step”.
Our statistical model aims at predicting the cor-
rect label by making use of partially overlapping
LCs of various sizes,
both for the premise left-
hand side (LHS) predicate
p
L
and the hypothesis
right-hand side (RHS) predicate
p
R
.
More for-
mally,
we take the space of values for our latent
LC variables to be
H
p
L
,p
R
= H
p
L
× H
p
R
.
Our evaluation dataset consists of pairs
p
(i)
=
(p
(i)
L
, p
(i)
R
)
for
i
∈ {1, . . . , M }
,
where
M
is the
number of examples available, coupled with their
gold-standard labels
y
(i)
∈ {1, −1}
.
For brevity,
we denote
H
(i)
= H
p
(i)
= H
p
(i)
L
,p
(i)
R
.
We also as-
646
sume the existence of a feature function
Φ(p, y, h)
which maps a triplet of a predicate pair
p
, an infer-
ence label
y
, and a latent state
h ∈ H
p
to
R
d
for
some integer
d
. We denote the training set by
D
.
3.2
The Model
We address the task with a latent
variable log-
linear model,
representing the LCs of the predi-
cates. We choose this model for its generality, con-
ceptual simplicity, and because it allows to easily
incorporate various feature sets and sets of latent
variables. We introduce
L
2
regularization to avoid
over-fitting.
We use maximum likelihood estima-
tion, and arrive at the following objective function:
L(w|D) =
1
M
M
X
i=1
log P (y
(i)
|p
(i)
, w) −
λ
2
kwk
2
=
=
1
n
n
X
i=1
0
@
log
X
h∈H
(i)
exp
“
w
>
Φ(p
(i)
, y
(i)
, h)
”
− log Z(w, i)
«
−
λ
2
kwk
2
where:
Z(w, i) =
X
y∈{−1,1}
X
h∈H
i
exp(w
>
Φ(p
i
, y, h)).
We maximize
L
using the BFGS algorithm (No-
cedal and Wright,
1999).
The gradient (with re-
spect to
w
) is the following:
∇L = E
h
[Φ(p
i
, y
i
, h)] − E
h,y
[Φ(p
i
, y, h)] − λ · w
H
p
can be defined to be any sub-set
of
2
W (p)
given that
taking an expectation over
H
can be
done efficiently. It is therefore possible to use prior
linguistic knowledge to consider only sub-sets of
p
that are likely to be non-compositional (e.g., verb-
preposition or verb-noun pairs).
In our experiments we attempt to keep the ap-
proach maximally general, and define
H
p
to be the
set of all subsets of size 1 or 2 of content words in
W
p
1
.
We bound the size of
h ∈ H
p
in order to re-
tain computational efficiency and a sufficient fre-
quency of the LCs in
H
p
. MWPs of length greater
than 2 are effectively approximated by their set of
subsets of sizes 1 and 2.
Each
h
can therefore be written as a 4-tuple
(
h
A
L
, h
B
L
, h
A
R
, h
B
R
), where
h
A
L
(
h
A
R
) denotes the first
word of the LHS (RHS) predicate’s LC.
h
B
L
(
h
B
R
)
denotes the (possibly empty) second word of the
predicate.
Inference is carried out by maximizing
P (y|p
(i)
)
over
y
. As
|H
p
| = O(k
4
)
, where
k
is the
1
We use a POS tagger to identify content words. Preposi-
tions are considered content words under this definition.
number of content words in
p
, and as the number
of content words is usually small
2
,
inference can
be carried out by directly summing over
H
(i)
.
Initialization.
The introduction of
latent
vari-
ables into the log-linear
model
leads to a non-
convex objective function.
Consequently,
BFGS
is not
guaranteed to converge to the global
opti-
mum,
but rather to a stationary point.
The result
may therefore depend on the parameter initializa-
tion. Indeed, preliminary experiments showed that
both initializing
w
to be zero and using a random
initializer results in lower performance.
Instead,
we initialize our model with a simpli-
fied convex model
that
fixes the LCs to be the
pair of left-most
content
words comprising each
of the predicates.
This is a common method for
selecting the predicate’s LC (e.g., Melamud et al.,
2013a).
Once
h
has been fixed,
the model
col-
lapses to a convex log-linear model.
The optimal
w
is then taken as an initialization point for the la-
tent variable model.
While this method may still
not converge to the global maximum, our experi-
ments show that this initialization technique yields
high quality values for
w
(see Section 6).
3.3
Feature Set
This section lists the features used for our exper-
iments.
We intentionally select a feature set that
relies on either completely unsupervised or shal-
low processing tools that are available for a wide
variety of languages and domains.
Given a predicate pair
p
(i)
, a label
y ∈ {1, −1}
and a latent state
h ∈ H
(i)
, we define their feature
vector as
Φ(p
(i)
, y, h) = y · Φ(p
(i)
, h)
.
The com-
putation of
Φ(p
(i)
, h)
requires a reference corpus
R
that contains triplets of the type
(p, x, y)
where
p
is a binary predicate and
x
and
y
are its argu-
ments.
We use the Reverb corpus as
R
in our ex-
periments (Fader et al., 2011; see Section 4).
We
refrain from encoding features that directly reflect
the vocabulary of the training set.
Such features
are not
applicable beyond that
set’s vocabulary,
and as available datasets contain no more than a
few thousand examples, these features are unlikely
to generalize well.
Table 1 presents the set of features we use in our
experiments. The features can be divided into two
main categories:
similarity features between the
LHS and the RHS predicates (table’s top), and fea-
tures that reflect the individual properties of each
2
|H
p
|
is about 15 on average in our dataset,
where less
than 5% of the
H
(i)
are of size greater than 50.
647
Category
Name
Description
Similarity
COSINE
DIRT cosine similarity between the vectors of
h
L
and
h
R
COSINE
A
DIRT cosine similarity between the vectors of
h
A
L
and
h
A
R
BInc
DIRT BInc similarity between the vectors of
h
L
and
h
R
BInc
A
DIRT BInc similarity between the vectors of
h
A
L
and
h
A
R
Word A LHS
POS
A
L
The most frequent POS tag for the lemma of
h
A
L
POS2
A
L
The second most frequent POS tag for the word lemma of
h
A
L
FREQ
A
L
The number of occurrences of
h
A
L
in the reference corpus
COMMON
A
L
A binary feature indicating whether
h
A
L
appears in both predicates
ORDINAL
A
L
The ordinal number of
h
A
L
among the content words of the LHS predicate
Pair LHS
POS
AB
L
The conjunction of
P OS
A
L
and
P OS
B
L
FREQ
AB
L
The frequency of
h
A
L
and
h
B
L
in the reference corpus
PREFAB
L
P (h
A
L
|h
A
L
)
as estimated from the reference corpus
PREFBA
L
P (h
B
L
|h
A
L
)
as estimated from the reference corpus
PMIAB
L
The point-wise mutual information of
h
A
L
and
h
B
L
LDA
TOPICS
L
P (topic|h
L
)
for each of the induced topics.
TOPICENT
L
The entropy of the topic distribution
P (topic|h
L
)
Table 1:
The feature set used in our experiments. The top part presents the similarity measures based on the DIRT approach.
The rest
of the listed features apply to the LHS predicate (
h
L
),
and to the first
word in it
(
h
A
L
).
Analogous features are
introduced for the second word,
h
B
L
, and for the RHS predicate. The upper-middle part presents the word features for
h
A
L
. The
lower-middle part presents features that apply where
h
L
is of size 2. The bottom part lists the LDA-based features.
of them.
Within the LHS feature set,
we distin-
guish between two sub-types of
features:
word
features that
encode the individual
properties of
h
A
L
and
h
B
L
(table’s upper middle part),
and pair
features that only apply to LCs of size 2 and re-
flect the relation between
h
A
L
and
h
B
L
(table’s lower
middle part).
We further incorporate LDA-based
features that reflect the selectional preferences of
the predicates (table’s bottom).
Distributional Similarity Features.
The distri-
butional similarity features are based on the DIRT
system (Lin and Pantel, 2001).
The score defines
for each predicate
p
and for each argument
slot
s ∈ {L, R}
(corresponding to the arguments to the
right and left of that predicate) a vector
v
p
s
which
represents the distribution of arguments appearing
in that
slot.
We take
v
p
s
(x)
to be the number of
times that the argument
x
appeared in the slot
s
of
the predicate
p
. Given these vectors, the similarity
between the predicates
p
1
and
p
2
is defined as:
score(p
1
, p
2
) =
q
sim(v
p
1
L
, v
p
2
L
) · sim(v
p
1
R
, v
p
2
R
)
where
sim
is some vector similarity measure.
We use two common similarity measures:
the
vector cosine metric,
and the BInc (Szpektor and
Dagan, 2008) similarity measure. These measures
give complementary perspectives on the similar-
ity between the predicates,
as the cosine similar-
ity is symmetric between the LHS and RHS predi-
cates, while BInc takes into account the direction-
ality of the inference relation.
Preliminary exper-
iments with other measures,
such as those of Lin
(1998) and Weeds and Weir (2003) did not yield
additional improvements.
We encode the similarity of all measures for the
pair
h
L
and
h
R
as well as the pair
h
A
L
and
h
A
R
. The
latter feature is an approximation to the similar-
ity between the heads of the predicates,
as heads
in English tend to be to the left of the predicates.
These two features coincide for
h
values of size 1.
Word and Pair Features.
These features en-
code the basic properties of the LC.
The motiva-
tion behind them is to allow a more accurate lever-
aging of the similarity features, as well as to better
determine the relative weights of
h ∈ H
(i)
.
The feature set is composed of four analogous
sets corresponding to
h
A
L
,
h
B
L
,
h
A
R
and
h
B
R
,
as well
as two sets of features that
capture relations be-
tween
h
A
L
,
h
B
L
and
h
A
R
,
h
B
R
(in cases
h
is of size 2).
The features include the ordinal index of the word
within the predicate,
the lemma’s frequency ac-
cording to
R
, and a feature that indicates whether
that word’s lemma also appears in both predicates
of the pair.
For instance,
when considering the
predicates “likely to come” and “likely to leave”,
“likely” appears in both predicates, while “come”
and “leave” appear only in one of them.
In addition,
we use POS-based features that
encode the most
frequent
POS tag for the word
lemma and the second most frequent POS tag (ac-
cording to
R
). Information about the second most
frequent POS tag can be important in identifying
light verb constructions, such as “take a swim” or
“give a smile”, where the object is derived from a
verb.
It can thus be interpreted as a generalization
648
of the feature that indicates whether the object is
a deverbal noun, which is used by some light verb
identification algorithms (Tu and Roth, 2011).
In cases where
h
L
is of size 2, we additionally
encode features that
apply to the conjunction of
h
A
L
and
h
B
L
.
We encode the conjunction of their
POS and the number of times the two lemmas oc-
curred together in
R
.
We also introduce features
that capture the statistical correlation between the
words of
h
L
.
To do so,
we use point-wise mu-
tual
information,
and the conditional
probabili-
ties
P (h
A
L
|h
B
L
)
and
P (h
B
L
|h
A
L
)
.
Similar measures
have often been used for the unsupervised detec-
tion of MWEs (Villavicencio et
al.,
2007;
Fazly
and Stevenson, 2006).
We also include the analo-
gous set of features for
h
R
.
LDA-based Features.
We further
incorporate
features based on a Latent
Dirichlet
Allocation
(LDA) topic model
(Blei
et
al.,
2003).
Several
recent
works have underscored the usefulness of
using topic models to model
a predicate’s selec-
tional
preferences (Ritter et
al.,
2010;
Dinu and
Lapata, 2010; S
´
eaghdha, 2010; Lewis and Steed-
man, 2013; Melamud et al., 2013a).
We adopt the
approach of Lewis and Steedman (2013), and de-
fine a pseudo-document for each LC in the evalu-
ation corpus.
We populate the pseudo-documents
of an LC with its arguments according to
R
.
We
then train an LDA model with 25 topics over these
documents.
This yields a probability distribution
P (topic|h)
for each LC
h
, reflecting the types of
arguments
h
may take.
We further include a feature for the entropy of
the topic distribution of the predicate,
which re-
flects its heterogeneity.
This feature is motivated
by the assumption that a heterogeneous predicate
is more likely to benefit from selecting a more in-
clusive LC than a homogeneous one.
Technical Issues.
All features used,
except the
similarity ones and the topic distribution features
are binary.
Frequency features are binned into 4
bins of equal frequency.
We conjoin some of the
feature sets by multiplying their values.
Specifi-
cally,
we add the cross product of the features of
the category “Similarity” (see Table 1) with the
rest
of the features.
In addition,
we conjoin all
LHS (RHS) features with an indicator feature that
indicates whether
h
L
(
h
R
) is of size two.
This re-
sults in 1605 non-constant features.
We further note that some LCs that appear in the
evaluation corpus do not appear at all in
R
. In our
experiments they amounted to 0.2% of the LCs in
our evaluation dataset.
While previous work of-
ten discarded predicates below a certain frequency
from the evaluation,
we include them in order to
facilitate comparison to future work.
We assign
the similarity features of such examples a 0 value,
and assign their other numerical features the mean
value of those features.
4
Experimental Setup
Corpora and Preprocessing.
As
a reference
corpus
R
,
we use Reverb (Fader et al.,
2011),
a
web-based corpus consisting of 15M web extrac-
tions of binary relations.
Each relation is a triplet
of a predicate and two arguments, one preceding it
and one following it.
Relations were extracted us-
ing regular expressions over the output of a POS
tagger and an NP chunker.
Each predicate may
consist
of
a single verb,
a verb and a preposi-
tion or a sequence of words starting in a verb and
ending in a preposition, between which there may
nouns, adjectives, adverbs, pronouns, determiners
and verbs.
The verb may also be a copula.
Exam-
ples of predicates are “make the most of”, “could
be exchanged for” and “is happy with”.
Reverb is an appealing reference corpus for this
task for several reasons.
First,
it uses fairly shal-
low preprocessing technology which is available
for many domains and languages. Second, Reverb
applies considerable noise filtering, which results
in extractions of fair quality. Third, our evaluation
dataset is based on Reverb extractions.
We evaluate our
algorithm on the dataset
of
Zeichner
et
al.
(2012).
This publicly available
corpus
3
provides pairs of Reverb binary relations
and an indication of
whether
an inference rela-
tion holds between them within the context
of
a specific pair
of
argument
fillers.
The corpus
was compiled using distributional methods to de-
tect
pairs of
relations in Reverb that
are likely
to have an inference relation between.
Annota-
tors, employed through Amazon Mechanical Turk,
were then asked to determine whether each pair
is meaningful, and if so, to determine whether an
inference relation holds.
Further measures were
taken to monitor the accuracy of the annotation.
For example,
the pair of predicates “make the
most of” and “take advantage of” appears in the
corpus as a pair between which an inference rela-
tion holds.
The arguments in this case are “stu-
dents” and “their university experience”.
An ex-
3
http://tinyurl.com/krx2acd
649
ample of a pair between which an inference rela-
tion does not hold is “tend to neglect” and “under-
estimate the importance of”, where the arguments
are “Robert” and “his family”.
The dataset
contains 6,565 instances in total.
We use 5,411 pairs of them,
discarding instances
that were deemed as meaningless by the annota-
tors.
We also discard cases where the set
of ar-
guments is reversed between the LHS and RHS
predicates.
In these examples,
p
R
(x, y)
is infer-
able from
p
L
(y, x)
, rather than from
p
L
(x, y)
.
As
there are less than 150 reversed instances in the
corpus,
experimenting on this sub-set is unlikely
to be informative.
The average length of a predicate in the cor-
pus is 2.7 words (including function words).
In
87.3% of the predicate pairs, there was more than
one LC (i.e.,
|H
p
|
> 1
),
underscoring the im-
portance of correctly leveraging the different LCs.
We randomly partition the corpus into a training
set which contains 4,343 instances (
∼
80%), and a
test set that contains 1,068 instances, maintaining
the same positive to negative label
ratio in both
datasets
4
.
Development
was carried out
using
cross-validation on the training data (see below).
We
use
a
Maximum Entropy POS Tagger,
trained on the Penn Treebank,
and the WordNet
lemmatizer,
both implemented within the NLTK
package (Loper
and Bird,
2002).
To obtain a
coarse-grained set
of POS tags,
we collapse the
tag set
to 7 categories:
nouns,
verbs,
adjectives,
adverbs,
prepositions,
the word “to” and a cate-
gory that includes all other words. A Reverb argu-
ment is represented as the conjunction of its con-
tent words that appear more than 10 times in the
corpus.
Function words are defined according to
their POS tags and include determiners, possessive
pronouns, existential “there”, numbers and coordi-
nating conjunctions.
Auxiliary verbs and copulas
are also considered function words.
To compute the LDA features,
we use the on-
line variational
Bayes algorithm of (Hoffman et
al., 2010) as implemented in the Gensim software
package (Rehurek and Sojka, 2010).
Evaluated Algorithms.
The only two previous
works on this dataset
(Melamud et
al.,
2013a;
Melamud et al., 2013b) are not directly compara-
ble, as they used unsupervised systems and evalu-
4
A script that replicates our train-test partition of the cor-
pus can be found here:
http://homepages.inf.ed.
ac.uk/oabend/mwpreds.html
ated on sub-sets of the evaluation dataset. Instead,
we use several baselines to demonstrate the use-
fulness of integrating multiple LCs, as well as the
relative usefulness of our feature sets.
The simplest baseline is A
LL
N
EG
,
which pre-
dicts the most frequent label in the dataset (in our
case:
“no inference”).
The other evaluated sys-
tems are formed by taking various subsets of our
feature set. We experiment with 4 feature sets. The
smallest set, S
IM
, includes only the similarity fea-
tures.
This feature set is related to the composi-
tional
distributional
model
of Mitchell
and Lap-
ata (2010) (see Section 6).
We note that despite
recent advances in identifying predicate inference
relations, the DIRT system (Lin and Pantel, 2001)
remains a strong baseline,
and is often used as a
component
in state-of-the-art
systems (Berant
et
al.,
2011),
and specifically in the two aforemen-
tioned works that used the same evaluation corpus.
The next feature set B
ASIC
includes the features
found to be most
useful
during the development
of the model:
the most frequent POS tag, the fre-
quency features and the feature
Common
.
More
inclusive is the feature set
N
O
-LDA,
which in-
cludes all features except the LDA features.
Ex-
periments with this set
were performed in order
to isolate the effect of the LDA features.
Finally,
A
LL
includes our complete set of features.
The more direct
comparison is against
partial
implementations of our system where the LC
h
is
deterministically selected. Determining
h
for each
predicate yields a regular log-linear binary classi-
fication model.
We use two variants of this base-
line.
The first,
L
EFT
M
OST
,
selects the left-most
content
word for each predicate.
Similar selec-
tion strategy was carried out
by Melamud et
al.
(2013a).
The second,
VP
REP
, selects
h
to be the
verb along with its following preposition. In cases
the predicate contains multiple verbs, the one pre-
ceding the preposition is selected,
and where the
predicate does not contain any non-copula verbs,
it
regresses to L
EFT
M
OST
.
This LC selection
method approximates a baseline that includes sub-
categorized prepositions.
Such cases are highly
frequent
and account
for
a large portion of
the
MWPs in English.
Including a verb’s preposition
in its LC was commonly done in previous work
(e.g., Lewis and Steedman, 2013).
We also attempted to identify verb-preposition
constructions using a dependency parser.
Unfor-
tunately, our evaluation dataset is only available in
650
a lemmatized version, which posed a difficulty for
the parser.
Due to the low quality of the resulting
parses, we implemented VP
REP
using POS-based
regular expressions as defined above.
The full model is denoted with L
ATENT
LC. For
each system and feature set, we report results us-
ing 10-fold cross-validation on the training set, as
well
as results on the test
set.
Both cases use
the same set of parameters determined by cross-
validation on the training set.
As the task at hand
is a binary classification problem, we use accuracy
scores to rate the performance of our systems.
5
Results
Table
2 presents
the
results
of
our
experi-
ments.
Rows correspond to the evaluated algo-
rithms,
while columns correspond to the feature
sets used and the evaluation scenarios (i.e.,
train-
ing set cross-validation or test set evaluation). Our
experiments make first
use of this dataset
in its
fullest form for the problem of supervised learning
of inference relations, and may serve as a starting
point for further exploration of this dataset.
For
all
feature sets and settings,
L
ATENT
LC
scored highest,
often with a considerable margin
of up to 3.0% in the cross-validation and up to
4.6% on the test
set
relative to the L
EFT
M
OST
baseline,
and 5.1% (cross-validation)
and 6.8%
(test) margins relative to VP
REP
.
The
best
scoring result
of
our
L
ATENT
LC
model in the cross-validation scenario is 65.72%,
obtained by the feature set
All
.
The best scoring
result
by any of the baseline models in this sce-
nario is 62.7%,
obtained by the same feature set.
For the test set scenario,
L
ATENT
LC obtained its
highest accuracy, 65.73%, when using the feature
set
Basic
.
This is a substantial improvement over
the highest scoring baseline model in this scenario
that obtained 61.6% accuracy, using the feature set
All
. This performance gap is substantial when tak-
ing into consideration that the improvements ob-
tained by the highly competitive DIRT similarity
features using the stronger L
EFT
M
OST
baseline,
result in an improvement of 3.1% and 5.3% over
the trivial
A
LL
N
EG
baseline in the test
set
and
cross-validation scenarios respectively.
Comparing the different feature sets on our pro-
posed model,
we find that
the
Basic
feature set
gives a consistent and substantial increase over the
Sim
feature set.
Improvements are of 2.8% (test)
and 2.2% (cross-validation).
Introducing more
elaborate features (i.e.,
the feature sets
NoLDA
and
All
) yields some improvements in the cross-
validation,
but these improvements are not repli-
cated on the test set.
This may be due to idiosyn-
crasies in the test set that are averaged out in the
cross-validation scenario.
For a qualitative analysis, we took the best per-
forming model of the data set (i.e., with the
Basic
feature set),
and extracted the set
of
instances
where it
made a correct
prediction while both
baselines made an error.
This set contains many
verb-preposition pairs,
such as “list
as
→
report
as” or “submit via
→
deliver by”, underscoring the
utility of leveraging multiple LCs rather than con-
sidering only a head word (as with L
EFT
M
OST
)
or the entire phrase (as with VP
REP
).
Other ex-
amples in this set contain more complex patterns.
These include the positive pairs “talk much about
→
have much to say about” and “increase with
→
go up with”,
and the negative “make predic-
tion about
→
meet the challenge of” and “enjoy
watching
→
love to play”.
6
Discussion
Relation to CDS.
Much recent work subsumed
under the title Compositional
Distributional
Se-
mantics addressed the distributional
representa-
tion of multi-word phrases (see Section 2).
This
line of work focuses on compositional predicates,
such as “kick the ball” and not
on idiosyncratic
predicates such as “kick the bucket”.
A variant of the CDS approach can be framed
within ours.
Assume we wish to compute the
similarity of
the predicates
p
L
= (w
1
, ..., w
n
)
and
p
R
= (w
0
1
, ..., w
0
m
)
.
Let
us denote the vec-
tor space representations of the individual words
as
v
1
, ..., v
n
and
v
0
1
, ..., v
0
m
respectively.
A stan-
dard approach in CDS is to compose distributional
representations by taking their vector sum
v
L
=
v
1
+ v
2
... + v
n
and
v
R
= v
0
1
+ ... + v
0
m
(Mitchell
and Lapata, 2010).
One of the most effective sim-
ilarity measures is the cosine similarity, which is a
normalized dot
product.
The distributional
sim-
ilarity between
p
L
and
p
R
under
this model
is
sim(p
L
, p
R
)
=
P
n
i=1
P
m
j=1
sim(w
i
, w
0
j
)
,
where
sim(w
i
, w
0
j
)
is the dot product between
v
i
and
v
0
j
.
This similarity score is similar
in spirit
to a
simplified version of
our
statistical
model
that
restricts
the
set
of
allowable
LCs
H
p
to be
{({w
i
}, {w
0
j
})|i ≤ n, j ≤ m}
,
i.e.,
only LCs of
size 1.
Indeed,
taking
H
p
as above,
and cosine
similarity as the only feature (i.e.,
w ∈ R
), yields
the distribution
651
Test Set
Cross Validation
Algorithm
Sim
Basic
NoLDA
All
Sim
Basic
NoLDA
All
L
ATENT
LC
62.9
65.7
64.4
64.6
62.7
±
1.9
64.9
±
1.9
65.0
±
1.7
65.7
±
1.9
L
EFT
M
OST
59.0
61.1
60.0
60.4
61.2
±
2.1
62.5
±
2.4
62.4
±
2.2
62.7
±
2.0
VP
REP
56.1
60.9
60.7
61.6
∗
58.1
±
1.7
60.8
±
2.2
60.4
±
2.6
60.6
±
2.2
A
LL
N
EG
55.9
55.9
Table 2:
Results for the various evaluated systems.
Accuracy results are presented in percents,
followed in the cross vali-
dation scenario by the standard deviation over the folds.
The rows correspond to the various systems as defined in Section 4.
L
ATENT
LC is our proposed model.
The columns correspond to the various feature sets, from the least to the most inclusive.
S
IM
includes only similarity features.
B
ASIC
additionally includes POS-based and frequency features.
N
O
LDA includes all
features except LDA-based features.
A
LL
is the full feature set.
A
LL
N
EG
is the classifier that invariably predicts the label “no
inference”. Bold marks best overall accuracy per column, and
∗
marks figures that are not significantly worse (McNemar’s test,
p < 0.05
).
The same positive to negative label ratio was maintained in both the cross validation and test set scenarios.
In all
cases, L
ATENT
LC obtains substantial improvements over the baseline systems.
P (y|p) ∝
X
(w
i
,w
0
j
)∈H
p
exp
`
w · y · sim(w
i
, w
0
j
)
´
.
This derivation highlights the relation of a sim-
plified version of
our
approach to the additive
CDS model,
as both approaches effectively aver-
age over the similarities of all pairs of words in
p
L
and
p
R
.
The derivation also highlights a few ad-
vantages of our approach.
First, our approach al-
lows to straightforwardly introduce additional fea-
tures and to weight them in a way most consistent
with the task at hand. Second, it allows much more
flexibility in defining the set of allowable LCs,
H
p
.
Specifically,
H
p
may contain LCs of sizes greater
than 1.
Third, our approach uses standard proba-
bilistic modelling, and therefore has a natural sta-
tistical interpretation.
In order to appreciate the effect of these advan-
tages,
we perform an experiment that takes
H
to
be the set
of all
LCs of size 1,
and uses a sin-
gle similarity measure.
We run a 10-fold cross-
validation on our training data,
obtaining 61.3%
accuracy using
COSINE
and 62.2% accuracy us-
ing
BInc
.
The performance gap between these re-
sults and the accuracy obtained by our full model
(65.7%) underscores the latter’s effectiveness in
integrating multiple features and LCs.
Effectiveness
of
Optimization Method.
Our
maximization of
the log-likelihood function is
not guaranteed to converge to a global optimum.
Therefore,
the quality of the learned parameters
may be sensitive to the initialization point.
We
hereby describe an experiment that tests the sen-
sitivity of our approach to such variance.
Selecting the highest scoring feature set on our
test set (i.e., B
ASIC
), we ran the model with mul-
tiple initializers, by randomly perturbing our stan-
dard convex initializer (see Section 3). Concretely,
given a convex initializer
w
, we select the starting
point to be
w + η
,
where
η
i
∼ N (0, α|w
i
|)
.
We
ran this experiment 400 times with
α = 0.8
.
To combine the resulting weight vectors into a
single classifier,
we apply two types of standard
approaches:
a Product of Experts (Hinton, 2002),
as well as a voting approach that selects the most
frequently predicted label. Neither of these exper-
iments yielded any significant performance gain.
This demonstrates the robustness of our optimiza-
tion method to the initialization point.
7
Conclusion
We have presented a novel
approach to the
distributional
representation of multi-word pred-
icates.
Since MWPs demonstrate varying levels
of compositionality, a uniform treatment of MWPs
either as fixed expressions or through head words
is lacking.
Instead,
our approach integrates mul-
tiple lexical units contained in the predicate.
The
approach takes into account both multi-word LCs
that address low compositionality cases, as well as
single-word LCs that address compositional cases
and are more frequent. It assumes a latent distribu-
tion over the LCs of the predicates, and estimates
it relative to a target application task.
We addressed the supervised inference identi-
fication task,
obtaining substantial
improvement
over state-of-the-art
baseline systems.
In future
work we intend to assess the benefit
of this ap-
proach in MWP classes that are well-known from
the literature.
We believe that
a permissive ap-
proach that
integrates
multiple analyses
would
perform better than standard single-analysis meth-
ods in a wide range of applications.
Acknowledgements.
We would like to thank
Mike
Lewis,
Reshef
Meir,
Oren
Melamud,
Michael Roth and Nathan Schneider for their help-
ful comments.
This work was supported by ERC
Advanced Fellowship 249520 GRAMPLUS.
652
References
Alex Alsina,
Joan Wanda Bresnan,
and Peter
Sells.
1997.
Complex predicates.
Center for the Study of
Language and Information.
Timothy Baldwin, Colin Bannard, Takaaki Tanaka, and
Dominic Widdows.
2003.
An empirical
model
of multiword expression decomposability.
In Pro-
ceedings of the ACL 2003 workshop on Multiword
expressions:
analysis,
acquisition and treatment-
Volume 18, pages 89–96.
Marco Baroni and Roberto Zamparelli.
2010.
Nouns
are vectors,
adjectives are matrices:
Representing
adjective-noun constructions in semantic space.
In
EMNLP, pages 1183–1193.
Jonathan Berant,
Jacob Goldberger,
and Ido Dagan.
2011.
Global learning of typed entailment rules.
In
ACL, pages 610–619.
Chris Biemann and Eugenie Giesbrecht.
2011.
Dis-
tributional
semantics
and compositionality 2011:
Shared task description and results.
In Workshop
on Distributional
Semantics and Compositionality,
pages 21–28.
David M Blei,
Andrew Y Ng,
and Michael
I Jordan.
2003.
Latent
Dirichlet
allocation.
the Journal
of
machine Learning research, 3:993–1022.
Miriam Butt.
2010.
The light verb jungle:
still hack-
ing away.
In Complex predicates:
cross-linguistic
perspectives on event structure, pages 48–78. Cam-
bridge University Press.
Bob Coecke,
Mehrnoosh Sadrzadeh,
and Stephen
Clark.
2010.
Mathematical foundations for a com-
positional distributional model of meaning.
In J. van
Bentham, M. Moortgat, and W. Buszkowski, editors,
Linguistic Analysis, volume 36, pages 435–384.
Ido Dagan, Dan Roth, Mark Sammons, and Fabio Mas-
simo Zanzotto.
2013.
Recognizing textual entail-
ment:
Models and applications.
Synthesis Lectures
on Human Language Technologies, 6(4):1–220.
Georgiana Dinu and Mirella Lapata.
2010.
Topic mod-
els for meaning similarity in context.
In COLING:
Posters, pages 250–258.
Georgiana Dinu and Rui Wang.
2009.
Inference rules
and their application to recognizing textual
entail-
ment.
In EACL, pages 211–219.
Anthony Fader, Stephen Soderland, and Oren Etzioni.
2011.
Identifying relations for open information ex-
traction.
In EMNLP, pages 1535–1545.
Afsaneh Fazly and Suzanne Stevenson.
2006.
Auto-
matically constructing a lexicon of verb phrase id-
iomatic combinations.
In EACL, pages 337–344.
Masato Hagiwara,
Yasuhiro Ogawa,
and Katsuhiko
Toyama.
2009.
Supervised synonym acquisition us-
ing distributional features and syntactic patterns.
In-
formation and Media Technologies, 4(2):558–582.
Geoffrey E Hinton.
2002.
Training products of experts
by minimizing contrastive divergence.
Neural com-
putation, 14(8):1771–1800.
Matthew Hoffman, Francis R Bach, and David M Blei.
2010.
Online learning for latent Dirichlet allocation.
In NIPS, pages 856–864.
Ray Jackendoff.
2002.
Foundations of
language:
Brain,
meaning,
grammar,
evolution.
Oxford Uni-
versity Press.
Douwe Kiela and Stephen Clark.
2013.
Detect-
ing compositionality of multi-word expressions us-
ing nearest neighbours in vector space models.
In
EMNLP, pages 1427–1432.
Mike Lewis and Mark Steedman.
2013.
Combined
distributional and logical semantics.
TACL, 1:179–
192.
Dekang Lin and Patrick Pantel.
2001.
DIRT – discov-
ery of inference rules from text.
In SIGKDD 2001,
pages 323–328.
Dekang Lin.
1998.
Automatic retrieval and clustering
of similar words.
In COLING-ACL, pages 768–774.
Dekang Lin.
1999.
Automatic identification of non-
compositional phrases.
In ACL, pages 317–324.
Edward Loper and Steven Bird.
2002.
NLTK:
The
natural language toolkit.
In ACL Workshop on Ef-
fective tools and methodologies for teaching natural
language processing and computational linguistics,
pages 63–70.
Diana
McCarthy,
Bill
Keller,
and
John
Carroll.
2003.
Detecting a continuum of compositionality
in phrasal
verbs.
In ACL workshop on Multiword
expressions:
analysis,
acquisition and treatment,
pages 73–80.
Oren Melamud,
Jonathan Berant,
Ido Dagan,
Jacob
Goldberger, and Idan Szpektor.
2013a.
A two level
model for context sensitive inference rules.
In ACL
2013, pages 1331–1340.
Oren Melamud, Ido Dagan, Jacob Goldberger, and Idan
Szpektor.
2013b.
Using lexical expansion to learn
inference rules from sparse data.
In ACL: Short Pa-
pers, pages 283–288.
Shachar Mirkin, Ido Dagan, and Maayan Geffet.
2006.
Integrating pattern-based and distributional similar-
ity methods for lexical
entailment
acquisition.
In
COLING-ACL: Poster Session, pages 579–586.
Jeff Mitchell and Mirella Lapata.
2010.
Composition
in distributional models of semantics.
Cognitive Sci-
ence, 34(8):1388–1429.
Jorge. Nocedal and Stephen J Wright.
1999.
Numeri-
cal optimization, volume 2.
Springer New York.
653
Karl
Pichotta and John DeNero.
2013.
Identify-
ing phrasal verbs using many bilingual corpora.
In
EMNLP, pages 636–646.
Carlos Ramisch,
Aline Villavicencio,
and Valia Kor-
doni.
2013.
Introduction to the special
issue on
multiword expressions: From theory to practice and
use.
ACM Transactions on Speech and Language
Processing (TSLP), 10(2):3.
Deepak Ravichandran and Eduard Hovy.
2002.
Learn-
ing surface text
patterns for a question answering
system.
In ACL, pages 41–47.
Siva Reddy, Diana McCarthy, and Suresh Manandhar.
2011.
An empirical
study on compositionality in
compound nouns.
In IJCNLP, pages 210–218.
Radim Rehurek and Petr Sojka.
2010.
Software frame-
work for topic modelling with large corpora.
In Pro-
ceedings of LREC 2010 workshop New Challenges
for NLP Frameworks, pages 46–50.
Alan Ritter,
Mausam,
and Oren Etzioni.
2010.
A la-
tent Dirichlet allocation method for selectional pref-
erences.
In ACL, pages 424–434.
Ivan A.
Sag,
Timothy Baldwin,
Francis Bond,
Ann
Copestake,
and Dan Flickinger.
2001.
Multiword
expressions:
A pain in the neck for NLP.
In CI-
CLing, pages 1–15.
Stefan Schoenmackers,
Oren Etzioni,
Daniel S Weld,
and Jesse Davis.
2010.
Learning first-order Horn
clauses from web text.
In EMNLP,
pages 1088–
1098.
Diarmuid
´
O. S
´
eaghdha.
2010.
Latent variable models
of selectional preference.
In ACL 2010, pages 435–
444.
Maggie Seaton and Alison Macaulay,
editors.
2002.
Collins
COBUILD Idioms
Dictionary.
Harper-
Collins Publishers, 2nd edition.
Satoshi Sekine.
2005.
Automatic paraphrase discovery
based on context and keywords between NE pairs.
In IWP, pages 4–6.
Yusuke Shinyama and Satoshi Sekine.
2006.
Preemp-
tive information extraction using unrestricted rela-
tion discovery.
In HLT-NAACL, pages 304–311.
Idan Szpektor and Ido Dagan.
2008.
Learning entail-
ment rules for unary templates.
In COLING, pages
849–856.
Yuancheng Tu and Dan Roth.
2011.
Learning English
light verb constructions: contextual or statistical.
In
ACL HLT 2011, page 31.
Peter D Turney and Patrick Pantel.
2010.
From fre-
quency to meaning:
Vector
space models of
se-
mantics.
Journal of artificial intelligence research,
37(1):141–188.
Aline Villavicencio,
Valia Kordoni,
Yi Zhang,
Marco
Idiart,
and Carlos Ramisch.
2007.
Validation and
evaluation of automatically acquired multiword ex-
pressions for
grammar
engineering.
In EMNLP-
CoNLL, pages 1034–1043.
Veronika Vincze, Istv
´
an Nagy T., and Rich
´
ard Farkas.
2013.
Identifying English and Hungarian light verb
constructions:
A contrastive approach.
In ACL:
Short Papers, pages 255–261.
Julie Weeds and David Weir.
2003.
A general frame-
work for distributional similarity.
In EMNLP, pages
81–88.
Hila Weisman,
Jonathan Berant,
Idan Szpektor,
and
Ido Dagan.
2012.
Learning verb inference rules
from linguistically-motivated evidence.
In EMNLP-
CoNLL, pages 194–204.
Dominic Widdows.
2008.
Semantic vector products:
Some initial
investigations.
In Second AAAI Sym-
posium on Quantum Interaction,
volume 26,
pages
28–35.
Alison Wray.
2008.
Formulaic language: Pushing the
boundaries.
Oxford University Press.
Fabio Massimo Zanzotto,
Marco Pennacchiotti,
and
Maria Teresa Pazienza.
2006.
Discovering asym-
metric entailment relations between verbs using se-
lectional preferences.
In ACL-COLING, pages 849–
856.
Naomi
Zeichner,
Jonathan Berant,
and Ido Dagan.
2012.
Crowdsourcing inference-rule evaluation.
In
ACL: Short Papers, pages 156–160.
654
