Ontology-based Context in Visualizations to Facilitate
Sensemaking:
Case Studies of Phenotype Comparisons
by
Michael Glueck
A thesis submitted in conformity with the requirements
for the degree of Doctor of Philosophy
Graduate Department of Computer Science
University of Toronto
c
Copyright 2018 by Michael Glueck
Abstract
Ontology-based Context in Visualizations to Facilitate Sensemaking:
Case Studies
of Phenotype Comparisons
Michael Glueck
Doctor of Philosophy
Graduate Department of Computer Science
University of Toronto
2018
Visualization can help domain experts make sense of
their data,
but determining
appropriate visual
representations can be challenging because interpretation relies
on tacit domain knowledge.
Terminological
ontologies explicitly formalize domain
knowledge as concepts, entities, and relations that can be represented as a directed-
acyclic graph (DAG). This DAG topology could aid sensemaking by visualizing data
in the context of domain knowledge.
Ontologies were developed to support computational
analyses and their applica-
tion to visualize ontology-annotated data for sensemaking has not been systematically
explored.
Ontologies define complex relationships between entities and the resulting
DAG topology must be simplified to visually represent data.
Since the relationships
encode domain semantics, they could be leveraged to directly address analysis goals
through visualizations that support comparisons and interpretation of patterns and
trends.
This
work contributes
Ontology-based Analytical
Abstraction for Visualization
(OAAV),
an approach that uses a DAG representation to fuse ontology-annotated
data with the relationships defined by a terminological
ontology.
OAAV supports
existing ontology-based computational analyses, while also enabling transformations
into a variety of structured representations for visualization (e.g., hierarchies, matri-
ces, scatterplots, charts).
ii
OAAV contributes methods to unify disparate data observations (e.g.,
quanti-
tative,
non-quantifiable,
timeseries),
to simplify the DAG topology (e.g.,
breadth,
depth),
and to compute measures for analysis on data observations (e.g.,
similarity,
relevance).
These approaches were developed and refined through three case stud-
ies with medical domain experts studying phenotypes in genetic diseases.
Resulting
prototypes demonstrated that visualizations created with OAAV aligned with the
mental
models of
domain experts,
and helped them to perform visual
comparisons
and interpret patterns and trends.
The prototypes developed using OAAV have helped medical domain experts char-
acterize disease subtypes, identify anomalies in their data, and suggest terminological
ontology improvements.
The prototypes continue to be used by the domain experts,
and one has contributed to a scientific publication in the medical
domain.
OAAV
was designed based on a systematic exploration of
applying ontology relationships
to organize and encode ontology-annotated data for visualization in the biomedical
domain.
This unified approach could be applied to ontology-annotated data in other
domains.
iii
Dedicated to Kayoko and Matthias.
iv
Acknowledgements
To my outstanding co-supervisors,
Dr.
Daniel
Wigdor and Dr.
Fanny Chevalier:
I
am grateful for your ceaseless awesomeness.
Daniel,
you encouraged me to follow my research passions and challenged me to
broaden my perspectives.
Thank you for reining-in my crazy half-baked ideas and
keeping me on track.
Without your guidance, this would probably be a dissertation
on interaction models.
Fanny, thank you for being a willing participant in my 3am bouts of madness.
The
time zone difference surely helped.
You knew when to support me, but also when to
push me to do better.
Merci d’ˆetre toujours l`
a pour moi.
As always, it’s been a funny
night.
Dr.
Michael
Brudno,
it was you who inspired me to collaborate with medical
practitioners.
I never would have guessed that a course project could have blossomed
into this dissertation.
You made that possible.
Dr.
Ravin Balakrishnan, now that all is said and done, I wholeheartedly appreciate
your never-ending quest for the answer to the question “why?”...and never being
completely satisfied with my responses.
Dr.
Maneesh Agrawala and Dr.
Gerald Penn, it was an honour to have you both
as external
examiners.
Your feedback helped shape the final
version into something
I am truly proud of.
Dr.
Azam Khan and Dr.
Gord Kurtenbach,
you took a great leap of
faith in
enabling me to pursue this crazy little degree.
For your unwavering support over the
years, I owe the biggest of thanks.
Dr.
Michelle Annett, thank you for turning my long-winded and verbose sentences
into something that people could actually read and understand.
I have become a
better writer because of your sage advice and honesty.
Peter Hamilton, my guilt canary.
I am eternally grateful for your friendship.
But
seriously, please stop putting your things on my desk.
John Hancock,
you are the backbone of the DGP.
I can’t thank you enough for
all
the times you helped me fix the thing that was stopping me from doing what I
needed to get done at the last minute.
Of
course,
a HUGE thank you to everyone who contributed along the way.
I
couldn’t have done it without you...no really,
I couldn’t.
In particular,
I want to
v
acknowledge my colleagues at Autodesk Research, Alex Tessier, Rhys Goldstein, Hali
Larsen,
Justin Matejka,
Dr.
Fraser Anderson,
Dr.
Ben Lafreniere,
Dr.
George
Fitzmaurice, and Dr.
Jos Stam; all the medical doctors and researchers with whom I
had the pleasure to collaborate, Dr.
James Dowling, Dr.
Craig Campbell, Dr.
Sarah
Bowdin, Dr.
Stephen Meyn, Courtney Hum, Etsuko Tsuchiya, and Kim Amburgey;
my co-authors Peter Hamilton, Simon Breslav, Alina Gvozdik, Dr.
Mahdi Pakdaman
Naeini, and Dr.
Finale Doshi-Velez; and last but not least, my fellow DGP students,
Dr.
Rorik Hendrikson, Haijun Xia, and Nicole Sultanum.
Erica Marie for your strength, support, and patience.
You are my lighthouse and
safe harbour.
Oh,
and,
chatty monkey thanks you for the midnight chocolates and
go-get-em smoothies.
So, now that I’m done, wanna go to the Hammer?
Kayoko Glueck und Matthias Glueck, ihr seid die absolut besten Eltern.
Ihr habt
mich immer ermutigt, meine Tr¨
aume zu verfolgen.
Danke f¨
ur eure Weisheit, Geduld,
und bedingungslose Liebe.
Hoffentlich habe ich mich doch nicht dumm studiert.
vi
Copyright Notices and Disclaimers
Sections of this document have appeared in publications or are forthcoming (at the
time of writing).
In all cases, permissions have been granted by the publisher for these
works to appear here.
Below,
the publisher’s copyright notice and/or disclaimer is
given, with thesis chapter(s) and corresponding publication(s) noted.
Copyright
c
2016,
2017,
2018 by the Institute of Electrical
and Electronics En-
gineers (IEEE).
In reference to IEEE copyrighted material
which is used with per-
mission in this thesis,
the IEEE does not endorse any of
University of
Toronto’s
products
or
services.
Internal
or
personal
use of
this
material
is
permitted.
If
interested in reprinting/republishing IEEE copyrighted material
for advertising or
promotional
purposes or for creating new collective works for resale or redistribu-
tion, please go to http://www.ieee.org/publications_standards/publications/
rights/rights_link.html to learn how to obtain a License from RightsLink.
Chapter 4
Glueck,
M.,
Hamilton,
P.,
Chevalier,
F.,
Breslav,
S.,
Khan,
A.,
Wig-
dor, D., & Brudno, M. (2016).
PhenoBlocks:
Phenotype Comparison Visualizations.
IEEE Transactions on Visualization and Computer Graphics, 22 (1), 101–110
Chapter 5
Glueck,
M.,
Gvozdik,
A.,
Chevalier,
F.,
Khan,
A.,
Brudno,
M.,
&
Wigdor,
D.
(2017).
PhenoStacks:
cross-sectional
cohort phenotype comparison vi-
sualizations.
IEEE Transactions on Visualization and Computer Graphics,
23 (1),
191–200
Chaper 6
Glueck, M., Pakdaman Naeini, M., Doshi-Velez, F., Chevalier, F., Khan,
A.,
Wigdor,
D.,
& Brudno,
M. (2018).
PhenoLines:
Phenotype Comparison Visual-
izations for Disease Subtyping via Topic Models.
IEEE Transactions on Visualization
and Computer Graphics, PP (99), Preprint
vii
Contents
1
Introduction
1
1.1
Motivation .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
4
1.2
Research Challenges
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
6
1.2.1
Topology Simplification
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
6
1.2.2
Visual Comparisons .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
7
1.3
Research Objective
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
8
1.4
Contributions
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
12
1.5
Dissertation Organization
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
15
2
Background and Literature Review
17
2.1
Sensemaking .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
17
2.2
Computational Ontology .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
18
2.2.1
Definition of Computational Ontology
.
.
.
.
.
.
.
.
.
.
.
.
.
19
2.2.2
Computational Ontology Specification Languages
.
.
.
.
.
.
.
20
2.2.3
Scope of Conceptualization .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
20
2.2.4
Taxonomy vs Terminological Ontology
.
.
.
.
.
.
.
.
.
.
.
.
.
21
2.2.5
Computation on Ontology-Annotated Data .
.
.
.
.
.
.
.
.
.
.
22
2.3
Visualization and Visual Analysis
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
23
2.3.1
Visualization Pipeline
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
23
2.3.2
Visual Encoding .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
25
2.3.3
Spatial Organization
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
26
2.3.4
Visual Comparison .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
28
2.3.5
Topology Simplification
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
29
3
Case Study Background and Case Overview
31
3.1
Case Study Methodology .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
32
viii
3.2
Biomedical Domain .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
33
3.3
Human Phenotype Ontology .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
34
3.3.1
Phenotypes
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
37
3.3.2
Genetic Diseases
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
38
3.4
Overview of Case Studies .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
38
3.4.1
Diagnosis of Rare Genetic Diseases
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
38
3.4.2
Cross-Sectional Cohort Analysis .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
39
3.4.3
Disease Subtype Classification via Topic Models
.
.
.
.
.
.
.
.
40
4
PhenoBlocks
42
4.1
Introduction .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
42
4.2
Phenotypes in Medicine
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
45
4.2.1
Phenotype Granularity .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
45
4.3
Hierarchical Phenotype Data .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
45
4.3.1
Phenotype Similarity .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
46
4.3.2
Patient Phenotype Comparisons .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
46
4.4
Clinical Differential Diagnosis
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
47
4.4.1
Hard Handles
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
48
4.4.2
Existing Tools .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
48
4.4.3
Existing Workflow
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
49
4.4.4
Tasks .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
50
4.4.5
Workflow Improvements
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
52
4.5
Related Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
54
4.5.1
Visualization in Bioinformatics
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
54
4.5.2
Visualization in Healthcare .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
55
4.5.3
Ontology and Tree Comparison Visualization .
.
.
.
.
.
.
.
.
.
55
4.6
PhenoBlocks Tool Description .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
56
4.6.1
Patient Phenotype Data
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
57
4.6.2
Sunburst Visualizations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
57
4.6.3
Comparison Algorithms
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
63
4.7
Clinical Use Case Scenario .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
64
4.7.1
Collecting Phenotypes and Generating Hypotheses
.
.
.
.
.
.
64
4.7.2
Identifying Disconfirming Hard Handles .
.
.
.
.
.
.
.
.
.
.
.
.
66
4.7.3
Hypothesis Evaluation
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
67
ix
4.8
Informal Evaluation .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
68
4.9
Conclusion and Future Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
70
4.10 Acknowledgements
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
71
5
PhenoStacks
72
5.1
Introduction .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
73
5.2
Background and Related Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
74
5.2.1
Role of Phenotypes
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
75
5.2.2
Visualizations of Genetics Data
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
76
5.2.3
Cross-Sectional Analysis
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
77
5.2.4
Visualizations of Ontologies
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
77
5.3
Cross-Sectional Cohort Analysis .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
78
5.3.1
Barriers and Pain Points
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
78
5.3.2
Analysis Goals
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
79
5.3.3
High-Level Tasks
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
81
5.4
Design Process
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
81
5.4.1
Phenotype Distribution and Frequency .
.
.
.
.
.
.
.
.
.
.
.
.
82
5.4.2
Summarizing Phenotype Patterns
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
82
5.4.3
Sorting, Filtering, and Search
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
83
5.4.4
Phenotype Context and Relationships .
.
.
.
.
.
.
.
.
.
.
.
.
.
83
5.4.5
Lessons Learned .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
84
5.5
PhenoStacks Tool Description .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
85
5.5.1
Data Preparation .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
85
5.5.2
User Interface .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
86
5.5.3
Summarizing Patterns
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
88
5.5.4
Exploring Patterns
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
88
5.5.5
Finding Specifics
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
91
5.5.6
Ontology Topology Simplification .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
91
5.6
Expert Evaluations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
93
5.6.1
Usage Scenario Case Studies .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
94
5.6.2
General Feedback .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
98
5.6.3
Study Limitations .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
101
5.7
Conclusion and Future Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
102
5.8
Acknowledgements
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
102
x
6
PhenoLines
103
6.1
Introduction .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
104
6.2
Background and Related Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
106
6.2.1
Topic Models of Clinical Data .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
107
6.2.2
Visualizing Topic Models .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
107
6.2.3
Visualizing Longitudinal Medical Data
.
.
.
.
.
.
.
.
.
.
.
.
.
109
6.3
Co-operative Design Process
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
109
6.4
Disease Subtype Analysis .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
112
6.4.1
Clinical Data and Topic Models
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
112
6.4.2
Key Tasks
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
113
6.4.3
Existing Analysis Methods and Barriers
.
.
.
.
.
.
.
.
.
.
.
.
114
6.4.4
Benefits of Interactive Visualization .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
114
6.4.5
Visualization Tasks
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
115
6.5
Data Transformation Workflow .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
116
6.5.1
Mapping Topic Model Results to HPO .
.
.
.
.
.
.
.
.
.
.
.
.
116
6.5.2
Computing Summary Measures
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
117
6.6
PhenoLines Description .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
119
6.6.1
Compare Within Topics
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
119
6.6.2
Compare Between Topics .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
121
6.6.3
Filtering Phenotypes and Compressing Hierarchies .
.
.
.
.
.
.
122
6.7
Initial Evaluations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
124
6.7.1
Debugging and Refining
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
125
6.7.2
Characterization and Validation .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
127
6.8
Discussion and Limitations .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
130
6.9
Conclusion and Future Work .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
132
6.10 Acknowledgements
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
134
7
Ontology-Based Analytical Abstractions for Visualization
135
7.1
Ontology Specification
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
136
7.2
Data Transformation .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
137
7.3
Topology Simplification .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
141
7.4
Comparison Approaches
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
144
7.5
Application to Other Data Domains .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
148
7.5.1
MeSH .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
148
xi
7.5.2
Example Usage Scenario .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
150
7.5.3
Discussion .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
153
8
Conclusion
154
8.1
Summary
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
155
8.2
Limitations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
157
8.3
Reflections .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
158
8.4
Impact of Prototypes
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
160
8.4.1
Congenital Muscular Dystrophy .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
160
8.4.2
Myotubular Myopathy
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
161
8.4.3
Nemaline Myopathy
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
161
8.5
Future Research .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
162
8.6
Final Word
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
164
Bibliography
165
xii
List of Figures
1.1
Illustration of visualization pipeline
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
2
1.2
Ontology-based analytical abstraction .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
3
1.3
Example of data representations .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
4
1.4
Example of visual comparisons .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
8
1.5
Dissertation research roadmap .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
9
1.6
Ontology-based analytical abstractions for visualization .
.
.
.
.
.
.
.
12
1.7
Research path diagram .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
15
3.1
Munzner’s Nested Model of Design and Validation .
.
.
.
.
.
.
.
.
.
.
32
3.2
Human Phenotype Ontology .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
35
4.1
PhenoBlocks– Example visualization
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
44
4.2
PhenoBlocks– Differential hierarchy computation
.
.
.
.
.
.
.
.
.
.
.
47
4.3
PhenoBlocks– Nine comparisons classes .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
47
4.4
PhenoBlocks– Icons for HPO categories .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
58
4.5
PhenoBlocks– User interface .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
59
4.6
PhenoBlocks– Visual encoding .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
62
4.7
PhenoBlocks– Use case scenario examples
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
65
4.8
PhenoBlocks– Use case scenario details
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
68
5.1
PhenoStacks– User interface
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
75
5.2
PhenoStacks– Data transformation
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
86
5.3
PhenoStacks– Data labelling .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
86
5.4
PhenoStacks– Visual encoding .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
89
5.5
PhenoStacks– Example sorting .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
90
5.6
PhenoStacks– Example hierarchy representations
.
.
.
.
.
.
.
.
.
.
.
92
5.7
PhenoStacks– Redundancy elimination algorithm .
.
.
.
.
.
.
.
.
.
.
92
xiii
5.8
PhenoStacks– Example of pattern analysis
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
96
5.9
PhenoStacks– Example of clustering .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
99
6.1
PhenoLines– User interface .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
106
6.2
PhenoLines– Example SNR distribution
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
119
6.3
PhenoLines– Visual representations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
120
6.4
PhenoLines– Summary measure encodings
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
122
6.5
PhenoLines– Arc length variations .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
122
6.6
PhenoLines– Hierarchy filtering and compression .
.
.
.
.
.
.
.
.
.
.
.
123
7.1
Example ontology specification as an edge list
.
.
.
.
.
.
.
.
.
.
.
.
.
136
7.2
Illustration of example ontology as a directed-acyclic graph .
.
.
.
.
.
137
7.3
Ontology describes additional attributes
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
137
7.4
Example of data annotated with ontology entities
.
.
.
.
.
.
.
.
.
.
.
138
7.5
Transformation of data into graph representation
.
.
.
.
.
.
.
.
.
.
.
138
7.6
Process of inference using ontology relations
.
.
.
.
.
.
.
.
.
.
.
.
.
.
139
7.7
Unification of graph representations of data
.
.
.
.
.
.
.
.
.
.
.
.
.
.
139
7.8
Unified data representation using OAAV .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
140
7.9
Example of multiple-inheritance .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
141
7.10 Example of level-of-detail control (general)
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
143
7.11 Example of level-of-detail control (specific)
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
143
7.12 Example of level-of-detail control (compression)
.
.
.
.
.
.
.
.
.
.
.
.
143
7.13 Example of pairwise comparison encoding
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
145
7.14 Example of pairwise comparison visualization
.
.
.
.
.
.
.
.
.
.
.
.
.
145
7.15 Example of many-to-many comparison encoding .
.
.
.
.
.
.
.
.
.
.
.
146
7.16 Example of many-to-many comparison visualization .
.
.
.
.
.
.
.
.
.
146
7.17 Example of frequency encoding
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
147
7.18 Example of frequency visualization
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
147
7.19 Example of trend and attribute visualization .
.
.
.
.
.
.
.
.
.
.
.
.
.
147
7.20 Example of MeSH ontology structure
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
149
7.21 Example of MeSH trend analysis (MMR) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
151
7.22 Example of MeSH trend analysis (Secretin) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
152
xiv
Chapter 1
Introduction
Domain experts often study phenomena by performing analyses on recorded mea-
surements and observations.
This process is not trivial,
as the phenomena can be
complex and ill-defined, with measurements and observations subject to uncertainty.
In order to interpret meaning from the results of
analyses,
domain experts engage
in sensemaking by drawing on tacit domain knowledge (i.e.,
mental
models of
the
domain and phenomena).
Visualizations can support sensemaking activities by harnessing the power of hu-
man visual perception to enable data interpretation:
visualizations facilitate reason-
ing and understanding (Card et al.
1999;
Keim et al.
2008),
reveal
patterns and
relationships in the data (Bertin 1967; Cleveland 1985), and support hypothesis-free
explorations (Tukey 1977).
To facilitate interpretation in domain specific analyses,
data should be contextualized through a visual representation that reflects the mental
model of domain experts (Keller & Tergan 2005).
Herein lies a challenge for visual-
ization designers.
Mental models are based on tacit domain knowledge which can be
difficult for visualization designers to effectively elicit when collaborating with domain
experts (Sedlmair et al. 2012).
The structure of domain knowledge can be expressed through a terminological on-
tology
1
, a formal specification of domain concepts using entities (e.g., types of things)
and relationships (e.g.,
how things relate to each other).
Terminological
ontologies
are used to classify instances of concepts (e.g.,
things in the real
world) by express-
1
The concept of a computational ontology was first proposed by Gruber (1993; 1995).
Termino-
logical ontology was defined by Madsen & Thomsen (2008) to describe a subclass of computational
ontology that encodes domain knowledge for the purposes of classification.
1
Chapter 1.
Introduction
2
ing hierarchical
relationships.
Commonly used relationships include subsumption,
which describes when an entity is a subclass of a more general
concept (e.g.,
bicep
“is-a” muscle) or meronymy,
which describes when an entity is a part of
another
concept (e.g., nose is “part-of” face).
Further, multiple-inheritance relationships are
supported,
meaning that an entity can be related to more than one parent.
Termi-
nological ontologies are externalizations of the mental models of domain experts.
A terminological ontology is more than an abstract conceptualization; it is machine-
readable and can be represented as a directed-acyclic graph (DAG), where concepts
are subgraphs,
entities are nodes,
and relationships are edges.
Data collected about
instances of concepts can be linked to associated entities to create ontology-annotated
data.
By linking data with entities, computational approaches on ontology-annotated
data can access the related hierarchical
relationships encoded by the terminological
ontology.
Although terminological ontologies are often applied to such computational
analyses, the use of terminological ontologies to visualize ontology-annotated data has
not been systematically explored (Carpendale et al. 2014).
The sequence of steps that transform data into a visualization has been conceptu-
alized by the visualization pipeline (Card & Mackinlay 1997) (Fig. 1.1).
This process
involves three transformations.
First, a data transformation parses unstructured in-
put data and creates a structured representation (e.g.,
hierarchical
data structure).
This structured representation enables further data processing (e.g., filtering, cluster-
ing) and data enrichment (e.g.,
adding metadata).
Second,
a visual
transformation
casts the structured representation into a visual representation (e.g., treemap).
The
visual transformation defines how the data is spatially organized and visually encoded
in the visualization.
Third,
a view transformation renders the visual
representation
as geometry that can be displayed to the user.
The view transformation enables user
interaction with the rendered presentation (e.g., navigation, selection, sorting).
Figure 1.1:
Illustration of the visualization pipeline (adapted from Card et al. (1999)).
Chapter 1.
Introduction
3
Structured representations are typically tightly coupled with visual
representa-
tions:
a data table is used for matrix visualization,
a hierarchical
data structure is
used for treemap visualization, and a graph data structure is used for node-link net-
work visualization.
An analytical
abstraction was proposed by Chi & Riedl (1998) to
describe a generalized data structure that is decoupled from the visual representation
(e.g.,
a collection of word vectors extracted from text).
Analytical
abstractions are
complementary to the visualization pipeline,
as they can be transformed into struc-
tured representations.
But their decoupled nature enables additional
computation
and analysis on the input data to produce derived measures (e.g.,
results of simula-
tion based on input data) or operations on the data structure to produce alternate
structured representations (e.g.,
traversal
of a graph-based analytical
abstraction to
produce an ordered set).
In this dissertation, I extend the concept of an analytical abstraction to the chal-
lenge of visualizing ontology-annotated data.
An ontology-based analytical abstraction
is based on the fusion of
ontology-annotated data and the relationships implied by
the terminological ontology;
unifying data with domain entities and relationships in
an explicit DAG-based representation (Fig. 1.2).
This research focuses on integrating
Figure 1.2:
Domain phenomena are conceptualized through a terminological ontology.
Quantitative measurements or non-quantifiable observations of the phenomena result
are recorded as data points.
Associating data points with entities from the termi-
nological
ontology produces ontology-annotated data.
An ontology-based analytical
abstraction fuses ontology-annotated data with the entities and relationships implied
in the terminological
ontology,
thereby reconstructing an explicit representation of
data points within the domain context modelled by the terminological ontology.
Chapter 1.
Introduction
4
ontology-based analytical abstractions into the visualization pipeline through trans-
formations into structured representations that facilitate the sensemaking activities
of
domain experts.
To achieve this goal,
case studies were used to address specific
analysis challenges of domain experts, and the outcomes were integrated into a unified
approach.
1.1
Motivation
A number of visual representations could be used to communicate different aspects of
the same data.
For example, population data could be visualized using a cartograph
or as histograms (Fig.
1.3).
The geographic representation explicitly contextualizes
geospatial
relationships,
but outliers may be hard to identify if
they are rendered
too small
to see on the map.
On the other hand,
histograms reveal
details of
the
distribution,
but interpretation requires an understanding of
the data domain and
statistics.
The appropriateness of
any given visual
representation is dependent on
the expertise of the domain expert and the goals of the analysis.
If an inappropriate
visual representation is chosen, the context of observation may be obscured, and could
result in misinterpretation.
Domain experts are not typically visualization experts, and may lack the techni-
cal expertise to select visual representations that contextualize their data.
If data is
Figure 1.3:
The same data can be visualized using different visual
representations.
Population data can be (A) aggregated by geography (e.g.,
census tracts) superim-
posed on a cartograph, or (B) stratified by attributes (e.g., age and sex) and displayed
using histograms.
While the cartograph provides meaningful
context for geospatial
analyses, the histogram more clearly reveals details of overall distribution.
Chapter 1.
Introduction
5
represented with insufficient context, the cognitive load of interpretation is offloaded
to the domain expert making use of the tool, hindering the effectiveness of the visu-
alization in supporting sensemaking.
Although one solution may be to handoff the data to a visualization expert for the
development of a customized representation, this too is troublesome, as a deep under-
standing of the domain and analysis goals is critical to selecting an appropriate visual
representation (Sedlmair et al.
2012).
Despite their expertise,
domain experts may
not be able to communicate all relevant tacit knowledge to visualization designers.
Another solution is to empower domain experts to mix and match a variety of
visual
representations in real-time (e.g.,
multidimensional
data (Stolte et al.
2002),
time series (Zhao et al. 2011)) or support end-user programming (Breslav et al. 2014).
Although this can result in flexible generalized tools,
it also places the onus on the
domain expert to configure a meaningful context for their data.
This can be difficult
for those who do not possess the necessary knowledge to effectively combine visual
representations to address their analysis goals.
In the ideal scenario, domain experts would work closely with visualization design-
ers to develop effective visual
representations (Kirby & Meyer 2013;
Sedlmair et al.
2011; Sedlmair et al. 2012).
This allows the expertise and viewpoints of both stake-
holders to be valued and become part of the design process.
Successful collaborations
have yielded domain- and analysis-specific methods of data transformation and visual
transformation (e.g.,
discourse analysis (Zhao et al.
2012),
genome sequence assem-
blies (Nielsen et al.
2009),
coronary artery disease detection (Borkin et al.
2011)),
but these methods are typically not generalizable to data in different domains.
A
review of visualization collaborations in the wild identified 32 potential pitfalls that
could hinder collaborative efforts (Sedlmair et al. 2012).
One of the most difficult to
accommodate is the level of communication and investment of time required for do-
main and visualization experts to establish a common ground understanding (Kirby
& Meyer 2013; Shneiderman & Plaisant 2006).
Ontology-based analytical abstractions could help bridge the disconnect between
domain experts and visualization designers by serving as a shared artifact that pro-
vides common ground.
The DAG-based topology of
the ontology-based analytical
abstraction is familiar to visualization designers, while the entities and relationships
of the associated terminological
ontology are familiar to domain experts.
Visualiza-
tion designers can focus on defining transformations into structured representations
Chapter 1.
Introduction
6
and developing computational
approaches based on the topology and encoded se-
mantic relationships.
Domain experts can assess the validity of visual representations
and provide feedback using a familiar terminology and mental
model.
While this
does not alleviate the need to study and understand the analysis tasks of domain ex-
perts, ontology-based analytical abstractions can provide a foundation around which
discussions and prototype design can be initiated.
Moreover, since the use of termino-
logical ontologies has been embraced in many domains (e.g., biomedical informatics),
methods developed for terminological ontologies in one domain could be generalized
to those in other domains.
1.2
Research Challenges
This thesis addresses two key challenges of using ontology-based analytical
abstrac-
tions for visualization:
simplifying the topology for visual representation, and demon-
strating the encoded domain semantics could address visual comparisons in the anal-
ysis tasks of
domain experts (i.e.,
through computation of
derived measures and
transformation into structured representations).
1.2.1
Topology Simplification
Ontology-based analytical abstractions utilize a DAG-based representation of ontology-
annotated data within the relationships defined by a terminological
ontology.
This
DAG topology could be applied to visualize ontology-annotated data through spatial
organizations that contextualize the data in alignment with the mental
models of
domain experts.
However, visualizing this topology is not without challenges.
Termi-
nological ontologies often include tens of thousands of entities and can define complex
relationships (e.g., multiple-inheritance).
When visualized as node-link networks, the
complexity of these relationships can be difficult to visually interpret (Graham et al.
2000).
Hierarchical
visualizations are more commonly employed (Carpendale et al.
2014;
Katifori
et al.
2007),
but require topological
transformations to convert the
DAG topology into a strict hierarchy (e.g.,
duplicating entity subgraphs with mul-
tiple parents).
Due to these recursive duplications,
the resulting hierarchy can have
exponentially more entities than the original
DAG.
Although generalized methods
have been developed to simplify complex graph topology for visualization (Elmqvist
Chapter 1.
Introduction
7
& Fekete 2010),
these consider only the topology and entity values,
and not the se-
mantics of
the relationships.
These methods may not yield results that maintain
the necessary relationships to appropriately contextualize ontology-annotated data.
There is a need for terminological ontology oriented methods to simplify the topology
of ontology-based analytical abstractions to visualize ontology-annotated data.
1.2.2
Visual Comparisons
Domain experts are most likely to benefit from visualizations of ontology-annotated
data when multiple records are involved.
Consider the case when an analysis concerns
a set of records, each containing ontology-annotated data.
The goals of these analyses
might be to compare the similarities and differences between the records, or to identify
patterns or trends across the records.
These are all examples of where visual compar-
isons can help to achieve analysis goals.
In this scenario,
each data record could be
represented as a hierarchical structure based on the relationships of the terminologi-
cal ontology.
Visual comparison is a core task in visualization (Brehmer & Munzner
2013) and is particularly challenging when comparing hierarchical
data (Graham &
Kennedy 2010).
The scope of the present work is to investigate analysis tasks that
involve visual comparisons.
Visualization involves transforming data into visual
representations through two
complementary processes.
First,
data points are mapped to visual
variables (e.g.,
length, colour) through visual encoding (e.g., quantitative value as length, categorical
value as colour).
Second,
data relationships are communicated through a spatial
organization of
visual
variables (e.g.,
matrix,
hierarchy) or visual
representations
(e.g.,
side-by-side arrangement).
Both spatial
organization and visual
encoding are
used to support visual
comparisons.
Spatial
organization can be used to arrange
visual representations to support comparisons through juxtaposition or superposition
(Fig. 1.4A,B). Alternately, visual encoding can be used to explicitly represent derived
measures to represent specific comparisons (Fig. 1.4C,D). When using juxtaposition
or superposition, a domain expert could mentally calculate the difference between the
two timeseries, but also identify when the maximum value occurs.
Explicit encoding
makes one comparison immediately visible, such as the difference or relative variation,
but sacrifices other comparisons.
When designing visualizations for domain experts with well defined analysis goals,
Chapter 1.
Introduction
8
Figure 1.4:
Examples of different visual comparison strategies:
(A) juxtaposition, (B)
superposition, (C) explicit encoding of values, and (D) explicit encoding of relation-
ships (adapted from Gleicher et al. (2011)).
sensemaking would benefit from more explicit encoding of comparisons, since this re-
duces cognitive load.
Since ontology-based analytical
abstractions provide access
to domain semantics,
computation on the relationships may be appropriate to sup-
port visual
comparisons.
This application of ontology-based analytical
abstractions
presents an opportunity to develop visual comparisons that more directly address the
analysis goals of domain experts, and thereby facilitate sensemaking.
1.3
Research Objective
The research objective of this thesis was to:
Identify domain specific analysis challenges that could benefit from termi-
nological ontology, and improve such analyses by developing visual compar-
isons of ontology-annotated data via ontology-based analytical
abstraction
to support sensemaking.
To achieve this objective,
the roadmap of
this dissertation followed two non-
orthogonal, yet complementary trajectories:
topology simplification and visual com-
parison (Fig.
1.5).
Along each trajectory,
three research problems were identified.
First, the Topology Simplification trajectory tackled the creation of a Unified Rep-
resentation to merge multiple records of ontology-annotated data for computational
analysis, and topology simplification approaches to address the breadth (Redundancy
Elimination) and depth (Level-of-Detail
Control ) of
the ontology-based analytical
abstraction.
Second, the Visual Comparison trajectory investigated three different
Chapter 1.
Introduction
9
Figure 1.5:
The research in this dissertation follows two complementary trajectories:
Topology Simplification and Visual
Comparison.
Three case studies were situated
within this space to address the requirements of increasing data complexity and types
of
visual
comparisons (PhenoBlocks,
PhenoStacks,
PhenoLines).
The outcomes of
each case study contributed to and were unified in OAAV.
visual
comparison tasks,
including Pairwise Comparison,
Many-to-Many Compari-
son, and Trend Comparison.
Based on this problem space, three case studies in the
biomedical domain were situated at intersections between the two trajectories (Phe-
noBlocks,
PhenoStacks,
PhenoLines).
Each case study represented an increase in
the size of data,
from fewer than 10 records,
to 10s of records,
to 1000s of records.
Task analyses were performed to identify spatial organizations and visual encodings
appropriate in each case study.
The outcomes of the three case studies contributed
to Ontology-based Analytical
Abstractions for Visualization (OAAV ),
a unified ap-
proach for visualizing ontology-annotated data via ontology-based analytical abstrac-
tion.
These two trajectories are not orthogonal, but rather complementary.
The topol-
ogy simplification trajectory represents the progressive development of
methods to
address the changing requirements as the size of data increased in each case study.
The comparison trajectory represents the coverage of independent visual comparison
Chapter 1.
Introduction
10
tasks that were addressed via the ontology-based analytical
abstraction.
Although
the topology simplification methods could be applied to any of the comparison types,
the intersections were selected opportunistically to support progressive development
of the topology simplification methods.
A single domain and terminological
ontology was selected to conduct the case
studies so that the outcomes of each case study could be applied to subsequent case
studies.
The domain of biomedical informatics was selected because it has embraced
the development of terminological ontologies (Carpendale et al. 2014).
A terminologi-
cal ontology of phenotypes was chosen after identifying a lack of visualization research
that addressed these analysis challenges.
In what follows, the research problems of each trajectory are summarized.
Topology Simplification
1.
Unified Representation — How can terminological
ontology relationships be
used to unify disjoint ontology-annotated data for visual
comparison?
By investigating a differential diagnosis task for rare genetic diseases, an ontology-
based analytical
abstraction was
developed to represent
ontology-annotated
data using a terminological
ontology of phenotypes.
Methods were developed
to unify phenotype data from a set of patients and computational inference was
used to complete the coverage of data in the ontology-based analytical abstrac-
tion (Chapter 4).
2.
Redundancy Elimination — How can the breadth of
the topology
2
due to
multiple-inheritance be eliminated, while maintaining detail?
By investigating a cross-sectional
cohort
analysis
task for
rare genetic dis-
eases, a method of eliminating the topological redundancy caused by multiple-
inheritance was developed, reducing the breadth when representing phenotypes
hierarchically.
This method used a phenotype importance score based on the
relationships of
the terminological
ontology.
Further,
a method of
extracting
unique clusters of
phenotypes from the ontology-based analytical
abstraction
were developed (Chapter 5).
2
Here, and in the remainder of this section, topology refers to the topology of the ontology-based
analytical abstraction.
Chapter 1.
Introduction
11
3.
Level-of-Detail
Control — How can the depth of the topology be minimized
to provide generalized overviews while still
preserving details?
By investigating a genetic disease subtyping task via topic models,
a method
of
controlling level-of-detail
was developed,
compressing the depth when rep-
resenting phenotypes hierarchically,
while maintaining details.
This method
used a computed phenotype relevance score based on the relationships of
the
terminological ontology (Chapter 6).
Visual Comparison
1.
Pairwise Comparison — How can similarities and differences be explicitly
encoded to facilitate pairwise comparison?
To support a differential diagnosis task for rare genetic diseases, the ontology-
based analytical abstraction was transformed into a hierarchy for visualization.
A method for computing a diagnostic significance score was developed using
the relationships of the terminological ontology.
Visual encoding methods were
developed to explicitly encode pairwise comparisons of
non-quantifiable phe-
notype observations and the diagnostic significance score to guide differential
diagnosis toward salient patient symptoms (Chapter 4).
2.
Many-to-Many Comparison — How can patterns in the data be explicitly
encoded to facilitate many-to-many comparisons?
To support a cross-sectional
cohort analysis task for rare genetic diseases,
the
ontology-based analytical abstraction was transformed into a hybrid hierarchy
and matrix visualization.
The hierarchy was used to categorize and cluster
phenotypes in the matrix.
Visual encoding methods were developed to explicitly
encode phenotype observations across multiple hierarchical
levels in a single
column of the matrix visualization (Chapter 5).
3.
Trend Comparison — How can temporal
trends in the data be explicitly en-
coded to facilitate comparisons?
To support a disease subtyping task via topic models, the ontology-based ana-
lytical abstraction was transformed into hierarchy, scatterplot, time line chart,
and rank-ordered list visualizations.
Visual
encoding methods were developed
to explicitly encode temporal trends and summaries of phenotypes (Chapter 6).
Chapter 1.
Introduction
12
Generalization
1.
Can visual comparison via ontology-based analytical abstraction be applied ontology-
annotated data from other domains?
The topology simplification and visual
comparison methods developed in the
case studies were unified and applied to example data from another domain
(Chapter 7).
1.4
Contributions
In contrast to much visualization research, where the goal is to develop novel visual
representations, the contributions of this thesis are situated in the data space of the
visualization pipeline (Fig.
1.6).
The visual
representations in this work build on
previously published visualization techniques.
This dissertation contributes Ontology-based Analytical Abstractions for Visual-
ization (OAAV), a unified approach to data transformation that uses a terminological
ontology to transform ontology-annotated data into an ontology-based analytical ab-
straction.
Incorporating the tacit domain knowledge captured by the terminological
ontology enabled data to be visualized within the context of
observation and align
to the mental
model
of domain experts.
The case studies and resulting prototypes
demonstrated the utility of the ontology-based analytical abstractions in supporting
Figure 1.6:
Illustration of the visualization pipeline with the data flow of the unified
approach presented in this thesis (OAAV) superimposed in orange.
In OAAV,
data
is first transformed into an ontology-based analytical
abstraction,
prior to transfor-
mation into a structured representation.
This additional step enables terminological
ontology semantics to be integrated into the visualization pipeline.
Chapter 1.
Introduction
13
the sensemaking activities of
domain experts studying genetic diseases.
On-going
deployment of PhenoStacks after the case study work contributed to a journal pub-
lication in the medical domain (Amburgey et al. 2017).
OAAV can be applied to vi-
sualizing ontology-annotated data in other domains, as demonstrated through proof-
of-concept example for the analysis of medical publications.
Topology Simplification of Ontology-based Analytical Abstractions
This is the first systematic approach to simplifying ontology structure for use in
visualizing ontology-annotated data in the biomedical domain.
A significant barrier to
using terminological ontologies in visualization is that they are topologically complex.
The specific visualization problems tackled in each case study contributed toward a
unified approach for simplifying ontology structure for use in visualizations (OAAV).
The breadth and depth of
the ontology structure can be controlled based on the
requirements of a user task.
This promotes the flexible use of terminological ontologies
to address a variety of visualization problems.
A method of unifying disparate ontology-annotated data into an ontology-based
analytical
abstraction facilitates the computation of
derived measures and explicit
comparisons.
The relationships encoded in the terminological
ontology enable non-
overlapping ontology-annotated data to be merged and unified.
Due to multiple-
inheritance,
the topology can contain many redundancies when transformed into
structured representations.
A method for automatically eliminating these redun-
dancies simplifies the structure while preserving the depth of
the hierarchy.
For a
given task, only parts of the terminological ontology may be of interest, so methods
based on graph-cuts enable users to control the desired level-of-detail.
Each case study considered increasingly larger datasets.
Focusing on the medi-
cal
domain,
the techniques have been applied to fewer than 10 patients,
many 10s
of
patients,
and 1000s of
patients.
At a high-level,
this unified approach supports
the application of terminological ontology in visualizations to compare and interpret
ontology-annotated data.
Visual Comparisons through Spatial Organization & Visual Encoding
Throughout the case studies,
I developed a variety of methods to explicitly encode
pairwise,
many-to-many,
and temporal
trend comparisons in visualizations.
While
Chapter 1.
Introduction
14
these methods were developed for specific tasks,
similar visual
encodings may be
applied to similar comparison tasks in other domains.
Pairwise comparisons are facilitated by differential
views that encoded the sim-
ilarities and differences between two ontology-annotated data records.
A notable
difference of this technique over prior work is that the source of the difference is also
encoded.
Thus, it is possible to identify the data record in which a specific difference
originates.
A colour encoding scheme communicated both the type of
difference in
terms of ontology semantics and communicated the relative importance of the differ-
ence using an ontology-based relevance score.
To support many-to-many comparisons, a method of transforming ontology-based
analytical
abstractions into a single dimension was developed to visualize ontology-
annotated data recorded at different levels of
the hierarchy.
This method focused
on visualizing patterns among the most detailed data within a sortable matrix.
Ag-
gregated summaries of all the graph abstractions were also calculated and displayed
within the context of
the terminological
ontology to visualize patterns across the
hierarchical structure.
Temporal comparisons were supported by developing methods of summarizing and
aggregating temporal trends across a set of ontology-annotated data records.
Meth-
ods for transforming the ontology-based analytical
abstraction into time series rep-
resentations, scatterplots, and rank-ordered lists were developed to provide different
perspectives on the data.
This demonstrated that a single ontology-based analyti-
cal
abstraction could be used to represent ontology-annotated data in a variety of
traditional visual representations.
Domain-Specific User Tasks
In each case study,
I analyzed the tasks and requirements of
domain-specific anal-
ysis problems.
These task analyses may be useful
for other researchers seeking to
develop tools for similar domains.
I provide analyses for tasks in the medical domain,
including differential
diagnosis,
cross-sectional
cohort analysis,
and disease subtype
identification using the task typology of Brehmer & Munzner (2013).
These align to
more general tasks of describing individual characteristics, describing group patterns,
and describing temporal trends.
Chapter 1.
Introduction
15
1.5
Dissertation Organization
The remainder of this thesis is organized as follows (Fig. 1.7):
Chapter 2 motivates the approach presented in this dissertation through a discus-
sion of relevant related work from the domains of cognition, computational ontology,
and visualization.
Chapter 3 introduces case study background, describes the case study methodol-
ogy, and summarizes the three case studies that informed the development of OAAV.
Chapter 4 describes the first case study which investigated the task of clinical
differential diagnosis for rare diseases, resulting in PhenoBlocks, the method of unified
representation, and explicit encoding of pair-wise comparisons.
Chapter 5 describes the second case study which investigated the task of cross-
sectional cohort analysis, resulting in PhenoStacks, the method of redundancy elimi-
nation, and explicit encoding of many-to-many comparisons.
Chapter 6 describes the third case study which investigated the task of disease
subtype analysis via topic models, resulting in PhenoLines, level-of-detail control, and
explicit encoding of temporal trends.
Figure 1.7:
Illustration of
the research path showing case studies,
prototypes,
and
main results.
Chapter 1.
Introduction
16
Chapter 7 describes a generalization of the approaches of data transformation
and visual
transformation developed in the case studies.
I
also demonstrate the
application of OAAV to the analysis of medical publications.
Chapter 8 summarizes the dissertation, discusses limitations, suggests directions
for future work, and reports on the longer-term impact of PhenoBlocks and PhenoS-
tacks, which continued to be used in medical research projects.
Chapter 2
Background and Literature Review
The work in this dissertation builds upon literature in the domains of
cognition,
computational ontology, and visualization.
2.1
Sensemaking
In the literature,
the word sensemaking has been used to refer to a variety of
cog-
nitive processes,
such as creativity,
curiosity,
comprehension,
situational
awareness,
and mental
representation (Klein et al.
2006).
In the domain of
human-computer
interaction,
Russell
et al.
(1993) defined sensemaking as “searching for a represen-
tation and encoding data in that representation to answer task-specific questions.”
This definition aligns to the perspective that sensemaking is a process that produces
a mental representation, or mental
model
(Gentner & Stevens 1983).
Mental
models
1
are internal
representations that depict our understanding of
a
particular system or domain — the concepts, principles, and knowledge (Klein et al.
2006).
Mental
models are dynamic and evolve with learning (Johnson-Laird 1983).
As we use mental
models to explain the phenomena we encounter,
we update our
understanding based on our observations and experiences.
Mental models are never
complete,
nor need they be;
they are created to and extended based on the specific
requirements of the problem solving task at hand (Johnson-Laird 1983).
The theory of distributed cognition (Hutchins 1995) has been adopted to frame
1
Rumelhart & Norman (1983) discriminated between different aspects of domain knowledge, such
as conceptual knowledge, procedural knowledge, and analogical representations, among others.
For
the purposes of this discussion, I use mental model to refer to schematized conceptual knowledge.
17
Chapter 2.
Background and Literature Review
18
sensemaking in human-computer interaction (Hollan et al. 2000) and information vi-
sualization (Liu et al.
2008).
According to this theory,
sensemaking is not limited
to an internal
process based only on mental
models,
but rather emerges through
perceptual
processes acting on both internal
representations and external
represen-
tations (Yi
et al.
2008;
Zhang & Norman 1994).
An external
representation could
be a formalized abstraction (e.g.,
logical
expression),
or a diagram that describes
relationships (e.g.,
a concept map),
or a visualization of
data.
The process of
ex-
ternalization is a means of decomposing a problem into the component parts,
such
as variables,
parameters,
and elements (Heuer 1999).
Through user studies,
Zhang
& Norman (1994) demonstrated how different external
representations of
the same
problem definition could activate different internal
representations,
and resulted in
different cognitive approaches to solving the same reasoning problem.
The qualities of
the external representation were found to impact both completion time and success in
problem solving, helping or hindering the process of sensemaking.
Similar empirical
results have also been reported in case studies (Greeno 1983).
As the mental model evolves, so too should the corresponding external representa-
tion.
This dynamic interplay of internal and external representations is fundamental
to information foraging (Pirolli
& Card 2005),
which describes sensemaking as an
iterative combination of bottom-up processes to define internal schemas of the data,
and top-down processes to produce explanations using these schemas.
The concept
of
schemas align to mental
models.
External
representations evolve as part of
the
sensemaking process,
in order to aid memory,
offload cognitive effort,
and structure
cognitive behaviour (Zhang & Norman 1994).
In this work,
I focus on two forms of mental
model
external
representation:
ab-
stract, through ontology, which formalizes the conceptual knowledge they represent,
and concrete, through visualizations, to communicate knowledge to others (Burkhard
2005).
In the remainder of this chapter, I describe each and discuss relevant work in
the literature.
2.2
Computational Ontology
The first form of
mental
model
external
representation is an abstract,
conceptual
representation of knowledge captured by computational ontology.
The word “ontology” finds its roots in the study of philosophy,
where it is used
Chapter 2.
Background and Literature Review
19
to describe a system of
reasoning about the nature and structure of
reality (i.e.,
metaphysics).
The concept of a computational
ontology was first defined in 1993 by
Gruber (1993; 1995), who proposed it as an approach to knowledge representation for
computational purposes (e.g., artificial intelligence algorithms).
A computational on-
tology is a machine-readable specification that defines the variables (e.g., classes and
attributes) and establishes relations (e.g.,
relationship types) necessary to represent
knowledge for a set of computations.
In this section,
I define computational
ontology and describe specification lan-
guages.
I address the scope of computational ontologies used in this dissertation and
differentiate taxonomy and terminological ontology.
Finally, I review computational
approaches to analyzing ontology-annotated data in the biomedical domain.
2.2.1
Definition of Computational Ontology
Studer et al. (1998) extended Gruber’s original definition:
a computational ontology
“is a formal, explicit specification of a shared conceptualization.”
A conceptualization refers to a description of the entities, concepts, and their in-
terrelationships for some area of interest, following the definition given by Genesereth
& Nilsson (1987).
Conceptualizations are closely tied to the domain and intended use
of
a computational
ontology,
and as such even computational
ontologies that focus
on the same domain and use the same terminology may differ in their conceptualiza-
tions (Guarino 1998).
A conceptualization is considered shared because it is developed
by a community and reflects consensus.
Formal
specification is the requirement of
symbolic expression and logical
con-
sistency.
Explicit specification is the requirement that all aspects of the conceptual-
ization,
including any assumptions,
are clearly described and defined.
For example,
computational
ontologies build upon controlled vocabularies that explicitly define
terms,
and often specify logical
rules that describe class membership criteria and
constraints.
Both formal and explicit specification are critical from a computational
standpoint,
since these are requirements for the development and testing of
robust
algorithms.
These qualities enable ontologies to support logical reasoning about the
relationships between concepts (e.g.,
shared functionality,
similarity).
However,
the
exercise of
specification is also beneficial
to humans working in a domain,
since it
induces a thorough and precise examination of domain knowledge.
Chapter 2.
Background and Literature Review
20
2.2.2
Computational Ontology Specification Languages
In efforts to support the Semantic Web
2
,
the World Wide Web Consortium con-
tributed several standards to support the conceptual modelling and description of in-
formation (Decker et al. 2000).
The current versions of these specification standards
include Resource Description Framework (RDF),
Resource Description Framework
Schema (RDFS), and Web Ontology Language (OWL). RDF is a data model defined
with subject-predicate-object triples,
which can be used to specify conceptual
mod-
els
3
.
RDFS builds on the RDF data model to define basic elements for the structured
representation of knowledge, including classes, data types, and relational properties.
The Web Ontology Language (OWL) extends the basic elements in RDFS to encode
the expressiveness required to formalize a computational ontology (i.e.,
axioms that
express semantic and logical relationships).
These open standards for specification of
data models have enabled computational ontologies to be developed and distributed.
2.2.3
Scope of Conceptualization
There are many benefits to the use of computational ontologies, such as supporting a
common understanding of information structure, reusing domain knowledge, making
domain assumptions explicit, separating domain knowledge from operational knowl-
edge, and analyzing domain knowledge.
For these reasons, computational ontologies
have been adopted in a variety of domains, such as artificial intelligence, the Semantic
Web, library science, systems engineering, and biomedical informatics.
Ontology has
also been proposed as an approach to aid problem solving by formalizing the problem
domain and constraints to aid reasoning (Greeno 1983).
The scope of a conceptualization may address different levels of abstraction (e.g.,
top-level,
domain,
task) (Guarino 1998).
Top-level
ontologies conceptualize general
concepts (e.g.,
time,
space),
or formalize types of
relationships,
such as subclass
“is-a” (i.e.,
subsumption) or “part-of” (i.e.,
meronymy) relationships.
Domain and
task ontologies specialize these top-level
concepts into vocabulary and concepts for
2
The Semantic Web refers to the vision of machine-readable, structured information on the World
Wide Web to make the reuse, exchange, and integration of the information available to automated,
computational approaches.
3
While object-oriented models typical
use entity-attribute-value definitions,
RDF uses an ex-
plicitly more abstract representation.
While this adds significant overhead to data models,
it also
ensures extensibility of expressiveness.
Chapter 2.
Background and Literature Review
21
specific domains (e.g., genes, phenotypes) or tasks (e.g., diagnosis).
Madsen & Thom-
sen (2008) further differentiate domain ontologies based on their characteristics (e.g.,
domain specificity,
task specificity,
relationship types),
and propose “terminological
ontologies” as a formalization of
domain specific classification systems (i.e.,
taxon-
omy).
In this work,
I focus on applications of
terminological
ontologies to domain
specific analysis problems, and will use the term “domain knowledge” to refer to the
conceptualization of a terminological ontology.
2.2.4
Taxonomy vs Terminological Ontology
Terminological ontology is a subclass of computational ontology that encodes domain
knowledge for the purposes of classification (Madsen & Thomsen 2008).
In domain
applications, terminological ontologies are most often applied to classification and the
specification of subclass relationships, similar to taxonomy (e.g., biomedical informat-
ics (Stevens & Lord 2009)).
However, unlike taxonomy, terminological ontology pro-
vides a more robust and formalized approach to defining these representations (Poli
& Obrst 2010).
Both taxonomies and terminological
ontologies induce structure on
terms defined in controlled vocabularies.
However, taxonomies lack the logical rigour
that is fundamental to terminological ontologies.
The relationships between entities
in terminological ontologies are explicitly defined, while in taxonomies, these relation-
ships are merely implied; there are no strict logical definitions, nor are there axioms
to ensure adherence in applying the relationships.
A taxonomy may use subclass relationships,
but it is not guaranteed,
nor is it a
requirement,
that the relationships at each level
of the hierarchy share a consistent
logical
definition.
A simple terminological
ontology which defines subclass relation-
ships resembles a taxonomy,
but with added logical
rigour.
More complex relation-
ships can be explicitly defined, such as subsumption (“is-a”) or meronymy (“part-of”)
relationships.
It has been proposed that taxonomies should be derived from termino-
logical ontologies to ensure logical consistency (Madsen & Thomsen 2008).
By using
the principles of terminological
ontologies,
this systematic approach to specification
could reveal logical inconsistencies in the formulation of the classification by making
subdivision criteria explicit.
Taxonomies are also limited because they define strict hierarchical relationships.
This means that any class in the hierarchy has at most one parent.
This imposes a
Chapter 2.
Background and Literature Review
22
restriction on the expressiveness of taxonomy.
Terminological ontologies, on the other
hand, support more than one class relationship, such as multiple parent classes.
This
feature of
multiple-inheritance is a fundamental
topological
difference between tax-
onomy and terminological ontology; taxonomies are hierarchies, while terminological
ontologies are directed-acyclic graphs.
In the remainder of
this dissertation,
I will
use the word “ontology” to refer to
terminological ontology.
2.2.5
Computation on Ontology-Annotated Data
Data can be linked to entities of an ontology to produce ontology-annotated data.
In
biomedical informatics, the ability to use ontologies to compute measures on ontology-
annotated data has been a large factor in its wide adoption.
The utility of ontologies
extends beyond the scope of classification alone.
The Gene Ontology,
one of the first biomedical ontologies,
has seen the develop-
ment of several methods to calculate measures of gene expression enrichment (Bl¨
uthgen
et al. 2005; Conesa et al. 2005) and expression similarity (Lord et al. 2003; Schlicker
et al.
2006).
These computational
methods have been incorporated into interactive
visualizations tools (e.g., VisANT (Hu et al. 2009)).
Similarly, the Human Phenotype
Ontology (K¨
ohler et al. 2013; K¨
ohler et al. 2016; Robinson et al. 2008) enables com-
putation of measures of frequency (K¨
ohler et al. 2009) or semantic similarity (Buske
et al. 2015; Girdea et al. 2013; Philippakis et al. 2015).
In the visualization domain,
statistics have been shown useful
to automatically
highlight features of interest in datasets (Perer & Shneiderman 2008).
The value of
calculating measures to guide exploratory analysis of longitudinal cohort studies has
been demonstrated,
e.g.,
identifying outliers and relevant trends in event sequence
data (Malik et al. 2015).
However, these approaches have not been applied to visual-
izations of ontology-annotated data.
Another property of
ontologies is that they support inference based on logical
subsumption and meronymy relationships.
For example, data annotated to an entity
implies a mapping to all ancestors (e.g., aggregation of quantitative values, transitivity
of
categorical
values).
Functions can thus be defined to merge quantitative values
(e.g.,
mean,
median),
or categorical
values (e.g.,
combine states).
The structure of
the ontology can be used to infer generalizations from specific data observations.
Chapter 2.
Background and Literature Review
23
In this work,
I develop methods to extend the utility of ontologies to the visual-
ization of
ontology-annotated data.
By leveraging the relationships encoded in the
ontology, the ontology-annotated data can be transformed into a data structure that
can be visualized.
This data structure can still be used for ontology-based computa-
tional
analyses.
The benefit of this approach is that the resulting data structure is
based on an external representation of a mental model, and can be used to contextu-
alize the visual representation of data.
2.3
Visualization and Visual Analysis
The second form of mental model external representation that I will consider is visual-
ization.
Unlike ontologies, visualization is a concrete externalization that transforms
abstract data into visual manifestations.
Card et al. define visualization as “the use of computer-supported, interactive, vi-
sual representations of abstract data to amplify cognition” (1999).
Through the lens of
distributed cognition, interactive visualization is a boon for sensemaking by enabling
the creation and manipulation of
dynamic external
representations.
Visualizations
can provide meaningful
perspectives on complex data based on a user’s task.
For
example,
hierarchical
data can be represented across different spatiotemporal
scales
through multiscale representations (Hollan et al.
2000).
The interactive component
of visualizations can enable data to be recast in different representations, facilitating
review from a variety of perspectives, depending on specific lines of questioning (Sedig
& Parsons 2016).
In this section, I will discuss five aspects of the visualization literature:
conceptual
processes for transforming data into visual
representations (visualization pipeline),
transformations of
data into visual
variables (visual
encoding),
organizations of
vi-
sual variables into visual representations and organizations of visual representations
(spatial
organization),
and reviews of
work related to the two research challenges
addressed in this dissertation (visual comparison and topology simplification).
2.3.1
Visualization Pipeline
The visualization pipeline was proposed by Card & Mackinlay (1997) as a means of
conceptualizing the transformations from data to visualization,
and the role of user
Chapter 2.
Background and Literature Review
24
interaction in the process (Fig.
1.1).
Several
variants of Card & Mackinlay’s model
have since been proposed (Card et al.
1999;
Heer & Agrawala 2008;
Tobiasz et al.
2009).
A similar data flow was defined for scientific visualization (Haber & McN-
abb 1990),
but with greater focus on the transformation of
data into 2D and 3D
spatial representations.
Specific transformations between structured representations
and visual
representations have been mapped out (Senay & Ignatius 1994).
A re-
lated conceptualization is the Visualization Data State Model
(Chi
& Riedl
1998),
which more explicitly defines the intermediate results of
data transformation as a
sequences of state change.
These states align to the discrete steps involvined in data
transformation and visual transformation.
These concepts have lead to the development of design patterns (Chi 2002; Heer
& Agrawala 2006) and implementations of
visualization toolkits (Bostock & Heer
2009;
Fekete 2004;
Heer et al.
2005) to frame visualization programming in terms
of
the visualization pipeline.
An alternate approach uses declarative programming
methods to define a series of
transformations.
At each step,
the transformed data
aligns to one of the phases described in the visualization pipeline.
Mondrian uses the
analogy of building blocks being combined to create more complex visual
represen-
tations (Meyer et al.
2006).
While Mondrian focused on static visualizations,
this
declarative approach to creating visualizations was extended to interactive visualiza-
tions in D3 (Bostock et al.
2011).
In both examples,
input data is converted into
visual
representation through a series of
transformation operations.
The visualiza-
tion designer must define all the transformation functions for all phases.
D3 is used
throughout this dissertation work to implement the prototypes.
The visualization pipeline has also been made explicitly available to end-users
through interfaces to interactively customize visualizations.
Polaris extends pivot
tables using the visualization pipeline,
and supports arbitrary visualizations based
on relational
query results that are defined by users (Stolte et al.
2002).
Recent
works have used mixed-initiative approaches to automatically recommend visualiza-
tions based on statistical analyses of data (Wongsuphasawat et al. 2016; Wongsupha-
sawat et al. 2017).
These concepts have been applied in domain specific visualizations,
through the
creation of systems that define transformations between structured data representa-
tions and visual
representations (e.g.,
3D scientific visualization (Kalogerakis et al.
2006),
video annotation (Fan et al.
2007)).
A more extensible approach has been
Chapter 2.
Background and Literature Review
25
explored in the context of
the Semantic Web,
using Linked Open Data (i.e.,
data
annotated with RDFS). The RDFS annotations enabled linked data from a variety of
sources to be integrated (e.g., GDP of countries with geolocation of countries).
Sev-
eral
pipelines have been proposed for automatically merging different data sources
using RDFS annotations and then transforming these representations into visualiza-
tions (Brunetti et al. 2013; Gilson et al. 2008; Herv´
as & Bravo 2011).
The most similar system to the present work is the Linked Data Visualization
Model (LDVM) proposed by Brunetti et al. (2013), which has been implemented as
an open source project called Payola (Kl´ımek et al.
2013).
They too refer to the
instantiated annotated data within the structure defined by RDFS as an analytical
abstraction.
While they demonstrate how analytical abstractions can be transformed
into a variety of visual representations, their work focuses on the challenges of merg-
ing RDFS annotated data into analytical
abstractions,
and not on the particular
challenges of
using the analytical
abstraction to manipulate the complexity of
the
visual
representation,
nor the encoding of the data values.
Recent work proposed a
system,
SemaVis (Nazemi
et al.
2014),
which extends the LDVM pipeline to auto-
matically generate multiple,
linked visualizations to communicate different facets or
level-of-details based on the RDFS structure.
While these approaches leverage the
structure of the LDVM to create linked views, they stop short of using the data values
or the semantic relationships between entities to simplify topology or compute value
comparisons.
2.3.2
Visual Encoding
The work of the cartographer Bertin is widely recognized as pioneering the systematic
study of visualization design (Sedig & Parsons 2016).
In his seminal work, Semiology
of
Graphics
(1967),
Bertin identified and described visual
variables
that could be
used to encode data:
position, size, colour, value, texture, orientation, and shape.
He
proposed that these variables acted as building blocks,
which could be combined to
create a variety of visual
representations.
These visual
variables describe the visual
encoding of data.
Building on the visual variables proposed by Bertin, Cleveland & McGill carried
out a series of perceptual experiments to rank the relative accuracy of each ten visual
encodings in communicating the underlying quantitative values
(Cleveland & McGill
Chapter 2.
Background and Literature Review
26
1984; Cleveland 1985; Cleveland 1993).
According to the empirically derived ranking,
position and length are more accurate, while area and colour are more prone to errors
in judgement.
The studies of Cleveland & McGill have since been replicated in large-
scale crowdsourced studies (Heer & Bostock 2010) and the results further expanded
by studying the interaction visual encodings on judgement error (Talbot et al. 2014).
The role of the visual
variables in preattentive processing has also been empirically
evaluated (Healey & Enns 2012).
Cleveland & McGill’s work was concerned with the representation of
quantita-
tive data.
Mackinlay (1986) extended these rankings to visual
encodings of
non-
quantifiable data (e.g., categorical, ordinal).
Methods of robustly transforming non-
quantifiable data into quantifiable measures have also been developed (Rosario et
al.
2004).
The perceptual
qualities
of
colour
encodings
have also been studied.
Brewer (1994a;
1994b) proposed a taxonomy of colour scales based on analysis task
(e.g.,
categorical,
sequential,
divergent),
and developed colour scales with perceptu-
ally different steps to improve the accuracy of judgements Harrower & Brewer 2003.
Visual
representations are created through a combination of visual
encodings to
reveal
relationships in the data.
Shneiderman (1996) identified a taxonomy of
ele-
mentary visual
representations,
including dimensional
(i.e.,
1D,
2D,
3D),
temporal,
multi-dimensional, hierarchical, and graph representations.
Matrices and scatterplots
are exemplary forms of 2D visual
representations.
A scatterplot is created by map-
ping two numeric values of each data point to x- and y-axis positions, and additional
values of each data point could be encoded using a third variable,
such as a quanti-
tative value with size, or a categorical value with colour.
Tukey, a statistician, was a
proponent of visual representation and proposed it as part of exploratory data anal-
ysis, an approach to understanding data (Tukey 1977).
Focusing on statistical data,
he promoted the use of
boxplots,
scatterplots,
histograms,
and probability plots to
gain insight into the distribution of the data in order to guide subsequent analyses.
2.3.3
Spatial Organization
For many tasks, it is often insufficient to merely visually encode data through visual
variables.
A spatial
organization is also required to communicate relationships and
facilitate interpretation.
The organization of
visual
variables influences the visual
analyses that are possible.
Chapter 2.
Background and Literature Review
27
Visual variables can be reorganized within visual representations to enhance inter-
pretation.
Interactive matrices support dynamic reordering of rows and columns to
reveal different patterns in the data (e.g., Bertin Matrices (Bertin 1981;
Perin et al.
2014).
Similarly, scatterplots can be used to reveal patterns by adjusting the axes to
reorder the spatial location of data points (e.g., Interaxis (Kim et al. 2016)).
Graphs (Herman et al. 2000) and trees (Schulz 2011) are another method of orga-
nizing visual variables within a topological structure that communicates relationships
between data points.
Graphs and trees are often visualized using topologically ex-
plicit organizations (e.g.,
node-link diagrams,
indented lists).
Implicit organization
of topologies use spatial relationships (Schulz et al. 2011).
For example, graphs may
be implicitly represented through adjacency matrices, and trees through space-filling
representations (e.g., icicle plots (Kruskal & Landwehr 1983), treemaps (Shneiderman
1992), sunburst diagrams (Stasko & Zhang 2000)).
Abstract data may not have inherent structure,
and a spatial
organization may
be selected to facilitate analyses.
Bertin suggested that any analysis problem could
be abstracted as a double-entry data table,
and as such,
visually represented in the
form of a matrix to support “decision-making” (Bertin 1981).
Organizational struc-
tures can also be created for data through computational clustering (e.g., hierarchical
clustering, principal component analysis) and represented hierarchically.
Graph-based visualizations are harder to comprehend than hierarchical visualiza-
tions (Graham et al. 2000).
As such, graphs are often converted into trees by method
of traversals (e.g., breadth-first, depth-first, minimum spanning tree).
Ontologies are
inherently structured as directed-acyclic graphs,
and as a result ontology-annotated
data is often organized using graph,
tree,
and indented list (Katifori
et al.
2007).
In the biomedical domain, ontologies are often represented using tree structures, ob-
tained by converting graphs into hierarchies by duplicating nodes with multiple par-
ents (Zeeberg et al. 2003; Khatri & Dr˘
aghici 2005).
An extension of these approaches
is that a graph may be transformed into any number of more elementary structured
by removing structure.
For example,
graphs may be traversed to produced ordered
sets of entities based on connectivity, or filtered to produced sets of entities based on
specific attributes.
Spatial
organization can also be applied to aid comparison of visual
representa-
tions.
Two visual
representations may be spatially organized side-by-side,
or super-
imposed above one another to support different comparative interpretations.
Chapter 2.
Background and Literature Review
28
2.3.4
Visual Comparison
Visual encoding and spatial organization of data can be used to support specific anal-
ysis tasks.
The research question of encoding comparisons for domain specific tasks
draws on a wide range of visualization research.
In each case study, the comparison
of
ontology-annotated data records involves the calculation of
aggregate measures
and summary statistics.
The specific methods and techniques in the literature that
were relevant to the analysis tasks in each case study are detailed in the respective
case study chapters.
This section will
briefly review common approaches to visual
encoding and spatial organization that support comparison, with a focus on hierarchi-
cal data structures.
Each method uses a combination of visual encoding and spatial
organization to support the comparison.
A taxonomy of visual comparisons identified three fundamental approaches:
jux-
taposition,
superposition,
and explicit encoding (Gleicher et al.
2011).
Juxtapo-
sition refers to the side-by-side arrangement of
visual
representations (e.g.,
small-
multiples (Tufte 2006), scatterplot matrices (Carr et al. 1987)).
Superposition refers
to overlaying spatial
organizations (e.g.,
multiple time series in a single line chart).
Explicit encoding refers to displaying a computed measure that directly reflects the
comparison of interest (e.g., scatterplot relating two dimensions).
Juxtaposition and
superposition both use spatial
organization for comparison,
while explicit encoding
uses visual encoding.
Principles of juxtaposition and superposition facilitate flexibil-
ity in the kinds of comparisons the visualization supports, but at the cost of offloading
processing onto the user.
On the other hand, explicit encoding makes one comparison
immediately visible, but sacrifices other comparisons and context.
Visualization tools
often use a combination of these methods to support visual analysis tasks.
Comparison of
hierarchies is challenging because they often require judgements
of both structure and value (Graham & Kennedy 2010).
A large body of work has
addressed comparisons of
taxonometric hierarchies,
in particular,
phylogenic trees
(taxonomies).
Graham et al. (2002) presented an approach to compare multiple phy-
logenic trees using juxtaposed treemaps.
When a term was selected in one tree,
the corresponding terms across the other trees would be highlighted.
TreeJuxta-
poser (Munzner et al. 2003) improved structural comparisons between two phylogenic
trees by using consensus trees to compute topological similarities and differences.
The
phylogenic trees were juxtaposed and corresponding similar or dissimilar subtrees were
encoded with colour.
Bremm et al.
(2011) used the structure of consensus trees to
Chapter 2.
Background and Literature Review
29
represent an abstracted summary of
similarity and differences over multiple phylo-
genic trees, also encoding similarity and difference scores using colour.
Multiple trees
have also been fused into single representations to visualize comparisons.
Graham &
Kennedy (2007) used a directed-acyclic graph representation to merge the overlapping
topologies of multiple hierarchies, while maintaining dissimilarities and branches be-
tween intermediate nodes.
In contrast, Tree of Trees (Nye & Gascuel 2008) computed
a fused hierarchy that showed differences as separated branched subtrees.
Comparisons have also been facilitated by explicitly encoding the correspondence
between nodes.
GrouseFlocks (Archambault et al. 2008) compared multiple graphs by
presenting juxtaposed views, using implicit space-filling organization to represent ag-
gregated features, and explicit node-link organization to represent the local topology
of interest.
The correspondence between the nodes of two trees have also been visu-
alized using edge-bundled connections (Holten & Van Wijk 2008).
DAViewer (Zhao
et al.
2012) used consensus trees based on the semantics of discourse analysis trees
to highlight similarities and differences in structure across juxtaposed trees.
Union
Tree (Tu & Shen 2007) represented comparisons of node data values between two trees
with the same structure, using colour and pattern to explicitly encode the similarities
and differences.
2.3.5
Topology Simplification
Often,
large datasets result in visualizations that are overly complex or too visually
dense for human interpretation.
To this end, a variety of methods have been developed
to simplify the topologies of
graphs to produce simplified visualizations that still
communicate features of interest.
The structure of a hierarchy can be simplified by
modifying visual encoding and spatial organization (Elmqvist & Fekete 2010).
Visual
encoding can be leveraged to represent global
patterns by aggregating
lower-level
data values using summary statistics (e.g.,
count,
sum,
average,
distri-
bution).
Zoomable Adjacency Matrix Explorer (Elmqvist et al. 2008) enables graph
exploration through a multiscale adjacency matrix of explicitly encoded data value ag-
gregates.
A variety of value aggregation encodings were considered, including colour,
glyph,
and small-multiples (e.g.,
histograms).
Spark (Nielsen et al.
2012) summa-
rized patterns in hierarchically clustered genomic data through juxtaposed heatmaps
of aggregated of lower-level distributions to reveal global patterns.
Chapter 2.
Background and Literature Review
30
Spatial organization can be simplified by modifying topology (e.g., tree-cuts, prun-
ing).
TaxonTree (Parr et al. 2004) simplified the visualization of phylogenic trees by
applying tree-cuts to only show branches that included user specified search terms.
TreePlus (Lee et al.
2006) created hierarchical
representations of local
graph topol-
ogy by extracting a minimum spanning tree around a user-selected node.
The density
of the visualization is managed by interactively expanding and coalescing branches.
Grouse (Archambault et al. 2007) visualizes the local topology around a set of user-
selected nodes, while managing density by agglomerating topological features outside
the selection set in into meta-nodes and meta-edges.
This approach yields a graph
where the level
of
topological
detail
is non-uniform and can be adjusted through
user input.
Similarly,
the structure of a hierarchy can be pruned using importance
measures on the data values of nodes.
An importance measure based on minimum
description length was used to prune branches with importance scores below a thresh-
old,
while maintaining branches with importance scores above the threshold,
in or-
der to draw attention to outliers in the hierarchy (Veras & Collins 2017).
ABySS-
Explorer (Nielsen et al.
2009) communicated global
topological
features of
genome
assembly structures through an explicitly encoded compressed graph representation.
Semantically relevant topological features were agglomerated into symbolic represen-
tations and the functional properties were explicitly encoded with colour.
The work in this dissertation is inspired by the approaches of using explicit visual
encoding and simplified spatial
organization to reduce the complexity of visual
rep-
resentations.
However, in contrast to the work reviewed here, which focus on general
graphs and hierarchies,
I address simplifying the topology of
an ontology.
Ontolo-
gies encode semantic relationships that could help contextualize ontology-annotated
data when visualized.
As such,
the challenge lies in developing novel
methods for
topology simplification that do not diminish this contextualization,
while also en-
hancing readability of
the visualization.
This also presents an opportunity,
as the
simplification methods can leverage the semantic relationships to achieve a simplified
representation.
Chapter 3
Case Study Background and Case
Overview
Terminological
ontologies encode domain specific knowledge,
and any visualization
that leverages ontology semantics to facilitate sensemaking must be designed and
validated in the context of real world tasks, by experts in that domain.
Case studies
have been promoted as an effective way to evaluate the effectiveness of domain specific
visualizations (Plaisant 2004).
Controlled lab experiments are inappropriate because
deep familiarity with the content of the visualization is critical to determine whether
the application of the ontology aids sensemaking.
To this end, I employed a case study approach to develop the features of OAAV.
To facilitate incremental
development of
these features,
all
case studies took place
in the same domain.
By working closely with domain experts,
real-world problems
were addressed, and through a collaborative, user-centred design process, functional
prototypes were iteratively developed,
refined,
and validated.
Each subsequent case
study extended the methods developed in the previous to tackle increasingly larger
datasets,
while addressing specific challenges of
spatial
organization and visual
en-
coding.
The outcomes of each case study yielded components that contributed to the
component features of OAAV (Chapter 7).
By progressing through the case studies,
these components were designed and validated incrementally,
with subsequent work
extending the components developed in prior case studies.
In what follows, I describe the methodology employed to conduct the case studies,
provide background on the application domain of the case studies,
and present the
specific analysis tasks that were considered.
31
Chapter 3.
Case Study Background and Case Overview
32
3.1
Case Study Methodology
To support the development of OAAV, I employed a fusion of approaches in the liter-
ature to inform case study selection and the design and validation of visualizations.
Case studies were selected opportunistically, based on target analysis tasks iden-
tified in the problem space (Fig.
1.5) and consideration of
potential
collaborative
pitfalls (Sedlmair et al. 2012).
Each case study took the form of a multidisciplinary,
collaborative exchange with bidirectional
interactions (Kirby & Meyer 2013).
We
identified experts with appropriate data analysis problems and a willingness to par-
ticipate in the development of visualization tools that used ontologies to support their
analysis tasks.
In all
cases,
the experts had never used ontologies before and were
intrigued by the opportunity to enhance their research through collaboration.
Each case study collaboration was structured following the Nested Model of Design
and Validation (Munzner 2009) (Fig.
3.1).
This model
proposes four levels,
each
highlighting a potential area where the design process can fail to result in an effective
visualization;
each level
is dependent on the preceding level.
I focused on the top
three levels:
domain problem characterization,
data/operation abstract design,
and
encoding/interaction technique design.
The final
level,
which focuses on optimizing
algorithms, was outside the scope of the exploratory nature of the case studies.
Figure 3.1:
Illustration of the Nested Model of Design and Validation (adapted from-
Munzner (2009)).
Chapter 3.
Case Study Background and Case Overview
33
To address the first level (domain problem characterization), interviews were con-
ducted with the domain experts to formalize their analysis problems.
The Multi-Level
Task Typology (Brehmer & Munzner 2013) was employed to frame these tasks from
a visualization perspective.
By providing a non-domain-specific conceptualization of
visualization tasks, the approaches used to address domain expert tasks could be ex-
tended to similar visualization problems in other domains.
This level
was validated
based on the observed adoption rate of the tools after the case studies.
Two of the
visualization prototypes,
PhenoStacks and PhenoLines,
continue to be used by our
collaborators for their analysis tasks.
The second and third levels (data/operation abstract design, encoding/interaction
technique design) adapted the nine-stage design study methodology framework (Sedl-
mair et al. 2012).
The process entails formative interviews to understand the domain
and analysis requirements,
and a collaborative development of prototypes,
followed
by training and initial deployments.
Feedback is subsequently elicited and the designs
are iteratively improved.
Finally,
a mature deployment phase is utilized to evaluate
the tools.
I used a combination of diary study protocols and exit interviews for eval-
uation.
Through this process,
I was able to evaluate whether the ontology-derived
structured representations supported sensemaking (data/operation abstract design)
and collected qualitative feedback regarding the spatial
organization and visual
en-
coding methods employed (encoding/interaction technique design).
The case studies described herein are situated in the biomedical
domain and fo-
cus on the application of
the Human Phenotype Ontology to facilitate analysis of
phenotypes for the study of genetic diseases.
3.2
Biomedical Domain
More than any other domain, the biomedical domain has embraced the development of
ontologies (Carpendale et al. 2014).
Due to the vast quantity of research conducted
in biology and the non-quantifiable nature of
observations,
there was a need for a
systematic approach to perform meta-analyses on published data.
An early ontology
in the domain, the Gene Ontology (Ashburner et al. 2000) demonstrated the power of
standardized representation to support computational approaches to analyze research
results.
Since then, a variety of ontologies have been developed to support biomedical
research.
Chapter 3.
Case Study Background and Case Overview
34
In this domain,
ontologies define formalized models of biological
systems to ad-
dress a variety of subdomain specializations, such as biochemistry, diseases, genetics,
and phenotypes,
and a variety of organisms,
including humans,
mice,
and fish.
The
Open Biomedical Ontologies project (OBO) (Smith et al. 2007) was initiated to pro-
mote interoperability between ontologies, guide further improvements, and establish
standards for formal
rigour across independent ontology projects.
At the time of
writing, the OBO included over 150 active biomedical ontology projects (OBO ).
Unlike upper ontologies developed for artificial intelligence, which emphasize for-
malism and first-order logic, domain ontologies developed for biomedical informatics
prioritize data sharing and interoperability.
The designed purpose of these ontologies
is thus to distribute structured, controlled vocabularies (Stevens & Lord 2009) and to
support data annotation,
where experimental
data are associated with terms in the
ontology (Kelso et al. 2010).
The development of biomedical ontologies is thus guided
by immediate analysis goals, and further refined over time to achieve greater expres-
siveness.
This task-oriented approach to developing ontologies is a distinguishing
feature of biomedical ontologies (Stevens & Lord 2009).
Although the terms and relationships relevant to a subdomain are formally de-
fined, rigour in formal logical relationships and constraints may be sacrificed for prac-
tical reasons (Poli & Obrst 2010).
Less strict adherence to formal specification in these
ontologies has been criticized (Herre 2010).
However, the value of ontologies in aiding
research continues to be demonstrated by providing controlled vocabularies, support-
ing data reconciliation and interoperability, improving search, enabling clustering and
similarity, and enabling continuous improvement (Stevens & Lord 2009).
The practical application of biomedical ontologies for data representation make for
ideal candidates to assess the application of ontology to visualization.
This provides
the opportunity to use the structure provided by the ontology to support visualization
of both quantitative and non-quantifiable data.
I chose to focus the case studies on
the analysis of patient phenotype data after identifying a lack of tools that address
these particular analysis challenges.
3.3
Human Phenotype Ontology
The Human Phenotype Ontology (HPO) is one of the most broadly used ontologies
for phenotypes.
As an on-going international initiative, the HPO standardizes pheno-
Chapter 3.
Case Study Background and Case Overview
35
type terminology and defines relationships between phenotypes (i.e., semantic, logical,
hierarchical) (K¨
ohler et al.
2016).
Each entity in the ontology describes a distinct
phenotypic abnormality, and is arranged in a hierarchical structure representing sub-
class “is-a” relationships (Fig. 3.2).
These relationships progress from general terms
near the root to specific terms at the leaves.
As a phenotype may have more than
one superclass,
the HPO supports multiple inheritance.
First-level
phenotypes are
broader categories of abnormalities that relate to biological systems.
Phenotypes can
inherit from superclasses within the came category.
For example,
Cerebral
Palsy is
an Abnormality of Movement, but also an Abnormality of the Central Motor System;
more generally, Cerebral Palsy is a Physiological Abnormality of the Nervous System.
Phenotypes can also span across categories.
For example,
Asthma is a subclass of
both Abnormality of the Respiratory System and Abnormality of the Immune Sys-
tem, because it affects breathing, but is also an infection.
Thus, the HPO is a highly
complex directed acyclic graph,
following the true-path rule (i.e.,
the presence of a
specific phenotype implies all ancestor phenotypes).
Figure 3.2:
Illustration of the Human Phenotype Ontology hierarchy.
Terms denote
general
phenotypes near the root,
to specific phenotypes at the leaves.
First level
phenotypes describe biological
system categories,
such as the nervous,
respiratory,
or immune system.
More specific phenotypes can inherit from multiple superclasses
in the same category,
such as cerebral
palsy,
or can span across categories,
such as
asthma.
Chapter 3.
Case Study Background and Case Overview
36
The HPO currently includes over 11,000 terms with over 250,000 annotations
to rare and common diseases.
Although other medical
nomenclatures (e.g.,
ICD,
SNOMED CT) have hierarchical structures, those categorizations are oriented around
medical billing or exhaustive lists of medical terms, including procedures and anatom-
ical parts.
In contrast, the HPO classifies the semantic relationships between pheno-
types, directly representing symptoms of diseases within biological systems.
By leveraging the HPO, systematic approaches of entering and storing ontology-
annotated phenotype data are possible (e.g., PhenoTips (Girdea et al. 2013)) and can
promote the consistent use of
terminology.
The HPO also opens the door to com-
putational
approaches by facilitating interoperability with external
resources that
link genes, phenotypes, and diseases (e.g., OMIM, Orphanet) (Robinson et al. 2015).
This enables for the computation of
metrics,
such as phenotype diagnostic signifi-
cance (K¨
ohler et al. 2009) and similarity scores between patients with non-overlapping
phenotypes (Buske et al. 2015; Philippakis et al. 2015).
Despite the popularity of
the HPO in the genetic disease community,
very few
tools are available to help scientists visualize comparisons,
patterns,
and trends of
phenotypes described using HPO terms.
Although underutilized,
the HPO is ideal
for visualizations.
It describes both hierarchical and semantic relationships that can
be used to organize the display of phenotypes,
thereby supporting a contextualized
exploration of genetic disease data.
Information Content Score
The HPO uses phenotype-disease co-occurrence annotations from existing medical
databases, such as the Online Mendelian Inheritance in Man (OMIM) (OMIM ;
Rath
et al. 2012), to calculate an information content score.
This dimensionless score is a
quantification of
the concept of
diagnostic significance of
a given phenotype,
based
on how frequently it occurs amongst all
known disorders.
The information content
for a phenotype is higher when its occurrence is associated with fewer diseases and
lower when it is more common.
Thus, phenotypes with higher information content are
more likely to be useful when discriminating between diseases.
Information content is
calculated across a given HPO instance and is independent of the specific phenotypes
and patients under investigation.
Chapter 3.
Case Study Background and Case Overview
37
Information content is proportional to the rarity of HPO term, n (K¨
ohler et al. 2009):
IC(n) =
−
log
# of disorders annotated with n
# of disorders
!
(3.1)
As information content correlates with diagnostic value, it is non-decreasing when
traversing from parents to children.
This behaviour aligns to clinical
expectation,
where the general terms closer to the root are also less clinically specific and have less
informational
content than more granular terms farther from the root (Robinson &
Mundlos 2010).
3.3.1
Phenotypes
Within the medical domain, a phenotype is an observable and measureable deviation
of some aspect of a patient from the expected manifestation within a population (Bay-
nam et al.
2015;
Robinson 2012).
Thus,
a phenotype describes an abnormality of a
patient’s morphology (i.e., structural features such as having a broad thumb or low-set
ears), physiology (i.e., functional features such as cognitive impairment or seizures),
or behaviour (i.e., depression or impulsivity).
While genetic variation and inheritance could be the primary causes of phenotypes,
not all phenotypes are present from birth.
Onset may occur later in life (e.g., hearing
loss) or a predisposition could be triggered by environmental exposures (e.g., cancers).
Some phenotypes are also more likely to occur in males than females (e.g., red-green
colour-blindness), or differ between ethnic populations (e.g., epicanthal folds are more
common in patients of Asian descent).
Genetics and medical researchers study the spectrum of phenotypic abnormalities
associated with genetic diseases to garner insights into the multitude of factors affect-
ing disease characteristics and manifestations.
For example, the more comprehensive
patient phenotype reports,
the higher the chances of
discovering the gene variants
responsible for a given disease (Hennekam & Biesecker 2012).
Although many computational
approaches have been developed to support the
exploration and analysis of genes, less attention has focused on phenotypes.
Within
the medical
domain,
phenotypes have a long history of
use to describe the signs,
symptoms,
and manifestations that characterize a given genetic disease (Robinson
2012).
Phenotypes typically arise from interactions of
thousands of
genes and a
Chapter 3.
Case Study Background and Case Overview
38
single gene variant can affect many phenotypes.
Where genotypes are the blueprint,
phenotypes describe the current state of a patient.
Phenotype-centred approaches to
the study of human genetics are complementary to genotype-oriented methodologies
and can often be more powerful
predictors of
patient outcomes (e.g.,
likelihood of
disease onset, expected prognosis) (Houle et al. 2010).
3.3.2
Genetic Diseases
Studying the genetic basis of hereditary phenotypes associated with genetic diseases
makes it possible to screen the population and helps direct diagnoses.
Although much
progress has been made, it is estimated that underlying genes have been identified for
only 50% of known hereditary phenotypes (Chong et al. 2015) and remains an active
area of research.
Clinical specialists and genetics researchers both contribute to the advanced study
of genetic diseases.
Through direct interactions with patients, clinical specialists are
the primary investigators of
the patient data subsequently used by researchers to
deepen our understanding of human genetics.
Research results are,
in turn,
applied
to developing more robust diagnostic tests.
In the near term,
these advances are
critical to improving patient quality of life by reducing unnecessary diagnostic testing
and mitigating the uncertainty of diagnosis.
In the long term,
these results help us
broaden our understanding of human genetics, which can impact the general practice
of medicine.
3.4
Overview of Case Studies
In this dissertation, three case studies focused on different analysis challenges in the
study of
genetic diseases:
diagnosis of
rare genetic diseases,
cross-sectional
cohort
analysis, and disease subtyping through topic model analysis.
3.4.1
Diagnosis of Rare Genetic Diseases
Rare genetic diseases afflict an estimated 350 million people worldwide, with approx-
imately 30 million patients in the US alone (Global
Genes).
While there are more
than 8,000 named rare genetic diseases, many thousands are yet to be discovered or
classified (Robinson 2012).
Those that have been identified are typically very difficult
Chapter 3.
Case Study Background and Case Overview
39
to diagnose, as their low frequency means that a clinician encounters only a handful
of cases of each disorder over their career.
On average, patients can expect two mis-
diagnoses, interactions with four clinical specialists, and to wait approximately seven
years for a correct diagnosis (Shire Human Genetic Therapies 2013).
The differential diagnosis of hereditary disorders is a challenging task for clinicians
due to the heterogeneity of
phenotypes that can be observed in patients.
Current
technologies render it impractical to generate a full phenotype workup for every pa-
tient (i.e., deep-phenotyping).
The onus thus remains on the clinical investigators to
prioritize diagnostic tests and compile consistent and detailed phenotype reports as
efficiently as possible.
Existing clinical tools are often text-based and rely on cosine similarity searches.
Since the phenotypes known to relate to diseases vary in consistency, completeness, or
granularity, clinicians spend much of their time refining searches and tracking progress
with hand-written notes.
The HPO is already being used successfully in novel tools
that provide systematic methods that facilitate matching patients with undiagnosed
rare diseases based on phenotype similarity (e.g., PhenomeCentral (Buske et al. 2015),
MatchMaker Exchange (Philippakis et al.
2015)).
However,
no visual
analysis tools
have addressed the task of supporting differential diagnosis for rare genetic diseases.
PhenoBlocks is a novel
visual
analysis tool
that supports the visual
comparison
of phenotypes between patients, or between a patient and the hallmark features of a
disorder.
When applied to differential diagnoses, an undiagnosed patient is compared
to similar previously diagnosed cases,
supporting hypotheses generation.
The visu-
alization explicitly encodes the comparison to highlight similarities and differences
to help prioritize further phenotype investigations toward a diagnosis.
An informal
evaluation of PhenoBlocks with expert clinicians suggested that the visualization ef-
fectively guides the process of differential diagnosis and could reinforce the importance
of complete, granular phenotypic reporting (Chapter 4).
3.4.2
Cross-Sectional Cohort Analysis
Cross-sectional
phenotype studies are used by genetics researchers to better under-
stand how phenotypes vary across patients with genetic diseases,
both within and
between cohorts.
The collection of phenotype data and the development of advanced
diagnostic methodologies form a virtuous cycle.
Clinical
specialists are the primary
Chapter 3.
Case Study Background and Case Overview
40
phenotype data collectors,
and the quality of
these phenotype reports impact the
effectiveness of genetics research outcomes (e.g.,
diagnostic techniques,
disease sub-
type identification).
The reality is that researchers would benefit from more detailed
phenotyping than is typically necessary for diagnosis.
The needs of
clinicians and
researchers are divergent and it would be beneficial to foster sensitivity toward both
sides of these competing needs.
Analyses within cohorts identify patterns between phenotypes and patients (e.g.,
co-occurrence) and isolate special cases (e.g., potential outliers).
Comparing the vari-
ation of phenotypes between two cohorts can help distinguish how different factors
affect disease manifestation (e.g., causal genes, age of onset).
Consistency and com-
pleteness of phenotype reporting can be improved by providing methods of comparing
the phenotypes of patients to highlight disparities during data collection; a means of
data collection auditing and validation.
Moreover, these same visual representations
could also be used as a communication platform to facilitate discourse, compromise,
and consensus reaching regarding the granularity of phenotype data collection,
thus
balancing the increasing needs of genetics researchers for detailed phenotypes and the
limited resources available to the clinicians who actually collect data.
PhenoStacks is a novel visual analysis tool that supports the exploration of pheno-
type variation within and between cross-sectional patient cohorts.
By leveraging the
semantic hierarchy of the HPO, phenotypes are presented in context, can be grouped
and clustered, and are summarized via overviews to support the exploration of pheno-
type distributions.
The design of PhenoStacks was motivated by formative interviews
with genetics researchers:
high-level tasks were distilled, an algorithm for simplifying
ontology topologies for visualization was presented,
and the results of a deployment
evaluation with four expert genetics researchers reported.
The results suggest that
PhenoStacks can help identify phenotype patterns,
investigate data quality issues,
and inform data collection design (Chapter 5).
3.4.3
Disease Subtype Classification via Topic Models
Topic models enable one to mine cross-sectional patient comorbidity data (e.g., elec-
tronic health records) and construct disease subtypes—each with its own temporally
evolving prevalence and co-occurrence of phenotypes—without requiring aligned lon-
gitudinal
phenotype data for all
patients (Doshi-Velez et al.
2015).
However,
the
Chapter 3.
Case Study Background and Case Overview
41
dimensionality of topic models makes interpretation challenging,
and de facto anal-
yses provide little intuition regarding phenotype relevance or phenotype interrela-
tionships.
The HPO can complement this data modelling approach,
since mapping
modelled phenotype data to HPO terms provides access to existing computational
and visualization approaches.
PhenoLines is a novel
visual
analysis tool
for the interpretation of
disease sub-
types, derived from the application of topic models to clinical data.
PhenoLines en-
ables one to compare phenotype prevalence within and across disease subtype topics,
thus supporting subtype characterization, a task that involves identifying a proposed
subtype’s dominant phenotypes, ages of effect, and clinical validity.
We contribute a
data transformation workflow that employs the Human Phenotype Ontology to hi-
erarchically organize phenotypes and aggregate the evolving probabilities produced
by topic models.
We introduce a novel
measure of phenotype relevance that can be
used to simplify the resulting topology.
The design of
PhenoLines was motivated
by formative interviews with machine learning and clinical experts.
We describe the
co-operative design process, distill high-level tasks, and report on initial evaluations
with machine learning experts and a medical
domain expert.
These results suggest
that PhenoLines demonstrates promising approaches to support the characterization
and optimization of topic models (Chapter 6).
Chapter 4
PhenoBlocks
The first case study
1
investigates the analysis task of clinical differential diagnosis of
rare genetic diseases.
This chapter contributed PhenoBlocks,
a visual
analysis tool
that guides the process of differential diagnosis.
PhenoBlocks was designed based on the existing workflow of diagnosticians.
Upon
entering a set of
phenotypes for a new patient,
the system automatically identifies
existing diagnosed patients based on phenotype similarity.
Pairwise comparisons
between the new patient and each existing patient are computed.
The results are
organized using radial hierarchy charts and the comparisons are explicitly encoded to
highlight which phenotypes are relevant to different potential diagnoses.
In support of
PhenoBlocks,
the technical
challenge of
data unification was ad-
dressed.
To compute pairwise comparisons,
the phenotype records of
multiple pa-
tients are instantiated in an analytical
abstraction based on the Human Phenotype
Ontology.
4.1
Introduction
In medicine,
the clinical
differential
diagnosis of
hereditary disorders to determine
the disease with which a patient is afflicted is a complex and iterative process.
This
practice involves significant data gathering efforts,
including reviewing patient and
1
The contents of this chapter has previously been published as:
Glueck, M., Hamilton, P., Cheva-
lier,
F.,
Breslav,
S.,
Khan,
A.,
Wigdor,
D.,
& Brudno,
M.
(2016).
PhenoBlocks:
Phenotype Com-
parison Visualizations.
IEEE Transactions on Visualization and Computer Graphics
,
22 (1),
101–
110
42
Chapter 4.
PhenoBlocks
43
family medical history, evaluating environmental exposures,
performing physical ex-
aminations,
diagnostic imaging,
biochemical
investigations,
and psychological
test-
ing (Hennekam & Biesecker 2012;
Lanktree et al.
2010;
Robinson 2012).
During
differential
diagnosis,
a clinician characterizes a patient by a set of phenotypes,
i.e.,
observable and measurable deviations from expected morphology, physiology, and be-
haviour (Baynam et al. 2015; Robinson 2012).
The observation of phenotypes is the
single most important responsibility of
a clinician (Robinson 2012),
as phenotypes
guide the development of
a clinician’s hypotheses.
Such hypotheses are verified by
additional
investigations and analyses,
or tracking the effectiveness of
a course of
treatment.
The results of such tests provide additional
patient phenotypes and en-
able clinicians to build a comprehensive characterization of a patient’s phenotypes,
one block at a time.
Prior investigations have reported that recorded phenotypic descriptions are often
inconsistent, incomplete, or imprecise (Robinson 2012).
Existing differential diagnosis
database tools, such as London Medical Databases (LMD) or POSSUM (POSSUM ),
allow clinicians to query potential disorders associated with observed phenotypes, but
current search algorithms do not leverage the granularity of phenotype descriptions
or semantic relationships between search terms (Robinson & Mundlos 2010).
Recent
initiatives,
such as the Human Phenotype Ontology (HPO) (K¨
ohler et al.
2013),
promote the use of standardized terms for clinical reporting and support a framework
for semantic matching.
Such tools,
however,
are only accessible through text-based
interfaces that do not reveal
the hierarchical
context of phenotypes and do little to
encourage clinicians to improve the quality of their phenotypic reporting.
We address these shortcomings through PhenoBlocks,
a novel
visual
analytics
tool
that supports clinical
differential diagnosis.
Using the HPO,
a differential
hier-
archy comparison algorithm was developed to analyze phenotypes pairwise between
patients and display the results using Sunburst radial
hierarchy layouts (Stasko &
Zhang 2000).
This visualization highlights the semantic context of the comparisons,
uncovering hierarchical relationships that are not apparent in existing text-based in-
terfaces (Fig. 4.1).
Using linked,
differential
views (Graham & Kennedy 2010) organized as small-
multiples,
clinicians can visually compare the phenotypes of
an undiagnosed query
patient to a cohort of diagnosed reference patients who exhibited similar phenotypes
(Fig. 4.5) and update the phenotype data in-place.
Using phenotypes of existing diag-
Chapter 4.
PhenoBlocks
44
nosed patients as baselines for comparison could encourage clinicians to improve the
quality of their own phenotyping while also mitigating errors of probabilistic reason-
ing.
Important phenotypes are made visually salient, allowing clinical investigations
to be prioritized.
A user-centered approach informed the design of
PhenoBlocks.
First,
clinicians
were interviewed to understand existing workflows.
A workflow analysis then identi-
fied key tasks and a preliminary evaluation elicited areas for improvement that could
be aided by visual analytics.
Addressing these improvements, we implemented Phe-
noBlocks and validated it via a use case scenario and feedback from clinicians.
As
a result,
PhenoBlocks is a new visual
analytics tool
for clinical
differential
diagno-
sis to address the present and growing needs of clinicians and researchers alike.
We
contribute a differential hierarchy structure comparison algorithm, a visual encoding
strategy, and a differential visualization to compare the structure of hierarchies.
Figure 4.1:
An example of a single differential
view in PhenoBlocks,
comparing the
phenotype hierarchies of an undiagnosed query patient to a diagnosed reference pa-
tient.
During differential diagnosis, clinicians use shared (green) phenotypes to gauge
confidence in their diagnostic hypothesis and missing (purple) phenotypes to identify
candidates for subsequent analysis.
Chapter 4.
PhenoBlocks
45
4.2
Phenotypes in Medicine
The study of phenotypes seeks a complete and detailed understanding of the spectrum
of
phenotypic abnormalities associated with diseases.
Phenotypes are the primary
data type used by clinicians when making a diagnosis (Baynam et al.
2015).
The
knowledge of
phenotype frequency enables clinicians to differentiate a symptom of
underlying syndromes from an isolated feature, resulting in a diagnosis and course of
treatment (Robinson et al. 2008).
A rare phenotype occurs in less than 5% of cases
of a given syndrome, whereas a hallmark occurs in more than 90% (HPO Annotation
Guide).
4.2.1
Phenotype Granularity
Phenotype reports form part of a patient’s Electronic Health Record (EHR).
Since
these entries are written using natural language, many notations, abbreviations, and
synonymous terms have evolved (Robinson 2012) and are reported at different gran-
ularities of
detail
(Lussier & Liu 2007).
While comparing published results,
insuf-
ficient granularity can introduce uncertainty of the actual
observations of the clini-
cian (Robinson et al. 2008).
Research trends in phenomics,
called deep phenotyping,
rely on comprehensive
patient phenotypes to infer the causality of
gene variation (Baynam et al.
2015).
Innovative computational
approaches promise to deepen the understanding of
the
spectrum of
phenotypic abnormalities by automating phenotype identification and
quantification (i.e., analysis of medical imaging and 3D scans of morphology) (Robin-
son 2012).
Given current technologies,
it is not practical
to fully phenotype each
patient.
Thus,
clinicians and researchers stand to benefit from advanced diagnosis
tools that promote the use of consistent phenotype terminology and encourage com-
plete and granular phenotyping in pursuit of next-generation personalized medicine.
4.3
Hierarchical Phenotype Data
Phenotype data are often represented as a list of HPO terms,
with each phenotype
being present
(i.e.,
the phenotype was investigated and found) or absent
(i.e.,
the
phenotype was investigated and not found) in the patient.
Chapter 4.
PhenoBlocks
46
4.3.1
Phenotype Similarity
A list-based phenotype representation lends
itself
to calculating the cosine simi-
larity between feature vectors,
a technique used predominantly in existing clinical
tools (Robinson & Mundlos 2010).
These searches match only exact terms and fail to
account for the semantic similarity between phenotypes (e.g.,
the phenotypes Wide
Nose,
Long Nose,
and Broad Nose are terms with high semantic similarity).
When
a patient’s phenotypes are considered in context of
the HPO,
semantic similarity
searches become possible.
Phenomizer (K¨
ohler et al.
2009) and PhenoTips (Girdea
et al. 2013) demonstrated that semantic similarity scores outperform cosine similarity
in both finding and ranking similar diseases.
4.3.2
Patient Phenotype Comparisons
The calculation of phenotype similarity scores has benefited from the consideration of
ontological relationships.
However, explicitly representing phenotypes within the on-
tological hierarchy has not yet been applied to phenotype comparison visualizations.
Representing phenotypes in a visual
manner can support the discovery of novel
in-
sights that are not possible when list-based representations are used.
The nearest
common ancestor of two phenotypes, for example, can quickly be determined using a
visual hierarchy.
In the present work, we introduce a visual analytics tool that supports the compar-
ison of phenotypes between a new, undiagnosed query patient and a set of diagnosed
reference patients.
A database of
diagnosed patients is searched and the most se-
mantically similar patients to the query are used as references.
Each visualization
then depicts the differential hierarchy comparing the query patient and one reference
patient (Fig.
4.1).
The differential
hierarchies are computed by converting patient
phenotype data into hierarchical data and then comparing nodes (Fig. 4.2).
This re-
sults in nine possible comparison states for each phenotype (Fig. 4.3).
The differential
views distinguish between shared (i.e., observed as present in both patients or absent
in both patients), divergent (i.e., observed as present in one patient but absent in the
other) and missing (i.e.,
observed in one patient,
but neither present nor absent in
the other) phenotypes.
C h a p t e r 4. 
P h e n o
B l o c k s
4 7
Fi g ure 4. 2: 
Di ﬀere nti al hier arc h y c o
m p ut ati o n. 
(
A) 
For e ac h p atie nt, t he list of
p he n ot y p e ter
ms are i nst a nti ate d i n t he (
B) 
H P
O t o cre ate (
C) hier arc hic al d at a.
B ol d str o kes i n dic ate i n p ut p he n ot y p e ter
ms. 
(
D) To f acilit ate vis u al c o
m p a ri s o n s
acr oss di ﬀere nti al vie
ws, 
we deri ve a s h are d hier arc hic al str uct ure as t he u ni o n of
q uer y a n d all refere nce p atie nt s u b gr a p hs. 
( E) Usi n g t he o nt ol o gic al str uct ure, t he
st ates of rele va nt a ncest or a n d desce n d a nt p he n ot y p es are i nferre d, i.e., 
P r e s e n c e
i n a c hil d i
m plies prese nce i n t he p are nt, 
A bse nce i n a p are nt i
m plies a bse nce i n
t he c hil dre n. 
N o des i n t he s h are d hier arc h y wit h o ut d at a f or a p atie nt are 
m a r k e d
as U n k n o w n. 
( F) Fi n all y, we c o
m p are n o des p air
wise b et wee n t he q uer y a n d e ac h
refere nce t o cre ate t he di ﬀere nti al hier arc hies dis pl a ye d i n t he vis u aliz ati o n.
Fi g ure 4. 3: 
Di ﬀere nti al c o
m p aris o n of p he n ot y p es yiel ds ni ne st ates, w hic h c a n b e
cl assi ﬁe d as s h are d, di ver ge nt, missi n g, a n d u n k n o w n.
4. 4 
Cli ni c al 
Di ﬀ e r e nti al 
Di a g n o si s
To u n derst a n d t he cli nic al di a g n osis w or k ﬂ o w, i nter vie
ws were c o n d ucte d wit h t w o
e x p ert cli nic al di a g n ostici a ns, E 1 a n d E 2, w h o h a d 1 4 a n d 2 8 ye ars of di a g n ostic e x p e-
rie nce, res p ecti vel y. T he cli nici a ns h a ve re vie
we d o ver 8, 0 0 0 c ases b et wee n t he
m. T he
Chapter 4.
PhenoBlocks
48
interviews introduced hard handles, described existing diagnosis tools, and provided
a workflow overview.
We generalize tasks and highlight improvements to the current
workflow that informed PhenoBlocks.
4.4.1
Hard Handles
When patients with undiagnosed rare genetic disorders are referred to a specialist, the
first step of differential diagnosis is to identify the most salient phenotypes of a patient,
i.e., textithard handles.
Hard handles are highly indicative of specific disorders; they
have high information content (rare among disorders) and occur with high frequency
in specific disorders.
Hard handles provide the strongest discriminative power to
reduce the set of plausible diagnoses.
Clinicians rely on personal
experience to identify hard handles:
over time,
they
learn which phenotypes are rare or common,
which combinations are expected or
surprising,
and so on.
This is a necessary,
but time consuming and error prone
aspect of clinical diagnosis training.
A clinician identifies hard handles by collecting
data from sources, such as the patient’s EHR or investigating family medical history,
but primarily from an initial face-to-face consultation with the patient.
During this
consultation, a clinician focuses on externally observable phenotypes that present in
the face,
limbs,
and extremities (e.g.,
Low-set Ears or Broad Thumbs).
A clinician
may visually identify dozens of
phenotypes in a patient,
but only a few qualify as
hard handles.
Factors,
such as the patient’s age,
sex,
and ethnicity are all
taken
into consideration when searching for hard handles,
compounding the difficulty of
diagnosis.
4.4.2
Existing Tools
Many hereditary disorders are rare and a clinician may have limited experience with
specific cases (Girdea et al.
2013).
There are currently over 8,000 named diseases
and many thousands more yet to be discovered and classified (Robinson 2012).
Many
tools help clinicians cross-reference phenotypes to associated syndromes and prioritize
the order of investigation during differential diagnosis.
The clinicians we interviewed
use several
tools,
including textbooks,
online databases,
and research prototypes to
support clinical differential diagnosis.
Smith’s Recognizable Patterns of
Human Malformation (Smith’s) (Jones et al.
Chapter 4.
PhenoBlocks
49
2013) is a popular reference textbook.
The appendix lists syndromes associated with
phenotypes and annotates the rate of
co-occurrence as “frequent” or “infrequent”.
The OMIM is a comprehensive online compendium of Mendelian (hereditary) disor-
ders under development since the 1960s (OMIM ;
Amberger et al.
2015) and is the
standard for naming and referencing disorders.
Descriptions of diseases are regularly
updated with the latest research results.
Commonly associated phenotypes and genes
are included, however, OMIM does not contain phenotype frequency information, does
not integrate with the HPO, and only supports keyword search.
LMD is a differential diagnosis database system that identifies associated diseases
based on lists of phenotypes and includes reference photos of example cases (LMD ).
LMD and similar databases,
such as POSSUM (POSSUM ),
are the de facto stan-
dard in clinical medicine.
However, E1 noted that searches require exact phenotype
terms be specified and searches with too many phenotype terms,
or very granular
phenotype terms, may not result in relevant matches.
It is often necessary to perform
multiple searches using increasingly general
phenotype terms,
or even try different
combinations of
terms.
Recent research projects aim to improve the availability of
phenotype frequency data to clinicians.
Orphanet (Orphanet;
Rath et al. 2012) cat-
alogs published research results, updating base-rate frequencies between phenotypes
and associated syndromes.
This project remains an ongoing initiative due to the dif-
ficulty of finding sufficiently large cohorts of patients, particularly for rare disorders.
Phenomizer (K¨
ohler et al.
2009) directly leverages the HPO and supports robust
semantic searching,
meaning the more complete and specific the phenotypes in the
query, the better the results of search results.
PhenoTips (Girdea et al. 2013) provides
a standardized and structured workflow to enter phenotype data using HPO terms.
It
also allows clinicians to share patient phenotypes and automatically suggests similar
cases within the system.
Unfortunately, such systems have not been broadly adopted
in clinical settings.
4.4.3
Existing Workflow
In the literature, clinical diagnosis is characterized as an iterative process of hypothesis
generation and testing (Elstein et al. 1978; Feltovich et al. 1984; Weber et al. 1993).
A clinician typically follows five steps:
(1) identify relevant clinical information about
a patient; (2) interpret the meaning of the data; (3) generate hypotheses supporting
Chapter 4.
PhenoBlocks
50
a coherent explanation in light of the data; (4) test and refine the hypotheses through
further data collection;
and (5) establish a working diagnosis (Elstein et al.
1978).
During our interviews, both clinicians described similar processes, but provided details
specific to differential diagnosis of rare hereditary diseases.
Using identified hard handles,
the clinician compiles a list of
likely syndromes.
The more hard handles unique to a syndrome,
the more likely the syndrome is im-
plicated by the observed phenotypes.
Both E1 and E2 used several
software tools
during this process,
including OMIM,
LMD,
Orphanet,
and PhenoTips,
as well
as
reference textbooks,
such as Smith’s.
They noted that while each has advantages
and disadvantages,
each tool
plays an important role in the process.
Currently,
no
single tool provides all the needed information, so considerable effort is expended to
manually compile, cross-reference, and compare data sources.
The identified disorders form an initial
set of possible diagnoses,
which must be
iteratively evaluated and refined.
Next, the clinicians search for phenotypic evidence
that disconfirms any diagnosis.
If
a hard handle for a specific syndrome is absent
in the patient,
this provides some evidence against that diagnosis;
the greater the
number of absent hard handles,
the stronger the disconfirming evidence.
As not all
phenotypes are externally visible,
phenotypes requiring medical
testing or imaging
are then considered.
Invasive testing is generally deferred until necessary due to cost
and patient comfort.
By identifying the hard handles for each disorder,
additional patient phenotypes
can be prioritized for investigation.
“No one has time to work out the full
phenotype
for every patient.
This is why experience is so necessary to make quick and accurate
diagnoses.
At a certain point, there’s diminishing returns” (E1).
E1 explained that
this process continues until
she has reached a working diagnosis that explains the
presence and absence of all phenotypes.
4.4.4
Tasks
Integrating the findings of
the interviews and literature review,
a set of
high-level
tasks informed the design of PhenoBlocks.
Chapter 4.
PhenoBlocks
51
Collect Initial Data (T1)
Both clinicians identified that clinical differential diagnosis is a challenging undertak-
ing that relies on the experience of a clinician, which is echoed in the literature (We-
ber et al. 1993).
More experienced clinicians may be able to make quicker differential
diagnoses since they know that certain combinations of phenotypes, such as Develop-
mental Delay and Broad Thumbs, are exemplary of a small number of syndromes.
A
less experienced clinician may only focus on the face, and note Developmental Delay
and Long Eye Lashes.
While these are still
hard handles,
they would return more
results than the prior list, and thus more effort and time to cull at a greater cost and
inconvenience to the patient.
Thus, clinicians must engage in a cost-benefit analysis,
identifying a minimal
set of
hard handles that provide high enough discriminative
power to select the most likely diagnosis.
Generate Hypotheses (T2)
Hypothesis generation is akin to a breadth-first
search,
where several
competing
hypotheses are considered concurrently with the ultimate goal
of
reducing the set
through disconfirming evidence (Arocha et al. 1993).
In this domain, the hypotheses
are diagnoses,
a logical
competitor set (Feltovich et al.
1984) of
plausible diseases
with similar presentations but differing underlying causes.
Effective diagnosticians
use data-driven,
forward reasoning.
Backward reasoning increases the chance that
contradictory evidence is considered anomalous and is often used by novices.
The
experience of a clinician is the primary factor determining the quality and diversity
of hypotheses and typically continues until at least one potentially severe outcome is
included (Weber et al. 1993).
On average, four hypotheses are considered at a given
time by clinicians during hypothesis testing (Elstein et al. 1978; Weber et al. 1993).
Seek Disconfirming Evidence (T3)
Failing to seek disconfirming evidence or incorrectly discounting observed disconfirm-
ing evidence are hallmarks of inefficient analysis methods (Heuer 1999).
Both forward
reasoning and seeking disconfirming evidence require sufficient relevant knowledge of
the problem domain.
While generalized knowledge is sufficient to generate hypothe-
ses,
specialized knowledge is necessary for effective evaluation (Arocha et al.
1993).
This is precisely a scenario where visual
analytics tools can excel:
combining the
Chapter 4.
PhenoBlocks
52
strengths of human and electronic processing into an interactive process that extracts
knowledge from data (Keim et al.
2008).
An impediment to quick differential
diag-
nosis lies in the identification of additional
hard handles.
In both initial
phenotype
collection and seeking disconfirming phenotypes,
the lack of
frequency information
forces clinicians to rely on their own experience.
Since all
phenotypes occur with
some frequency, it is possible that a patient with a specific disorder will not present
with all
hallmark features.
Based on experience alone,
this disorder may be prema-
turely discounted due to representational biases of the clinician and investigations of
related phenotypes may not take place.
Evaluate and Refine Hypotheses (T4)
A successful
working diagnosis integrates all
available data into a single,
cohesive
explanation for a case (Arocha et al.
1993) and relies on abduction (Josephson &
Josephson 1996).
These explanations disconfirm competing hypotheses in light of
all available information (Weber et al. 1993).
The major cause of misdiagnosis is the
failure to integrate clinical data properly, meaning that although all relevant data was
collected and correctly interpreted, there was a failure to combine it into a coherent
explanation (Groves et al.
2003).
Expert analysts require only minimal
information
to make an informed decision as they focus on fewer dominant factors that have the
biggest influence,
not more data.
Thus,
investigation towards these critical
factors
should be promoted (Heuer 1999).
These steps continue until
all
evidence can be
integrated into a single explanation for the phenotypes of the patient.
4.4.5
Workflow Improvements
Conceptualizing phenotypes and their relationships is thus not a trivial task.
Existing
clinical tools provide text-based interfaces to phenotype data, requiring clinicians to
consider many relationships abstractly in their minds.
Visualization can alleviate this
burden by explicitly representing phenotypes within the broader ontological context
afforded by the HPO.
After addressing the shortcomings of
existing tools and the
tasks elicited, a proof-of-concept visualization was designed and preliminary feedback
was collected from clinicians.
Chapter 4.
PhenoBlocks
53
Concurrent Investigation and Evaluation (G1)
Clinicians rarely access diagnostic databases concurrent with patient consultations,
resulting in increased diagnosis durations because clinicians need to continually con-
sult databases and then reevaluate the patient,
i.e.,
“If
data can be entered at
the
time of seeing a patient,
it could allow for quicker and more complete phenotyping”
(E1).
This parallelism of investigation and evaluation is described in Wheaton’s multi-
phasic model of intelligence analysis and has also been empirically observed (Kang &
Stasko 2011).
A tighter coupling of phenotype observation and evaluation could help
clinicians identify phenotypes to investigate more efficiently (T1).
Structured Externalizations (G2)
Clinicians often record investigations through ad hoc,
hand-written notes.
From a
distributed cognition perspective, insight is an emergent property of interaction with
externalized representations of information (Liu et al.
2008).
This mirrors Pirolli
&
Card’s schemas (2005) and Heuer’s structured externalizations (1999).
Interactive
visualizations could thus benefit hypothesis generation by externalizing the thought
process and help in the evaluation of
competing hypotheses by offloading abstract
comparisons to concrete visual representations.
Compared to novices, expert diagnosticians generate hypotheses that account for a
wider range of potential medical outcomes (Arocha et al. 1993) and with higher gran-
ularity due to their learned sensitivity to the expected base-rates of disorders (Weber
et al. 1993).
Visualizations thus act as a record of the phenotypes investigated during
a successfully diagnosed case.
This could help novice clinicians learn by example and
support expert clinicians when they have limited personal
experience in a rare case
(T4).
In both cases,
visualizations can suggest additional
phenotypes to investigate
(T3).
Availability of Frequency Information (G3)
Given the current workflow, clinicians spend significant time integrating information
from multiple data sources.
It is valuable to know whether a phenotype is hallmark
and/or rare given a specific disorder (T1,
T2,
T3,
T4).
Clinicians use their knowl-
edge of
phenotype frequency to disconfirm diagnoses where these features are rare
and highlight diagnoses where they are hallmarks.
With such visualizations how-
Chapter 4.
PhenoBlocks
54
ever,
you no longer need to have first-hand experience if the system can provide you
with a better picture through concrete examples of
what potential
combinations are”
(E1).
Knowledge of phenotype frequency also enables a clinician to better prioritize
the order of investigation;
hallmark phenotypes should be investigated before lower
frequency phenotypes.
Phenotype Completeness and Granularity (G4)
When provided with exhaustive lists of detailed phenotypes, existing diagnostic tools
do not always return better results.
This may inadvertently discourage complete
and granular phenotyping.
Presenting clinicians with examples of
diagnosed cases
provides a benchmark of the quantity and quality of phenotyping required for a given
diagnosis.
Moreover,
exposure to an actual
rare case of a diagnosed disorder could
mitigate errors of probabilistic reasoning by concretely representing a case where some
hallmark phenotypes are missing.
Thus,
visual
analytics tools can provide better
assistance to clinicians when they are shown examples of complete and granular data
(T4).
Since a major barrier to phenotyping is a lack of time, minimizing the cost of
entering phenotype data into a system could encourage phenotype completeness and
granularity and should be standard practice for clinicians.
4.5
Related Work
PhenoBlocks builds upon a variety of prior visualization techniques from several do-
mains:
bioinformatics, healthcare, and ontology and hierarchy comparison.
4.5.1
Visualization in Bioinformatics
Interest in the domain of computational
bioinformatics drove the application of al-
gorithmic approaches to improve our understanding of
the human genome (Clare
2005;
Houle et al.
2010).
Following this trend,
many bioinformatics visualization
tools
support
the exploration of
genomic data,
including genome browsers
(e.g.,
Savant2 (Fiume et al.
2012)),
visualizations of
genome sequence assemblies (e.g.,
ABySS-Explorer (Nielsen et al.
2009)),
visualizations of
genome comparison (e.g.,
Circos (Krzywinski et al. 2009), MizBee (Meyer et al. 2009)), and tools for gene vari-
ant analysis (e.g., Variant View (Ferstay et al. 2013)).
See Arndt (2008) and Nielsen
Chapter 4.
PhenoBlocks
55
et al. (2009) for reviews in this area.
These tools do not typically focus on visualizing
patient phenotypes.
The increasing availability of low-cost, high-throughput genome sequencing tech-
niques has motivated research into disease genesis and evolution.
New tools allow
one to investigate the causality of gene variation on phenotypes (e.g., Arena3D (Se-
crier et al.
2012),
PheWAS (Denny et al.
2010),
PheWAS-View (Pendergrass et al.
2012), among others (Binder et al. 2015)) and rely on Manhattan plot visualizations
of statistical analysis results or use machine learning to visualize complex associations
between genes,
proteins,
and phenotypes.
Such tools are integral
to understanding
how genes and phenotypes differ across disease cohorts.
Our focus,
however,
is to
visualize a specific patient’s phenotype data against a cohort for healthcare purposes.
4.5.2
Visualization in Healthcare
A wealth of visualization tools have been developed to explore patient EHRs.
Most
efforts focus on patient medical
histories in a time-oriented context,
including mon-
itoring a single patient’s overall
condition (e.g.,
LifeLines (Plaisant et al.
1998),
Vi-
suExplore (Rind et al.
2011b)),
analyzing a patient’s response to a treatment (e.g.,
IPBC (Chittaro et al. 2003), CareCruiser (Gschwandtner et al. 2011)), and aggregat-
ing multiple patient records in a cohort as a baseline to compare a specific individual’s
evolving symptoms (e.g.,
Lifelines2 (Wang et al.
2008),
LifeFlow (Wongsuphasawat
et al. 2011)).
See Rind et al. (2011a) and Shneiderman et al. (2013) for reviews in the
area.
These tools are helpful decision-making aids for clinicians when determining a
course of treatment for acute or chronic patient problems.
To account for the range
of problems that could present, these visualizations often focus on the complete EHR.
In contrast, little attention has been devoted to specifically visualizing phenomic data
in the context of diagnosing rare hereditary syndromes.
4.5.3
Ontology and Tree Comparison Visualization
An ontology formalizes domain knowledge by describing concepts and their inter-
relations,
and often results in a hierarchy of
multiple-inheritance represented as a
directed acyclic graph.
Selecting an appropriate visualization technique can be chal-
lenging due to the complexity of the interrelations and the importance of representing
leaf nodes.
In their comparative survey, Katifori et al. (2007) assert that hierarchical
Chapter 4.
PhenoBlocks
56
space-filling visualization techniques are good candidates for visualizing ontologies,
with Treemaps, Icicle plots and Sunburst visualizations (Stasko & Zhang 2000) as the
most widespread examples.
PhenoBlocks uses Sunburst visualizations to display the
HPO as the radial layout equalizes the size of both ancestor and leaf nodes and has
been successfully applied within other healthcare tools.
Three categories
of
visual
techniques
are relevant
to compare hierarchical
vi-
sualizations,
i.e.,
side-by-side views
(e.g.,
TreeJuxtaposer
(Munzner
et
al.
2003),
DaViewer (Zhao et al.
2012),
among others (Bremm et al.
2011)),
differential
views
(e.g.,
TreeVersity (Guerra-G´
omez et al.
2013),
among others (Tu & Shen 2007;
Van
Ham 2003)) and animation (Robertson et al.
2002).
See Graham & Kennedy’s sur-
vey (2010) for a broader review.
Consensus trees have been used to summarize the
agreement of
topological
features across multiple trees (Munzner et al.
2003;
Zhao
et al. 2012).
The approach in PhenoBlocks differs in that not only are shared features
computed,
but we also explicitly account for dissimilar features and visually encode
the source of the difference.
These differential
views provide specific pairwise com-
parisons between the phenotype hierarchies of two patients.
Unlike prior work, where
differential
views highlight changes in node value within hierarchies (Guerra-G´
omez
et al.
2013;
Tu & Shen 2007;
Van Ham 2003) this work focuses on both topological
and value differences between hierarchies.
4.6
PhenoBlocks Tool Description
PhenoBlocks follows a clinician’s workflow when diagnosing a new patient.
This
undiagnosed patient is the query patient.
The clinician enters phenotypes for the
query patient and PhenoBlocks searches its database for existing diagnosed patients
with similar phenotypes.
The results of
this search are reference patients and are
grouped by disease and ordered by semantic phenotype similarity.
The number of
diseases and number of patients per disease are configurable parameters in the system.
The clinician then uses the visualizations to prioritize phenotype investigations with
the query patient, and enters new phenotypes interactively until a diagnosis is reached.
Chapter 4.
PhenoBlocks
57
4.6.1
Patient Phenotype Data
The prototype system uses a database of
47 patients across six genetic disorders,
with between 3 and 11 patients per disorder.
As part of the FORGE Canada Consor-
tium (FORGE Canada),
phenotype data for each patient was digitally transcribed
from published research investigating cohorts of patients with diagnosed diseases.
•
Floating Harbor Syndrome
(Gene:
SRCAP, OMIM: 136140, PMID: 22265015)
•
Mandibulofacial Dysostosis with Microcephaly
(Gene:
EFTUD2, OMIM: 610536, PMID: 22305528)
•
Microcephaly-Capillary Malformation Syndrome
(Gene:
STAMBP, OMIM: 614261, PMID: 23542699)
•
Chudley-McCullough Syndrome
(Gene:
GPSM2, OMIM: 604213, PMID: 22578326)
•
Hajdu-Cheney Syndrome
(Gene:
NOTCH2, OMIME: 102500, PMID: 21681853)
•
Joubert Syndrome
(Gene:
C5orf42, OMIM: 614615, PMID: 22425360)
The database consists of a list of present and absent HPO terms for each patient.
Complete and granular phenotype data of diagnosed patients are becoming available
through research prototypes (i.e.,
PhenoTips (Girdea et al.
2013)).
Alternatively,
a
clinician can enter custom data into the system to visualize comparisons of specific
patients.
4.6.2
Sunburst Visualizations
To visualize the differential hierarchy of patient phenotypes (Fig. 4.2), we first convert
the data into a tree by way of duplicating nodes with multiple-inheritance.
A typical
differential hierarchy is attributed 10-20 phenotypes and the depth of the converted
tree is around 10 levels deep, containing between 30-75 nodes.
Chapter 4.
PhenoBlocks
58
PhenoBlocks displays the tree structure using a space-filling hierarchical
visual-
ization approach.
The Sunburst layout was used as its radial
shape makes the best
use of display space and, unlike Treemaps, all nodes of the hierarchy are represented
simultaneously.
This is important for structure-based comparisons, such as identify-
ing the nearest common ancestor of two phenotypes.
In contrast to Icicle plots, leaf
nodes are also afforded more space in the layout.
Phenotypes around the periphery of
the chart are critical to differential diagnosis as they are the most granular description
of an abnormality.
Each Sunburst visualization represents a differential hierarchy between the query
and a reference.
Phenotypes are colour-coded based on their state,
with intensity
communicating a hard handle score.
This weighted score represents both the rareness
of the phenotype among all disorders and the likelihood of occurring in the reference
disorder,
making potential
hard handles visually salient.
Phenotypes are grouped
into high-level
categories (e.g.,
Abnormality of the Head and Neck),
defined by the
children of
the root HPO node.
These categories visually divide the Sunburst into
distinct regions.
Working with clinicians,
a set of
icons were designed to represent
each category in the visualization (Fig. 4.4).
In the Overview, the comparisons are displayed as small-multiples that are grouped
by disorder and arranged into rows (Fig.
4.5A).
Disorders are ordered by greatest
Figure 4.4:
Working with the clinicians, we developed a set of icons to represent the
high-level categories of phenotypic abnormalities.
Chapter 4.
PhenoBlocks
59
similarity from top to bottom.
Comparisons within disorders are ordered by greatest
similarity from left to right.
A Detail
View shows a larger and more detailed ver-
sion of
a single comparison,
selected in the Overview (Fig.
4.5B).
The Detail
View
is the primary user interaction area.
It supports details-on-demand through hover
feedback, filtering of the hierarchy, and in-place modification of data.
An interactive
legend identifies the nine possible states for a phenotype (Fig. 4.5E).
Differential Views using Small-Multiples
To facilitate the pairwise comparison of
the query patient with that of
each of
the
reference patients, PhenoBlocks employs differential views using small-multiples in the
Overview.
Hence,
the strengths of
differential
views are leveraged,
as comparisons
within a disease share the same structure, but with different visual encodings.
When
one hovers over a phenotype in the Detail View, the details of that phenotype within
each small-multiple are displayed underneath, including the phenotype state and hard
handle score (Fig. 4.5C).
These differential
views allow for a concurrent breadth-first comparison of
the
Figure 4.5:
PhenoBlocks user interface.
(A) Overview of differential views using small-
multiples.
(B) Detail
View of highlighted comparison in Overview.
Hovering over a
phenotype displays details under small multiples and indented list.
(C) Details under
small multiples include hard handle score and phenotype frequency.
(D) Indented list
of
ancestors and descendants.
(E) Interactive legend.
(F) Toolbar.
(G) Advanced
panel.
Chapter 4.
PhenoBlocks
60
query to several references across multiple disorders.
Clinicians can quickly look over
the range of potential disorders to guide their phenotypic investigations.
Details-on-Demand
The interface supports immediate feedback to the clinician.
First, linked updates to
the Overview reveal
the phenotype state and hard handle score under each small-
multiple comparison (Fig.
4.5C).
Second,
hovering over phenotypes in the Detail
View displays an indented list of ancestors and descendants (Fig. 4.5D). Interactively
exploring the comparisons may encourage a deeper analysis of what phenotypes could
be important to their patients,
including some less obvious phenotypes.
Reporting
on these phenotypes would improve the completeness and granularity of phenotype
reporting (G4).
Interactive Filtering
The visualizations can also be interactively filtered.
First,
interactive legends can
be used to filter phenotypes of a certain state (Fig.
4.5E).
Second,
the first level
of
phenotypes define general
categories,
such as Abnormality of
the Skeletal
System.
These categories can be collapsed or expanded by clicking on their icons to filter
unwanted information or reduce visual
clutter (i.e.,
if a clinician wants to focus on
a particular category of abnormalities).
Third,
the Collapse Button in the Toolbar
reduces the visual
complexity of the hierarchy by removing redundant intermediary
phenotypes (i.e., phenotypes with only a single child) (Fig. 4.5F). In all cases, smooth
animated transitions maximize change awareness.
Adding and Editing Query Phenotypes
Several
mechanisms allow clinicians to add and edit the phenotypes of
the query
interactively.
First,
the Edit Phenotypes button in the Toolbar displays a modal
window to edit the present and absent phenotype terms (Fig. 4.5F). Tokenized, auto-
completing dropdown lists allow one to search for specific phenotypes using HPO
names or IDs.
Second, clicking on a phenotype in the Detail View supports in-place
data editing, modifying the state of the phenotype from unknown to present or absent.
Third, an Advanced Panel can be displayed and used to edit the underlying data in
JSON format directly (Fig. 4.5G). In all cases, the visualization immediately updates
Chapter 4.
PhenoBlocks
61
(G1).
By supporting multiple methods of quickly editing a patient’s phenotypic data,
we hope to encourage more complete phenotyping (G4).
Example-Based Comparisons and Frequency
At the core of
PhenoBlocks are comparison visualizations of
query to similar ref-
erences in multiple disorders.
Unlike existing clinical
tools,
these comparisons are
displayed visually and in the context of
the relevant subgraph of
the HPO (G2).
These visualizations act as an aid to externalize the thought process of the clinician
and can be used as a visual record of the diagnosis process.
Since the frequency of
phenotypes within disorders is paramount to diagnosis,
we take the approach of displaying example-based comparisons to existing diagnosed
cases (G3).
In addition to the hard handle scores visualized in the comparisons, these
concrete references provide exemplars of the hard handles considered by other clini-
cians in their diagnoses.
References can also highlight outlier cases that are similar
to the query,
which can alert a clinician not to discount a diagnosis prematurely.
As probabilistic reasoning can be difficult even for experts (Heuer 1999),
explicitly
presenting an example of a diagnosed case where a hallmark phenotype is absent can
be helpful.
Seeing examples of complete and granular diagnosed patient phenotypes may en-
courage clinicians to provide a similar level of reporting completeness and granularity
(G4).
Visual Encoding
The visual
encoding scheme was designed to highlight potential
hard handles and
identify how the phenotypes of patients differ.
Finding an optimal
visual
encoding
strategy for the dataset was difficult as there were nine ordinal states to differentiate
and the hard handle ratio score.
Although one could use the divergent-divergent
colour scheme proposed by Harrower & Brewer (2003), the colors were too disparate,
making interpretation tedious,
and requiring frequent legend consultations.
What
was needed was to confer a semantic meaning to groups of
colors.
We wanted to
group based on the states of
phenotypes into shared,
divergent,
missing in query,
missing in reference, and unknown (Fig. 4.3).
What complicated matters was that we
also wanted to differentiate whether a present or an absent phenotype was involved
Chapter 4.
PhenoBlocks
62
in the comparison.
We could not find an existing color palette that met all three of
these needs.
Absent phenotypes do not occur as frequently as present phenotypes in the data,
likely because it is more difficult to confirm the absence rather than presence of
a
feature.
This was confirmed during our conversations with clinicians.
To differentiate
between the key phenotype states,
represent a ratio value,
and confer presence and
absence,
a novel
palette based on Brewer’s two-pair categorical
scale was developed
(Fig. 4.6).
The darker colour variant was used for present phenotype comparisons, and
the lighter variant for absent phenotypes.
A fully saturated absent phenotype would
never be as salient as a fully saturated present phenotype, but since absent phenotypes
are less prevalent and they tend to be more granular,
they stand out in contrast as
islands within larger areas of darker, present comparisons.
This provides aesthetically
pleasing results while not hindering the interpretation of the visualization.
Shared Phenotypes (Greens):
Shared phenotypes between the query and ref-
erence are the primary indicator of overlapping traits.
These shared phenotypes can
be present in both, or absent in both.
Patients may not always share the same gran-
ularity of phenotypic abnormality description;
however,
by investigating the nearest
common ancestor, a decision can be made regarding the similarity of the two traits.
These are represented by shades of green with purple and orange descendants.
Potential Hard Handles (Purples):
Phenotypes that are missing in the query,
but present in the reference are good indicators of potential hard handles.
These are
represented as shades of purple.
Figure 4.6:
In PhenoBlocks, the colour communicates the state of a phenotype com-
parison.
The intensity of the colour indicates the strength of the hard handle score.
Chapter 4.
PhenoBlocks
63
Divergent Phenotypes (Blues):
In some cases,
there is a clear difference be-
tween the phenotype of the query and the reference; the phenotype is present in one
and absent in the other.
Missing Reference Phenotypes (Oranges):
Sometimes, a query will present
with a phenotype that is unknown in the reference.
These suggest areas where a
difference may exist, but there is a lack of supporting data.
If these phenotypes have
high hard handle scores, they may indicate a mismatch of the query patient to that
disorder, or provide a starting point to seek additional information from the clinician
of the reference patient.
Input Data:
The actual
phenotypes entered into the system are represented
using a black dot.
These provide landmarks indicating where the clinician has already
investigated.
4.6.3
Comparison Algorithms
All the scores represented in the PhenoBlocks visualization are based on a phenotype’s
information content (Eq. 3.1; K¨
ohler et al. 2009).
Similarity Score:
The similarity score ranks similar reference patients in the
database based on the phenotypes of a given query patient.
We calculate similarity
using the PhenoTips algorithm (Girdea et al.
2013),
but account for absent terms
(i.e.,
sharing absent phenotypes is also a similarity).
The similarity score algorithm
is interchangeable with any other method with corresponding inputs and outputs.
Importance Score:
The similarity score for a phenotype is based on combining
the similarity scores of its descendants.
While useful to calculate an overall similarity
score,
it is insufficient to identify hard handles,
where attention should be drawn to
specific intermediary phenotypes and not necessarily their ancestors.
To account for
this, an importance score based on phenotype state was developed (Fig. 4.3).
Similar in Both:
When a phenotype is common in two patients,
we can use the
information content score of
that phenotype,
directly.
The most important shared
phenotypes are always the most specific.
Missing in a Patient:
When a phenotype appears in only one patient,
the im-
portance score is calculated as the information content of that phenotype reduced by
the highest information content among all shared ancestors of that phenotype.
This
results in a lower importance score for phenotypes that share a closer nearest com-
Chapter 4.
PhenoBlocks
64
mon ancestor,
while increasing importance score for phenotypes where the nearest
common ancestor is farther, to highlight larger differences.
Absent Phenotypes:
Absent phenotypes complicate the calculation of the impor-
tance score.
Unlike present phenotypes,
absence is inherited by descendants,
not
ancestors,
implying that more general
absent phenotypes (e.g.,
Abnormality of
the
Skeletal
System) have greater discriminatory power than more specific phenotypes
(e.g.,
Abnormality of the Finger).
Thus,
in states involving absent phenotypes,
the
importance score is calculated as the complement of the information content of that
phenotype.
Frequency Score:
Using frequency annotations from Orphanet (Orphanet ), we
calculate a frequency score based on the reference patient’s disorder.
If no frequency
information exists for a phenotype,
it is assigned the highest frequency among its
annotated descendants.
If no annotated descendants exist, it is assigned the average
frequency of all annotations.
If no frequency information exists, the computed average
frequency of all phenotypes (0.51) is used.
Hard Handle Score:
The hard handle score is the average of the importance
and frequency scores for a given phenotype.
4.7
Clinical Use Case Scenario
PhenoBlocks was designed to be used by clinicians during all
phases of
differential
diagnosis.
In this section,
we detail
how concrete tasks can be completed using
PhenoBlocks.
While the dataset does not currently include a full range of disorders,
we illustrate use through a simplified, hypothetical example.
4.7.1
Collecting Phenotypes and Generating Hypotheses
Consider an undiagnosed patient who is referred to a specialist for consultation.
Im-
mediately,
two striking features stand out:
they are unable to speak and have short
stature.
These terms are entered into PhenoBlocks and these phenotypes are visual-
ized, along with similar reference patients from different disorders.
The search results
are limited to three similar disorders, with five references each (Fig. 4.7).
The three disorders are listed, ordered by similarity score:
Floating-Harbor Syn-
drome (FLHS), Microcephaly-Capillary Malformation Syndrome (MCMS), and Chudley-
Chapter 4.
PhenoBlocks
65
Figure 4.7:
Initial
view.
(A) Deeper green implies more important shared features.
(B) Short Stature is a shared phenotype in FLHS. (C) Absent Speech is missing (or-
ange),
but its direct ancestor is shared (green).
(D) Possible hard handles appear
in deep purple.
(E, F) Hovering over Short Stature allows comparison of phenotype
details between differential views.
(G, H) Hovering over Abnormality of Skeletal Mor-
phology yields an indented list of all children, supporting quick overview of granular
phenotypes across all differential views.
Chapter 4.
PhenoBlocks
66
McCullough Syndrome (CMCS).
Looking at the small-multiples,
the darker green
FLHS comparisons indicate more important phenotypes are shared between the query
and references (Fig. 4.7A). First, we investigate the highest ranked comparison.
Immediately,
we notice the deep green of
Short Stature,
which signifies it is a
likely hard handle (Fig.
4.7B).
Hovering over this phenotype displays details under
each small-multiple (Fig. 4.7EF). We notice that Short Stature is present in all FLHS
references and that it is a hallmark (FR 90%) of the disorder (Fig. 4.7E). The details
of
both MCMS and CMCS indicate with orange that this phenotype is missing in
the reference (Fig.
4.7F).
In MCMS frequency information indicates this phenotype
is rare (FR 5%),
so this is not a hard handle for MCMS.
All
CMCS patients are
missing Growth Abnormalities, indicating this may not be an important feature, but
too early to discount completely.
Next, we turn to Absent Speech.
While this phenotype is missing in the reference
we note the direct ancestor, Delayed Speech and Language Development, has a deep
green colour (Fig.
4.7C).
This indicates semantically similar terms are used in the
reference patient,
and suggests related phenotypes to investigate.
When comparing
across disorders,
we note Delayed Speech and Language Development is shared by
all
FLHS references but only by one CMCS reference.
This is additional
evidence
against CMCS.
In summary,
there appears to be moderate evidence for FLHS,
but
further investigation is necessary.
In this first step,
we collected initial
phenotypes
(T1),
started generating hypotheses (T2),
and demonstrated the value of frequency
information (G3).
The use of visualization has helped us understand the similarities
and differences between disorders (G2).
4.7.2
Identifying Disconfirming Hard Handles
Now that we have a plausible diagnosis (i.e.,
FLHS),
we want to identify potential
hard handles that can help differentiate the disorders.
For this,
we look for deep
purple areas in the comparisons.
There are many,
so we focus on specific categories
that are different in size between disorders.
For example, Abnormality of the Skeletal
System is large in both FLHS and MCMS, but small in CMCS; Abnormality of the
Head and Neck has many features for FLHS, and not the others.
Looking at the skeletal abnormalities of FLHS and MCMS, across the small mul-
tiples, most references (4/5) share Abnormality of the Fingers.
We can quickly view
Chapter 4.
PhenoBlocks
67
all
descendants of a phenotype with the indented list view (Fig.
4.7GH).
In FLHS,
these abnormalities are Broad Fingertip, Broad Thumb, and Fifth Finger (Fig. 4.7G).
Most MCMS references (4/5) share Short Distal
Phalanx of Finger (Fig.
4.7H).
In-
vestigating head and neck abnormalities,
we see that in FLHS references these are
limited to the face, while in CMCS references they are limited to skull size.
This in-
formation is quickly parsed using visual encodings; traditional methods would involve
cross-referencing textbooks and databases.
These observations lead us to look more closely at the hands and face of our patient
to try and identify more hard handles.
We find that our patient has a triangular
face, with a long, wide nose, and also confirm presence of Fifth Finger Clinodactyly.
However,
we find no broad thumbs or fingertips.
After further investigation,
we
generalize the absence of Abnormality of the Phalanxes of Fingers and Abnormality
of Skull Size.
Broader absences are more discriminative.
By investigating where phenotypes of the query patient differ from the references,
we are able to prioritize an investigation of
disconfirming hard handles (T3).
This
process can be done interactively during a patient consultation (G1).
By comparing to
diagnosed references, granular present phenotypes, such as Fifth Finger Clinodactyly,
and general
absent phenotypes such as no Abnormality of
Skull
Size (G4) can be
indicated.
4.7.3
Hypothesis Evaluation
These new phenotypes are added directly into the visualization by clicking on the
respective phenotypes and selecting the new state, thus receiving immediate feedback
as the visualization is updated (Fig. 4.8).
We see many more shared phenotypes across
FLHS references,
and note that the green colour reaches the periphery,
indicating
specific shared features (Fig.
4.8A).
This contrasts MCMS references where shared
phenotypes are more central.
The presence of orange highlights differences between
the patient and the MCMS references (Fig.
4.8B).
By exploring the details of
the
updated visualization, hypotheses can be further evaluated (T4).
Chapter 4.
PhenoBlocks
68
Figure 4.8:
Updated view.
(A) Green phenotypes reach the periphery in FLHS,
indicating specific features are shared,
in contrast to (B) MCMS where only central
general features are shared and granular phenotypes are purple or orange.
4.8
Informal Evaluation
PhenoBlocks was presented to the clinicians consulted in follow-up interviews.
First,
we explained the visual encoding strategy and the calculation of the hard handle score.
Second, we described the interface and interactions.
Finally, we walked through the
usage scenario described above to elicit general feedback about the tool and to reflect
on its use in their existing workflow.
Overall,
the clinicians were excited by the ability to visually compare patient
phenotypes,
“it
is amazing to be guided by what
the biggest
differences are [. . . for
example,]
one that has a specific eye phenotype and the other two don’t.
The clear
next step is to input the phenotype for the patient’s eye.
This helps me focus on the
diagnosis, not searching databases [. . . ]
I think that’s the main difference between this
and any of the other tools that I’ve seen” (E1).
Realistic Usage Scenario:
The use case scenario focused on using PhenoBlocks
from the very beginning of the differential
diagnosis workflow,
entering phenotypes
one at a time.
We were cautioned this is unlikely, as clinicians are trained to quickly
Chapter 4.
PhenoBlocks
69
filter through possible disorders while collecting initial
phenotypes.
However,
the
power of the tool
lies in investigating details,
“[PhenoBlocks] comes in to be helpful
as soon as you [. . . ]
enter [all
the phenotypes].
Then you start to think ‘ok, what do
I need to look specifically for, that I haven’t necessarily checked for?”’
(E1).
One clinician commented that ideally PhenoBlocks could be used in conjunction
with PhenoTips to create a “diagnostic hub” that would “take over the functional-
ity of
the LMD database from the point of
view of
inputting the phenotypes” (E1).
LMD would still
be useful
as a reference tool
for clinical
descriptions and reference
photographs.
Importance and Frequency:
The clinicians noted the hard handle score was
the most important part of this tool for both hypothesis generation and evaluation.
Because it is a “composite of information content and OMIM frequencies [it provides]
a way to visually interpret both scores simultaneously” (E2),
which is currently not
possible.
E1 stated,
“if
my patient
had a phenotype that
was really uncommon in
a particular syndrome or was absent in a syndrome I was looking at and I thought
the phenotype was really important
[. . . ]
then that
would lead me away from that
particular syndrome.”
This score also provides guidance in prioritizing the next tests to run,
“I don’t
want to go x-ray a [patient] for short phalanges if that’s only present in 2% of [cases]
because that isn’t going to help me.
But, if 100% of [patients] with this condition have
an abnormal
thumb on x-ray,
that’s the type of
thing that would make you push for
that particular investigation” (E1).
Moreover, the clinicians agreed that seeing an outlier case was more powerful than
knowing the frequency alone, “you could have a patient with [a disorder], but without
the hallmark features.
If you’re presented with an example of [that disorder] that lacks
these features [. . . ]
it helps to ground the probability in a concrete example.
So, it’s
really helpful
to see that in a graphical
representation” (E1).
Absent phenotypes:
With respect to the underrepresentation of absent pheno-
types in the dataset,
E2 commented,
“in my own experience,
absences are notes of
an explicit evidence trail
that a hypothesis was tested.” Even though they are more
discriminative,
general
absences are seldom reported because the time they take to
investigate does not align well with hypothesis-driven testing.
Other Application Areas:
One clinician commented that this style of visual-
ization could be applied to general clinical diagnosis scenarios, “I still
think this is a
Chapter 4.
PhenoBlocks
70
really,
really interesting way of
thinking about diagnosing.
Not just for genetics but
for any area of medical specialty [. . . ]
If somebody comes in with chest pain, what you
really want are those conditions where chest pain is typically the presenting feature”
(E1).
While using PhenoBlocks during our first interview, one clinician quickly noticed,
none of
the reference patients of
Floating-Harbor Syndrome exhibited one of
the
hallmark features,
which was highly atypical.
Upon further investigation,
we found
some phenotypes were omitted from the data set during transcription.
PhenoBlocks
could thus also be helpful in validating new data against existing examples.
4.9
Conclusion and Future Work
PhenoBlocks was well
received by the clinicians we interviewed and they saw that
it could improve their existing diagnosis workflow.
We are interested in integrating
PhenoBlocks with PhenoTips, as suggested in our feedback.
We also want to extend
the features of
PhenoBlocks to also account for additional
patient features such as
age,
sex,
and ethnicity.
These would be additional
inputs that could personalize
the importance score for a given patient,
e.g.,
an adult-onset phenotype could be
given less weight when the query patient is a child.
Lastly,
we are interested in a
longitudinal
study with clinicians,
to investigate how their workflows are affected
when given access to the tool in a real-world usage scenario.
PhenoBlocks is a novel visual analytics tool to aid clinicians during differential di-
agnosis of rare genetic disorders.
A user-centered approach was used and the informal
evaluation suggested that visually comparing new patients to diagnosed cases can lead
to insights not currently supported by existing text-only tools.
These visual analyses
can also help clinicians to quickly generate and evaluate hypotheses,
as well
as pri-
oritize clinical investigations with patients.
Potential also exists to use PhenoBlocks
in a genetics research to visualize phenotypic variation between patients of
a gene
variant cohort.
The visualization design and visual
encoding used by PhenoBlocks
could also be applied more generally to non-genetic clinical diagnosis.
Chapter 4.
PhenoBlocks
71
4.10
Acknowledgements
This work was partially funded by a NSERC/CIHR Collaborative Health Research
Project grant to Dr.
Brudno.
We thank Orion Buske,
Taila Hartley,
and Marta
Girdea for transcribing data, Michelle Annett for feedback on this chapter, and John
Hancock for being the best lab manager.
In addition,
we acknowledge Dr.
Stephen
Meyn and Dr.
Sarah Bowdin for graciously setting aside time to speak with us.
Chapter 5
PhenoStacks
The second case study
1
investigated cross-sectional
cohort analysis of patients with
rare genetic diseases.
This chapter contributed PhenoStacks,
a visual
analysis tool
that supported comparison of patterns across the phenotypes of patients in a cohort.
The design of
PhenoStacks was informed by a characterization of
the analysis
tasks used by domain experts.
Phenotype data from a cohort of patients was instan-
tiated as an analytical
abstraction based on the Human Phenotype Ontology and
comparison methods were extended to consider many-to-many comparisons.
The re-
sulting comparisons were organized using a matrix and the observations of individual
phenotypes explicitly encoded.
The number of patient records increased an order of
magnitude to many 10s of patients.
Feedback collected from evaluations of PhenoBlocks identified that the duplication
of phenotypes in the hierarchical structure due to multiple inheritance was confusing.
To resolve this, the technical challenge addressed development of a method of simpli-
fying the breadth of the topology so that each phenotype was represented under one
“best” parent node.
The ontology-based analytical
abstraction was extended with
this method to produce a simplified topological
structure.
The simplified structure
was used to group phenotypes under categories that were relevant to each data set.
1
The contents of this chapter has previously been published as:
Glueck, M., Gvozdik, A., Cheva-
lier, F., Khan, A., Brudno, M., & Wigdor, D. (2017).
PhenoStacks:
cross-sectional cohort phenotype
comparison visualizations.
IEEE Transactions on Visualization and Computer Graphics
, 23 (1), 191–
200
72
Chapter 5.
PhenoStacks
73
5.1
Introduction
The insights we garner by deepening our understanding of human genetics can im-
prove general
medical
practice,
from better predicting the side effects of
medical
interventions (Houle et al.
2010) to guiding new approaches to treat everyday dis-
eases (Baynam et al.
2015).
As studying rare genetic diseases can lead to broad
insights into human genetics, genetics and genomics scientists, as well as clinical ge-
neticists,
continue to unravel
the complex interactions between genes,
environment,
and visual manifestations (i.e., phenotypes) (Houle et al. 2010).
Although phenotypes are powerful indicators of disease and have a long history of
use in diagnostic medicine,
formative interviews with genetics researchers indicated
that there is a lack of standardized workflows and systematic approaches to pheno-
type data analysis.
Individual
research groups typically collect phenotype data us-
ing self-designed instruments and protocols, manage internal databases, and conduct
analyses using a combination of
custom scripts,
spreadsheets,
and statistical
pack-
ages.
Unlike gene-oriented analyses (e.g.,
(Shachak & Fine 2008;
Shyr et al.
2016),
dedicated tools for phenotype analyses do not exist.
This is in large part due to use
of natural
language to describe phenotypes within electronic health records (EHRs)
or in published case reports.
Such language results in unstructured phenotype data.
While access to centralized disease registries is growing,
phenotype data collected
by different investigators and institutions varies widely depending on collection pro-
tocols,
diagnostic methodologies,
and resource constraints,
as well
as measurement
subjectivity and investigator diagnostic interests and priorities.
Many notations, ab-
breviations,
and synonymous terms have evolved (Robinson 2012) and are reported
at different granularities of detail (Lussier & Liu 2007).
These factors can introduce
uncertainty regarding the actual observations of a clinician when comparing published
results (Robinson et al. 2008) and complicates computational analysis.
Structured approaches to phenotype data aim to address these issues of
consis-
tency,
completeness,
granularity,
and computability.
The Human Phenotype Ontol-
ogy (HPO) (K¨
ohler et al. 2013; K¨
ohler et al. 2016) is the first ontology for phenotypes;
an on-going initiative to standardize terminology and add structure by defining re-
lationships between phenotypes (i.e.,
semantic,
logical,
hierarchical).
The HPO also
facilitates interoperability with external
disease databases that link genes,
pheno-
types, and diseases (e.g., OMIM, OrphaNet) (Robinson et al. 2015).
Leveraging the
Chapter 5.
PhenoStacks
74
HPO structure and external resource integration enables computation on phenotypes
that is not possible using current nomenclatures alone (e.g.,
ICD-10).
For example,
the similarity of patients with non-overlapping phenotype observations can be calcu-
lated and concepts like diagnostic significance can be quantified (K¨
ohler et al. 2009).
Despite the popularity of this resource in the genetics community, very few tools are
available to help scientists visualize,
analyze,
and compute on cohorts of
patients
described using terms from the HPO.
This work contributes PhenoStacks,
a visual
analysis tool
that enables genetics
scientists and researchers to explore phenotypic variation in cross-sectional
cohorts
of
patients with a rare genetic disease (Fig.
5.1).
Interviews with domain experts
identified a series of high-level
cross-sectional
cohort analysis tasks that guided the
development and design of PhenoStacks.
Within PhenoStacks, potential metrics of in-
terest (e.g., frequency, similarities, entropy) are automatically extracted and encoded
in summary charts that guide a goal-oriented visual
exploration of detailed patient
phenotype plots.
The tool can be used to investigate the distribution of patient phe-
notypes within a single cohort or compare and contrast similarities and differences of
phenotype distribution across patients between cohorts.
In addition,
we contribute
a novel
algorithm for simplifying ontology topology visualization and visualization
concepts that can be applied to other domains where instances of
taxonomies or
ontologies are analyzed.
5.2
Background and Related Work
Clinical specialists and genetics researchers both contribute to the advanced study of
rare genetic diseases in a virtuous cycle.
Through direct interactions with patients,
clinicians are the primary collectors of
the data used by researchers to deepen our
understanding of human genetics.
Research results are, in turn, applied to developing
more robust diagnostic tests.
These advances are critical to improving patient quality
of life by reducing unnecessary diagnostic testing and mitigating the uncertainty of a
diagnosis.
Ultimately, expanding our understanding of the underlying genetic factors
affecting diseases is key to realizing the vision of personalized healthcare promised by
analysis of patient genomes (Hennekam & Biesecker 2012).
Given the importance of
phenotypes,
both specialists and genetics researchers
stand to benefit from advanced tools that promote the use of consistent phenotype
Chapter 5.
PhenoStacks
75
Figure 5.1:
PhenoStacks employs an observations plot (D) to reveal the distribution
of phenotypes (rows) across patients (columns) in a cohort,
which can be sorted by
patient or phenotype attributes.
Similar phenotypes can be grouped based on the
Human Phenotype Ontology (B,C). Radial hierarchies (A) summarize global patterns.
Views are linked, e.g., search results (E) are highlighted (A,C,D).
terminology and facilitate comprehensive phenotyping.
This is precisely a scenario
where visual
analysis tools can excel:
combining the strengths of
perception and
computation into an interactive process that extracts knowledge from data (Keim
et al. 2008).
5.2.1
Role of Phenotypes
When studying rare diseases,
patient phenotypes are the best method to describe
symptoms and manifestations,
and to identify similar cases (Baynam et al.
2015;
Buske et al.
2015;
Hennekam & Biesecker 2012;
Philippakis et al.
2015;
Robinson
2012).
Generally,
complete and granular phenotypes are necessary to differentiate
between disease subtypes and to guide diagnostic tests to confirm a specific disorder
using advanced modalities (e.g., genetic testing).
Due to resource constraints, current
technologies render it impractical to compile a complete and granular workup of every
phenotype for each patient (i.e., deep phenotyping (Robinson 2012)).
The onus thus
remains on clinicians to prioritize diagnostic tests and compile consistent and detailed
phenotype reports.
The reality, however, is that researchers would benefit from more
detailed phenotyping than is typically necessary for diagnosis.
Although research initiatives are exploring computational approaches to infer phe-
notypes from EHRs (e.g., PheKB) and sharing patient data to improve the accuracy
Chapter 5.
PhenoStacks
76
of
these methods (e.g.,
PCORnet,
NIH Collaboratory),
EHR coding schemes (e.g.,
MeSH,
ICD-10,
SNOMED CT) are inconsistent and incomplete in their coverage of
phenotype terms (Sollie et al. 2013; Winnenburg & Bodenreider 2014), and lack the
granularity required to study rare diseases (Sollie et al.
2013).
Similarly,
extracting
clinical information from research articles (e.g., PubMed) remains a challenging area
of
research (Groza et al.
2013).
The HPO complements these data mining efforts,
since mapping extracted data to HPO terms provides access to existing computational
approaches.
The HPO is already being used successfully in novel tools that provide
systematic methods of entering complete and granular patient phenotype data (e.g.,
PhenoTips (Girdea et al.
2013)) and that facilitate matching patients with undiag-
nosed rare diseases based on phenotype similarity (e.g., PhenomeCentral (Buske et al.
2015), MatchMaker Exchange (Philippakis et al. 2015)).
5.2.2
Visualizations of Genetics Data
Numerous visualization tools have been developed to assist geneticists.
Most of these
systems visualize genotype data using three classical
visualization techniques (see
Schroeder et al. (2013) for a review).
Heatmaps are commonly employed to represent
genomic values in a compact colour-coded matrix (e.g., cBio (Cerami et al. 2012)) or
in a circular view (e.g., CircleMap (Vaske et al. 2010)).
Space-filling layouts based on
genome coordinates have been applied to genome browsers (e.g., Savant 2 (Fiume et
al. 2012)) and genome comparison visualization tools (e.g., Circos (Krzywinski et al.
2009), Mizbee (Meyer et al. 2009)).
Finally, network representations have been used
to explore large biological
networks (e.g.,
Cytoscape (Shannon et al.
2003)) or gene
pathways (e.g., VisANT (Hu et al. 2009)).
Specific visualization challenges have also
been addressed, such as introducing a visual language for depicting genome assemblies
(e.g., AbyssExplorer (Nielsen et al. 2009)).
Fewer visualization tools have focused on comparing phenotypes;
most existing
systems are designed to better understand the causality of gene variation on pheno-
types.
Representations, such as Manhattan plots, have been used to reveal complex
associations between genes,
proteins,
and phenotypes (e.g.,
Arena3D (Secrier et al.
2012),
PheWAS-View (Pendergrass et al.
2012)).
The HPO is rarely used for visu-
alization and was only recently first employed in PhenoBlocks (Glueck et al.
2016).
In this prior work,
we used the HPO to visualize phenotypes in clinical
diagnosis
Chapter 5.
PhenoStacks
77
settings,
supporting the pairwise comparison of
patient phenotypes using explicit
encoding.
In the present work,
we turn our focus to genetics researchers conduct-
ing cross-sectional cohort studies,
where the distribution of phenotypes is compared
across many patients.
5.2.3
Cross-Sectional Analysis
Supporting analysis of patient cohorts has been addressed in the visualization liter-
ature (see Rind et al.
(2011a) for a review),
with a focus on longitudinal
cohorts in
clinical settings.
Recent works investigated analyzing temporal constraints of cohort
membership (i.e., COQUITO (Krause et al. 2016)), exploring temporal events within
a cohort (i.e.,
CAVA (Zhang et al.
2014)),
and comparing temporal
events between
cohorts (i.e., CoCo (Malik et al. 2015)).
Although our work focuses on cross-sectional
cohort analyses,
we share the high-level
goals of comparing patients within and be-
tween cohorts to identify patterns of cohort membership in an exploratory context,
however we focus on phenotypes, instead of temporal events.
5.2.4
Visualizations of Ontologies
Ontologies are used to capture the conceptual structure of a domain.
Using graphs,
the relationships between entities (e.g.,
causation,
inheritance) can be encoded and
establish a common ground for discussion and knowledge sharing.
Many visualization
tools have represented ontologies (Katifori
et al.
2007;
Lanzenberger et al.
2010)
and bio-ontologies (Vercruysse et al.
2012).
Carpendale et al.
(2014) review bio-
ontologies from the perspective of visualization,
identifying challenges and research
opportunities, such as annotating data and visualizing annotated content.
Katifori et
al. (2007) surveyed a variety of visualization approaches in the literature, identifying
indented lists and space-filling hierarchical layouts (e.g., icicle, radial) as popular and
effective approaches.
Katifori
et al.
note several
problems remain poorly addressed
in most existing systems,
including clutter reduction (topologies can be complex),
structure (visualizations fail to convey overall structure), scalability (large ontologies
are not handled well) and inspection (querying ontologies).
Clutter reduction and
structure are addressed in PhenoStacks.
Chapter 5.
PhenoStacks
78
5.3
Cross-Sectional Cohort Analysis
Cohort studies are frequently used in medicine, in both longitudinal and cross-sectional
designs.
Longitudinal
analyses are often used in clinical
studies,
such as evaluating
the effectiveness of
treatments (Krause et al.
2016;
Malik et al.
2015;
Zhang et al.
2014).
In contrast,
cross-sectional
cohort studies are typically descriptive,
such as
quantifying features of a patient population (e.g.,
the prevalence of a specific symp-
tom of a disease) or evaluating metrics to differentiate subpopulations (e.g., whether
a biochemical
marker correlates to disease severity).
In tandem,
cross-sectional
and
longitudinal
study designs provide complementary perspectives on patient data,
to
first identify disease subtypes and causal factors, and then study their correlations to
disease progression and treatments.
To better understand how cross-sectional
cohort analysis is used in genetics re-
search,
semi-structured interviews were conducted with six domain experts:
four
experienced genetics researchers (MD/PhD;
6-12 years of
experience),
one research
manager (MSc;
8 years of
experience),
and a research fellow (PhD;
4 years of
ex-
perience).
Their specializations spanned a range of
rare genetic diseases,
including
neuromuscular, metabolic, and inflammatory bowel diseases.
We first report on bar-
riers, goals, and types of analyses and then relate these to an abstract task typology
from the visualization literature that can guide the design of tools for medical cross-
sectional cohort analysis.
5.3.1
Barriers and Pain Points
Researchers described that published results of
cross-sectional
cohort studies often
report only descriptive statistics of phenotype occurrence (i.e., frequency, mean, vari-
ance).
Although this provides a sense of
the average patient in a cohort,
it masks
the actual distribution and co-occurrences of phenotypes for each patient.
Preserving
the granularity of phenotype reporting and standardized naming of phenotypes would
improve the ability to reuse the results of these studies.
In any research center,
there are very few patients for any given rare disease.
The researchers we interviewed explained that detailed phenotypes of diagnosed cases
were once disseminated within the scientific community through case reports of single
patients,
but this practice is in decline with increasing availability of
large curated
disease registries.
Sharing patient phenotype data across departments,
institutions,
Chapter 5.
PhenoStacks
79
and countries is thus easier,
and studies can now include larger cohorts (i.e.,
10s to
100s of
patients).
With more data,
however,
data quality is an increasing concern
(i.e., completeness, consistency, and granularity).
Although deep phenotyping is the
ideal scenario, the practice is prohibitive due to its time-consuming nature, required
expertise in the disease, and lack of available resources.
Reaching consensus on what
phenotypes should be collected and reported is a slow process.
In particular,
when
faced with patients with rare or undiagnosed diseases, the researchers noted it can be
equally difficult to decide at what granularity to report phenotypes.
Another concern
was efficiently integrating data across multiple databases as the size of data continues
to grow.
We determined that structured phenotype data can begin to address these
issues.
5.3.2
Analysis Goals
In genetics research,
cross-sectional
cohort analyses may focus within a cohort (i.e.,
patterns across patients), or between cohorts (i.e., patterns between cohorts).
Here,
we summarize the common tasks described in our interviews.
Within-Cohort Analysis
Within-cohort analyses are useful
to discover emergent patterns (W1) of
phe-
notypes between patients (e.g.,
frequency,
distribution,
co-occurrence).
The results
provide insight into the scope of
a disease (e.g.,
localized vs systemic) which can
differentiate symptoms from unrelated abnormalities.
Comparing phenotypes between patients in a cohort can identify outlier pa-
tients/phenotypes (W2).
Phenotype presentations that are atypical of the cohort,
or very rare phenotypes, can indicate special cases where the patient may not respond
to existing therapies or there is potential to better classify disease subtypes.
Subcohort discovery (W3) can help develop more effective diagnostic tests and
treatments by identifying new disease subtypes.
This involves discovering groups of
patients within a disease cohort that can be differentiated from each other based on
measurable attributes (e.g., phenotypes, causal gene variants, biochemical markers).
Within-cohort analyses can also help audit data quality (W4),
ensuring that
phenotype data collection is consistent and complete.
For example, is the granularity
sufficiently detailed to differentiate subcohorts?
This is particularly important for
Chapter 5.
PhenoStacks
80
larger studies that involve multiple investigators, institutions, and disease registries.
These analyses (W1-W4) are typically informal
and exploratory undertakings.
Hypotheses are later tested using statistical
approaches.
Such results can be used
to quantify disease prevalence (W5) within subpopulations (e.g., geographic, de-
mographics,
ethnicity).
Studying these specific incident rates can identify potential
environmental influences on diseases or groups requiring special consideration.
The results of these analyses often lead to improved disease characterization
(W6) based on identified patterns.
The application of these characterizations in clin-
ical
settings can set expectations about disease severity,
clinical
prognosis,
and the
effectiveness of available treatments.
This can help doctors to better plan interven-
tions and to explain a disease to patients and families.
Between-Cohort Analysis
Between-cohort analyses enable comparison of patterns across disease subtypes
(B1).
For example, age of disease onset is a factor of frequent interest.
Patients who
exhibit symptoms of a disease at younger ages more typically have congenital forms
(i.e.,
inherited),
while patients who develop the disorder later in life may have been
exposed to environmental
triggers.
In addition,
by comparing patients with less-
and more-severe forms of
a disease,
more general
patterns can be isolated.
While
outlier phenotypes and special patient cases are of significant research interest, very
consistent and general patterns are most applicable to developing useful treatments.
Between-cohort analyses are important to validate data quality (B2).
When
collecting new patient data for a cohort study, it is important to compare to existing
registries to ensure the local
cohort is representative.
When publishing results,
it is
critical to describe salient similarities and differences to previously published results
(e.g.,
case reports).
When compiling patient data across registries,
it is important
to compare cohorts to evaluate whether it is appropriate to assimilate them.
These
comparisons can also be used to evaluate the observational methodologies of registries.
Results of between-cohort analyses can further be used to inform clinical prac-
tice (B3).
Subpopulations may be differentiated by non-clinical
attributes (e.g.,
ethnicity) to determine whether some subpopulations require additional
considera-
tion (e.g.,
more frequent screening).
Since the presentation of
phenotypes can be
influenced by treatment,
analyzing phenotypes across different locales can provide
insights into geographic medical practice variation.
Chapter 5.
PhenoStacks
81
5.3.3
High-Level Tasks
We synthesize the identified cross-sectional
cohort analysis tasks to common visual-
ization tasks using Brehmer & Munzner’s multi-level typology (2013).
All tasks fall
under the discover branch of why tasks are performed.
Geneticists engage in a variety
of search and query sub-classifications, as described below:
Explore
→
Summarize
emergent patterns (W1),
disease prevalence (W5),
disease characterization (W6),
comparison of patterns across disease subtypes (B1)
Locate
→
Identify
outlier patients/phenotypes (W2),
subcohort discovery (W3),
inform clinical practice (B3)
Browse
→
Compare
audit data quality (W4),
validate data quality (B2)
5.4
Design Process
Having identified the common tasks of
genetics researchers,
we engaged two of
the
researchers in an iterative design process to evaluate the appropriateness of
visual
representations and to ensure the designs complemented their existing research work-
flows and mental
models.
We focused on analysis goals that aligned to exploratory
tasks, rather than the application of research outcomes:
summarizing patterns within
and between cohorts (W1,
B1),
identifying outliers and subcohorts (W2,
W3),
and
auditing and validating data quality (W4,
B2).
Each researcher provided us with a
sample dataset of
phenotype terms for 20-30 patients,
which was representative of
the size of cohorts they typically investigate.
Chapter 5.
PhenoStacks
82
5.4.1
Phenotype Distribution and Frequency
To support Explore
→
Summarize,
we wanted to emphasize both the distribution
of phenotype observations for each patent, as well as the frequency of each observa-
tion for each phenotype.
We informed our design choices by eliciting feedback from
researchers through a series of static paper-based prototypes.
We considered varia-
tions using histograms, dot plots, scatterplots, and matrices to summarize and encode
the distribution of phenotypes across patients and between cohorts.
The researchers
agreed that the histogram view provided a good summary, especially when compar-
ing the silhouettes of phenotype observations between cohorts, but did not like that
the association of observations to specific patients was obfuscated.
The researchers
preferred the matrix layout for looking at phenotype observations of patients, in par-
ticular a design variation that displayed phenotypes as rows, patients as columns, and
encoded phenotype observations using coloured cells.
As matrices are often used to
summarize results of genetics research, the researchers were familiar with this repre-
sentation.
However,
this familiarity also led to confusion,
since the use of coloured
cells resembled gene association heatmaps.
One researcher commented it was awk-
ward to see different data represented in this format,
“I know it’s right, but it looks
wrong.”
Based on this feedback,
we refined the visual
appearance of
the matrix to de-
emphasize cells and encoded values using row- and column-aligned glyphs.
We inte-
grated histogram summaries adjacent to each row to facilitate frequency comparisons.
We call this view an observations plot (Fig. 5.1D). To compare two cohorts, two obser-
vations plots are juxtaposed and the histograms are re-aligned to a common baseline
to facilitate comparisons using the silhouette (Fig. 5.5).
The result is visually similar
to existing tools (e.g., UpSet (Lex et al. 2014)) which were also designed to facilitate
visual summaries and comparisons.
5.4.2
Summarizing Phenotype Patterns
Locate
→
Identify was addressed by automatically computing metrics of phenotype
observations within a cohort and between cohorts.
We first asked researchers to de-
scribe the patterns they typically care about.
Within cohorts,
researchers focus on
whether phenotypes are frequently present or absent,
but they are also interested
in which phenotypes do not occur often,
as these may indicate outliers.
They also
Chapter 5.
PhenoStacks
83
evaluate the homogeneity of phenotype observations across patients (i.e., are all ob-
servations present, or is there a mix?).
Between cohorts they identify similarities and
differences, as well as outliers and homogeneity.
The researchers noted that they of-
ten have difficulty generating accurate summaries of their data due to the variability
in their phenotype reports.
In particular, although specific terms may be used (e.g.,
that differentiate the severity of a phenotype),
they are more interested in whether
the phenotype is present in any form.
Aggregating patterns from granular to general phenotypes based on parent-child
relationships of the HPO is an ideal application of the ontological structure.
To sup-
port the variety of patterns the researchers requested, we automatically calculate all
metrics across the cohort data and enable the user to select which ones are displayed.
These summary charts can be used to identify starting points for deeper exploration
of
the details of
the data (Fig.
5.1A).
A similar approach for seeding exploration
appeared in CoCo (Malik et al.
2015),
although their summary metrics were not
presented visually.
Details of the metric calculations are described in Section 5.4.
5.4.3
Sorting, Filtering, and Search
To facilitate Browse
→
Compare, sorting and filtering operations are supported in the
observations plot.
This enables free-form exploration of patterns in data,
similar to
Bertin Matrices (Perin et al. 2014).
Sorting by phenotype or patient attributes reveals
patterns in the observations plot, while filtering hides less important information from
the view.
Although none of the tasks elicited from our formative interviews explicitly
addressed Lookup (Brehmer & Munzner 2013),
to fill
the gap in the design space,
PhenoStacks also supports text-based search for specific phenotypes using natural
language queries (Fig. 5.1E).
5.4.4
Phenotype Context and Relationships
PhenoBlocks (Glueck et al. 2016) demonstrated benefits to representing phenotypes
within the context of the semantic structure of the HPO. In terms of the task typology,
representing phenotype relationships could improve Explore
→
Summarize, Locate
→
Identify, and Browse
→
Compare by adding categorical groupings to the observations
plot.
Thus,
a key research question is whether this structure is also helpful
within
genetics research usage scenarios.
While the researchers we engaged during the design
Chapter 5.
PhenoStacks
84
process were not familiar with the HPO, hierarchical clustering is commonly used to
add structure to results of genetic tests, using dendrograms to communicate clusters
next to a matrix heatmap of
test results.
Inspired by these charts,
and a recent
evaluation suggesting that indented lists are more efficient at supporting information
searches (Fu et al. 2015), we prototyped a layout view that displays the HPO hierarchy
as a top-aligned dendrogram next to the observations plot, grouping related phenotype
rows (Fig. 5.6A). Since the HPO is a directed acyclic graph with multiple inheritance,
we converted it to a strict hierarchy by duplicating nodes with more than one parent.
While this correctly mapped phenotypes to rows, feedback from researchers indicated
duplication of
phenotypes was confusing because it gave the false impression that
there were more clusters.
Interaction was added to the HPO dendrogram,
enabling individual
nodes to be
collapsed and expanded.
One researcher liked having granular control
to define a
customized tree,
but the other felt any navigation was cumbersome and detracted
from exploring the actual data.
Both agreed that general and intermediate categories
were very useful, but that granular categories became redundant.
This feedback led
us to develop a top-level category layout (Fig. 5.1B) and a cluster layout, computed
by a novel
algorithm that simplifies the ontology topology and selects salient inter-
mediate categories while eliminating duplications (see Section 5.5.6).
This addresses
the clutter and structure issues in ontology visualizations identified by Katifori
et
al. (2007).
5.4.5
Lessons Learned
Involving researchers in the design process revealed many insights into how they con-
duct their analyses.
The software researchers typically use to view patient records
is designed primarily for data input and queries.
While basic visualizations are sup-
ported, the process requires considerable effort to select data rows and columns and
checkboxes in dialog configurations.
Researchers are interested in their data but want
to spend minimal
time tuning and configuring interfaces.
To this end,
we adopt an
“opt-out” approach for the summary charts in PhenoStacks (i.e., show more informa-
tion and then eliminate the unneeded) rather than an “opt-in” approach (i.e.,
start
with a blank slate and build the needed views).
Our overarching goal
was to support flexible free-form exploration of phenotype
Chapter 5.
PhenoStacks
85
data,
where users can smoothly transition between a variety of
tasks.
We quickly
determined that supporting all desired views could not be easily merged into a single
visual
that would work in all
cases.
Thus,
instead we opted for a range of views on
the data that could be integrated in different ways to answer specific questions.
5.5
PhenoStacks Tool Description
PhenoStacks is a visual
analysis tool
that complements the existing workflows of
genetics researchers, and was developed based on feedback from domain experts.
The
tool supports the higher-level tasks researchers engage in when analyzing cohort data:
summarize, identify, and compare (Brehmer & Munzner 2013).
PhenoStacks can be
used to analyze a single cohort or compare two cohorts and could help with data
collection planning and auditing,
identifying potential
patterns in cohort data,
and
guiding the direction of in-depth analyses.
PhenoStacks was implemented using D3 (Bostock et al.
2011),
Python,
and li-
braries such as SciPy to compute hierarchical clustering.
In this section, we describe
the data model,
the user interface design,
and how the design goals and user tasks
are addressed through different aspects of the tool.
5.5.1
Data Preparation
Our data model is based on the notion of a cohort subgraph, a subgraph of the HPO
that represents the cohort phenotype terms as leaf nodes and includes all parent nodes
in a traversal to the root term (Fig. 5.2).
The cohort subgraph contains the union of
all
phenotypes across all
patients in the cohort,
not only phenotypes thought to be
associated with a given disease.
Each node is labeled with present
or absent
for the
phenotype observation of each patient in the cohort.
Since the HPO describes “is-a”
relationships between phenotypes,
observations can be inferred for unlabeled nodes
(i.e., if a phenotype is present, so are all ancestors; if absent, so are all descendants).
Using these rules, unlabeled nodes are labeled with present or absent.
Any remaining
unlabeled nodes are then marked as unknown.
Since only the labels of
leaf
nodes in the observations plot are presented,
an
unknown observation may obscure an observation for a related,
but more general,
phenotype.
This consideration is important because patient phenotype reports vary
Chapter 5.
PhenoStacks
86
Figure 5.2:
Illustration of phenotype data translation to cohort subgraph represen-
tation via the topology of the HPO.
Cohort subgraphs contain only HPO nodes for
recorded patient phenotype observations.
HPO nodes in the cohort subgraph are
annotated with a list of associated patient phenotype observations.
Figure 5.3:
(A) Cohort subgraph nodes are labeled using patient phenotype observa-
tions.
(B) Labels for nodes without observations are inferred using HPO inheritance
(1) and descendants reflect observations of ancestors (2).
Remaining unlabeled nodes
are labeled “unknown” (3).
widely in granularity.
Thus,
PhenoStacks checks whether any unknown nodes have
observations associated with ancestor phenotypes (i.e.,
an observation for a more
general
term) and labels them present-ancestor or absent-ancestor.
Note that these
observations come from the raw data and not the inferred labels because all unknown
nodes would then be labeled as they all inherit from the root (Fig. 5.3).
5.5.2
User Interface
The PhenoStacks interface comprises three distinct panels that enable a user to vi-
sualize and explore the cohort subgraph from overview to detail:
a Summary Panel,
Chapter 5.
PhenoStacks
87
a Details Panel, and a Search Panel.
Each panel shows a different perspective on the
topology of the cohort subgraph and supports different observations.
The Summary Panel
displays a variety of
summary charts that display met-
rics of phenotype patterns across patients of a single cohort or between two patient
cohorts (Fig.
5.1A).
These metrics are presented within the hierarchical
context of
the cohort subgraph topology.
Space-filling radial
hierarchies were selected for the
summary charts because they compactly encode values and equalize the size of both
intermediate and leaf nodes.
Visual
emphasis on leaf nodes is critical
because they
are the most granular HPO terms.
Similar charts were successfully used in Phe-
noBlocks (Glueck et al. 2016).
The width of segments communicates the number of
leaf nodes, with each leaf having equal weight, and all charts are sorted identically to
support comparisons.
The Details Panel consists of a layout view (Fig.
5.1B),
a phenotype list view
(Fig. 5.1C), and an observations plot (Fig. 5.1D) that support the detailed compari-
son of the distribution of phenotypes across patients and between cohorts.
The layout
view enables the user to control
HPO context by selecting different methods of col-
lapsing, filtering, and clustering phenotypes based on the cohort subgraph topology.
The phenotypes list view enables phenotype terms to be sorted.
The observations
plot is a matrix of
the actual
and inferred phenotype observations for each patient
in a cohort.
The frequency of each phenotype observation is summarized in an adja-
cent histogram.
When two cohorts are compared,
the histograms are arranged as a
silhouette plot between the matrix of each cohort.
The Search Panel supports specific queries,
including Boolean logic,
to search
for phenotypes by name or HPO ID (Fig. 5.1E). The search result set is persistently
displayed below and matching results are highlighted in the Summary and Details
Panels.
Clicking on any phenotype label
automatically enters the term into the
search panel.
Since PhenoStacks supports fully linked and coordinated views,
phenotypes,
pa-
tients, and observations highlight in all charts, and display detailed information when
hovered in any of the views.
Chapter 5.
PhenoStacks
88
5.5.3
Summarizing Patterns
The Summary Panel
presents a variety of metrics in summary charts,
explicitly en-
coded with colour using a divergent yellow-purple scale,
interpolated in Lab space.
These metrics are further weighted by the information content score of each pheno-
type.
Users can control
the balance between metric and information content score,
whether they are more interested in the metric ranking alone or highly ranked phe-
notypes with high diagnostic significance.
For within-cohort scenarios,
metrics of
interests are:
frequently present/absent,
infrequently present/absent, potential outliers, and entropy to represent homogeneity.
For between-cohort scenarios, these metrics are:
similarly present/absent, differently
present/absent,
outliers,
and entropy.
The outlier metric is highest for phenotypes
with very few present or absent observations.
Entropy is calculated using the Shannon
entropy equation between present, absent, and unknown observations.
These metrics
are aggregated up the hierarchy and are designed to orient users towards phenotypes
that align with the metrics in a general fashion; the summary charts are not designed
to be carefully explored by users.
A list of
phenotypes ranked by the metric is
displayed adjacent to each chart to highlight specifics.
These views are designed to address first contact with the dataset.
“What are
high level features I may be interested in?” For example, these views can quickly give
a sense of the homogeneity of the cohort, or the similarity between two cohorts, at a
single glance (Fig. 5.4).
In addition to locate (Brehmer & Munzner 2013), the summary charts also support
lookup (Brehmer & Munzner 2013) searches to starting points of potential
interest.
These use the principles of
encode,
aggregate,
and navigate (Brehmer & Munzner
2013).
This addresses the issue of “Where do I start looking?” For example, pheno-
types with high frequency can be identified, as well as outliers.
5.5.4
Exploring Patterns
The Detail
Panel
can be sorted across phenotypes and across patients to identify
patterns in the observations plot.
Phenotypes can be sorted alphabetically,
by in-
formation content,
by frequency,
and by co-occurrence.
Patients can be sorted by
ID, dataset-specific patient attributes (e.g.
age, severity, diagnostic test scores, treat-
ments),
frequency,
and by co-occurrence.
This supports the explore task using the
Chapter 5.
PhenoStacks
89
Figure 5.4:
Each summary chart encodes a specific metric (e.g., frequency, similarity,
entropy,
outliers),
weighted by the diagnostic significance score.
(A) Darker colours
indicate stronger metrics,
e.g.,
two cohorts share important phenotypes,
while (B)
lighter colours show weaker scores,
e.g.,
two cohorts lack diagnostically significant
differences.
(C) Ancestor nodes aggregate the metrics of
children,
e.g.,
a darker
purple parent indicates this general term appears in all patients.
encode and navigate principles (Brehmer & Munzner 2013).
Frequency is calculated by counting the number of
present and absent glyphs
in each column or row,
for patients and phenotypes,
respectively.
The sort order is
determined first by present count, then by absent count, then by information content.
Several methods were explored, but based on researchers’ feedback, this was the most
intuitive sorting that accounted for both presence and absence.
Co-occurrence sort order is calculated based on the results of hierarchical cluster-
ing.
To accomplish this,
observations are labeled (present:
1,
unknown:
0,
absent:
-1) and a Euclidean distance metric was used.
Determining precise clusters would
require user input and familiarity with the clustering technique to verify and refine
the results.
To simplify the user experience,
the ordering of phenotypes or patients
from the resulting clustering output is extracted.
Functionally,
this achieves a sort
order that groups similar phenotypes or patients next to each other, while mitigating
the need for precise refinement of the clustering results (Fig. 5.5).
For the purposes
of an exploratory tool, this provides a quick and flexible estimate of potential clusters
which can be more robustly evaluated in later analyses.
Phenotype observations are encoded using circular glyphs.
Colour encodes the
type of
observation:
present as purple,
absent as blue,
and unknown as light grey.
Present-ancestor and absent-ancestor observations are represented as outlined glyphs,
using the same colour as present or absent to indicate the same class of
observa-
Chapter 5.
PhenoStacks
90
Figure 5.5:
The observations plot encodes the phenotype observations of patients in
rows and columns.
Adjacent histograms communicate the frequency of each pheno-
type in a cohort.
Patient ID and attributes are displayed as column headers.
Two
cohorts can be compared at once,
and observations can be sorted by phenotypes
and/or patients (e.g., co-occurrence, frequency, patient attributes) to reveal patterns.
tion (Fig. 5.8).
Present and absent observations are important to differentiate, since
present phenotypes gain diagnostic significance as they become more granular, while
absent phenotypes gain diagnostic significance as they become more general.
Phenotype information content and patient attributes are encoded using a monochrome
scale, so as not to overpower the visualization with additional colours (Fig. 5.5).
Pa-
tient attribute values can be categorical or numeric.
The logical ordering of categorical
values along the scale can be dynamically defined and customized for a given dataset.
Ratio values are binned into quantiles prior to display and the number of quantiles
can also be dynamically selected.
In both cases,
attribute values are mapped to
perceptually equidistant shades of grey.
To reduce the number of
text labels,
and to support quicker identification,
the
layout views adopt the set of HPO category icons developed in PhenoBlocks (Glueck
et al. 2016).
Chapter 5.
PhenoStacks
91
5.5.5
Finding Specifics
A global search enables specific phenotypes to be located by name or HPO ID. Search
results are persistently listed below the search input to encourage broader search
queries to find groups of phenotypes (e.g., searching for “musc” will return a range of
muscle/muscular terms).
Matches are highlighted in the phenotype list and summary
views.
5.5.6
Ontology Topology Simplification
The layout view enables the selection of different levels of context based on the topol-
ogy of
the HPO.
The initial
view shows no structure,
displaying a flat list of
all
phenotypes.
The user can choose to add grouping to the phenotype terms through
a category layout,
which uses the first level
HPO terms to group phenotypes at the
systems-level
(e.g.,
skeletal,
muscular,
nervous).
Alternately,
a tree layout supports
free-form collapsing/expanding control to explore the entire HPO hierarchy.
Adding
grouping through the layout view engages browse through encode and arrange prin-
ciples (Brehmer & Munzner 2013).
Due to multiple inheritance in the HPO, the more the hierarchy is expanded, the
greater the complexity and visual redundancy displayed in the observations plot, since
by default we duplicate phenotypes that fall under multiple categories (Fig. 5.6A). To
balance the goals of increasing detail while minimizing complexity, a novel algorithm
was developed to simplify the topology of the HPO.
At a high-level,
the algorithm
eliminates multiple inheritance by extracting a single path from the root to each
leaf
phenotype,
based on an evaluation of
the information content of
intermediate
phenotypes.
Phenotypes that do not contribute to the grouping are then removed
(i.e.,
parents with only a single child).
Conceptually,
the result is a detailed and
diagnostically significant categorization for each phenotype that minimizes complexity
(Fig. 5.6B). The algorithm is as follows (Fig. 5.7):
1.
For each leaf in the cohort subgraph, create a leaf
subgraph containing all paths
back to the root.
2.
For each leaf subgraph,
use a greedy depth-first approach to extract the path
from root to leaf
that passes through the child with the highest
information
Chapter 5.
PhenoStacks
92
content at each depth.
If more than one path is found, select the path with the
highest cumulative information content.
3.
Merge all extracted leaf paths into a new cluster tree.
4.
Traverse the cluster tree depth-first and remove nodes with only one child,
stopping when a node has more than one child, and ensuring leaf nodes have at
least one parent.
Remove the root node.
Figure 5.6:
Example representations of
the HPO topology in the layout view.
(A)
The tree layout can be manually expanded and collapsed,
but results in phenotype
duplication due to multiple inheritance.
(B) The cluster layout categorizes phenotypes
using our topology simplification algorithm eliminating duplications.
A phenotype is
highlighted in yellow.
Figure 5.7:
Illustration of our ontology simplification algorithm.
Chapter 5.
PhenoStacks
93
The fourth step of
the algorithm results in a cluster tree that contains all
leaf
nodes,
without duplications,
grouped using diagnostically significant intermediate
phenotype categories.
Since this method is based on the topology of the HPO and
information content score,
it is independent of
the data being displayed.
However,
depending on the phenotypes exhibited by patients in a cohort,
categories may be
more or less specific; disparate phenotypes will be categorized more granularly, while
related phenotypes will be clustered together under more general categorizations.
This method requires more robust evaluation regarding algorithm completeness
and correctness, and does not currently support user intervention.
For example, a pa-
rameter could be introduced to control the aggressiveness of intermediate phenotype
removal (Step 4), to control the granularity of computed categories.
In terms of our
goals in this work,
the implementation was sufficient to evaluate whether we could
compute an intuitive simplified topology using the concept of diagnostic significance.
5.6
Expert Evaluations
To evaluate PhenoStacks,
we deployed the tool
in the labs of
four experienced ge-
netics researchers.
All
four participated in the formative interviews,
but only one
participated in the iterative design process.
We asked each researcher to provide a
cross-sectional cohort dataset they were studying, or had previously analyzed, as well
as patient attributes they were interested in evaluating.
Semi-structured interviews
were conducted to learn more about each disease and the particular aspects of
the
cohorts that they were interested in exploring.
The phenotype data was provided in text format and translated to HPO terms
using a dictionary mapping approach;
the mapping schema was verified by the re-
searchers.
We introduced PhenoStacks with their data, explained the visual encoding,
and demonstrated the interface to each researcher and their associates.
The deploy-
ment period lasted 3-7 days,
depending on availability.
Researchers were instructed
to use the tool for at least 1 hour over this period and encouraged to engage research
associates in these explorations.
Deployment periods ended with semi-structured
interviews,
asking participants to demonstrate insights garnered using PhenoStacks
and to reflect on its utility as part of their workflow.
HPO layouts were ranked to
evaluate the output of our simplification algorithm, and we elicited general feedback
and suggestions for improvements.
All participants confirmed they had used the tool
Chapter 5.
PhenoStacks
94
independently,
as well
as with members of
their research teams,
for a total
of
1-2
hours each over the deployment period.
5.6.1
Usage Scenario Case Studies
First,
we summarize descriptions of each disease and how the tool
was used by the
researchers for their specific tasks.
Inflammatory Bowel Disease
Inflammatory Bowel Disease (IBD) describes a range of genetic disorders that affect
the gastrointestinal
(GI) system.
Patients display widely heterogeneous symptoms
due to multi-factorial
causes (e.g.,
genetics,
lifestyle,
environment) which makes in-
vestigating the disease challenging.
The IBD researcher was interested in comparing
patients with early onset IBD against patients who develop the disease later in life.
This task aligns to finding patterns between cohorts (B1), with the goal of differentiat-
ing congenital and adult onset forms of the disease.
He provided two between-cohort
datasets that focused on patients with severe presentations of the disease.
The first
compared 17 and 6 patients, while the second compared 28 and 19 patients.
We conducted evaluation interviews with two research associates because the re-
searcher was unavailable.
While transcribing the data to HPO terms, it became clear
that the granularity of terms involved in IBD were not yet sufficiently defined in the
HPO.
This presents an opportunity to contribute modifications to the HPO to ex-
pand their coverage for this disease.
However, the potential of using standardized and
structured phenotype data was immediately clear.
“I can see a tremendous amount
of utility for the tool. . . it really makes patterns clear,” one commented.
“Being able
to show this is where you have commonality and this is where you start seeing differ-
ences.
That would be powerful
in and of itself;
even before you reach the functional
and translational
implications.” They were also excited about the potential to com-
pare cohort data along other vectors, such as geographic location, to assess potential
environmental factors.
This discussion echoed a common pain point for researchers regarding data col-
lection,
which often aligns with clinician-patient interactions,
but is less suited to
research goals.
The phenotyping is very broad,
less systematic,
and detail
is not
consistent.
Investing in standardized data collection methods and developing guide-
Chapter 5.
PhenoStacks
95
lines to improve consistency would facilitate researcher collaborations,
within and
between institutions.
The difficulty lies in reaching consensus regarding data collec-
tion granularity with the clinicians who actually record the data.
The researchers
felt PhenoStacks would be a compelling artifact to communicate the benefits and to
ground discussion.
Myotonic Dystrophy
Myotonic dystrophy is a hereditary multi-systemic disease characterized by progres-
sive degeneration of muscle that weakens the musculoskeletal system, affects cardio-
vascular function,
and results in endocrine changes.
The researcher we interviewed
wanted to evaluate patterns within a single cohort of 40 patients.
In particular,
he
wanted to identify similarities in the cohort (W1) and look for subcohorts (W3) based
on attributes of the patients, such as age and a potential measure of disease severity.
He indicated that finding biochemical
metrics that consistently correlate with as-
pects of the disease, such as severity, are critical to selecting appropriate treatments
for patients.
The researcher appreciated sorting patients and phenotypes by co-occurrence.
“I
can see very nice clusters of
[phenotypes]
coming together,
which really make sense
knowing the disease well.”
He commented the summary charts complemented the
observations plot.
By seeing the overall
patterns,
he was guided to confirm where
the numbers were coming from.
Sorting the patients by the potential severity metric
clearly revealed a progression to more severe patient cases, noted by an increased pre-
sentation of severe phenotypes, suggesting the metric may indeed be a valid measure
of
disease severity (Fig.
5.8).
Moreover,
sorting by age could help to investigate a
suspected inflection point, where the congenital version of the disease transitions into
the more typical, adult degenerative version.
While he did not state it as one of his primary tasks,
the researcher commented
that outliers were very easy to spot (W2).
He identified two examples of severe cases
that stood out,
due to the severity of
the phenotypes,
guided by hotspots in the
outlier summary chart.
Exposure to the HPO raised questions about the correctness and completeness
of
his data.
While common phenotypes were clear,
he had hoped to see more dif-
ferentiation along severe symptoms.
He identified several
phenotypes that he felt
could be recorded at higher granularity to better capture subtle variations between
Chapter 5.
PhenoStacks
96
patients (W4).
This suggests that PhenoStacks could be used to audit data collection
and help in data collection planning by identifying where deeper phenotyping could
better differentiate subcohorts of patients.
Myotubular Myopathy
Myotubular myopathy is a congenital
neuromuscular disease marked by abnormal
skeletal
muscle fiber cells with diminished function,
resulting in muscle weakness in
patients.
Patients present with a variety of phenotypes and researchers are still trying
to better understand the genetic causes and differentiate subclasses of the disease.
The
researcher we interviewed was conducting a study to compare phenotypes of a new
patient cohort to those of existing published case reports in the literature (B2).
The
cohorts contained 12 and 10 patients.
He was particularly interested in the similarities
and specific differences between the two cohorts.
He commented that overall
the tool
was very useful
for his research goals.
Vi-
sually comparing the similarities and differences using the observations plot was far
easier than the spreadsheet-based approach he was using before.
The grouping of
phenotypes based on the cluster layout helped to merge cases where different terms
were used to describe similar clinical features.
“In the [case study] cohort, we saw a
lot of ‘Respiratory insufficiency due to muscle weakness’ and we thought:
no one in
Figure 5.8:
An example observations plot from the myotonic dystrophy dataset.
Sort-
ing patients by severity reveals a pattern of increasing present observations (purple)
of more severe phenotypes (lower in the chart) as we move from less to more severe
patient cases (to the right).
Chapter 5.
PhenoStacks
97
our cohort has that, but then you go down to ‘Respiratory failure requiring ventilation’
–these are basically the same thing—and then the data looks more comparable.”
The researcher also stated that in general,
the tool
would be especially useful
when collecting new data.
The new data could be quickly compared to the existing
cohort and evaluated for robustness (i.e.,
complete,
granular,
and consistent with
other patients).
This maps to the data auditing task (W4) we identified in our
formative interviews, but did not originate from discussions with this researcher.
Phenylketonuria
Phenylketonuria (PKU) is a congenital
disease resulting in impaired metabolism of
the amino acid phenylalanine.
Untreated, the disease affects the neurological system,
leading to intellectual disabilities and other severe medical problems.
The researcher
we interviewed is also a clinician and was interested in the variation of phenotypes
within a cohort of
his clinical
patients to identify cases where the treatment regi-
men has not been effective.
Thus,
this use case was more oriented towards clinical
diagnostics.
He provided us with phenotype data for 12 random patients.
Several
attributes were provided for each patient,
including metrics of disease management
and severity.
During the interview,
he first demonstrated how the observations plot revealed
patterns he expected to see.
For example, when sorting by increasing severity:
“It’s
nice to see it work, with neurological
features appearing [in more severe cases].” He
commented that the “frequently present” summary chart was very useful
for diag-
nostic purposes, since darker colours immediately indicated something he should in-
vestigate.
He also commented that the visualization could be used to identify groups
of patients within the cohort (W3), for example patients who are not managing their
disease effectively.
He also used the tool
to explain hypotheses about why the treatment regimen
was not meeting the needs of certain patients.
For example,
if all
patients had the
disease under control,
the measure of
management should be roughly equivalent,
but sorting by severity indicated that the management score was worse for certain
severe cases.
These are cases where the current treatment is not working and the
treatment should be reassessed.
“[PhenoStacks] provides me with a nice visualization
for management. . . to see where we are in meeting our expectations.
I know what I
should be seeing, and when I’m not seeing it, it’s informative.”
Chapter 5.
PhenoStacks
98
5.6.2
General Feedback
Having described detailed usage scenarios and comments from the researchers,
we
now address higher-level shared feedback.
HPO Layout Methods
The cluster layout method (using our simplification algorithm), was the preferred lay-
out (2/3 researchers and both research associates),
followed by the flat view.
These
participants were all
focused on research-oriented use cases,
where they were either
interested in seeing global
co-occurrences,
or investigating particular sub-systems,
which was easier to do with the clusters layout;
the category layout was too broad,
and the tree layout had too many duplications.
One researcher commented that for
his data, the clusters were sometimes too specific, and he would like some control to
“relax” the output so that more general categories would be selected.
While category
granularity preference differed by researcher,
these results indicate that computa-
tional
approaches to simplifying the HPO topology is a promising direction to aid
contextualization of phenotype data.
The PKU researcher preferred the tree layout,
and then the cluster view.
He explained that for his purposes (i.e.,
clinical diagnos-
tics),
he was more interested in specific phenotypes,
and less about how they relate
to each other.
In fact,
while the structure of
the HPO made sense to him,
it was
contrary to his mental model of diagnosis, which started with detailed presentations,
not categories.
His preferences thus aligned with the layouts that showed the most
detailed view.
This suggests that representing phenotypes in the context of the HPO
may be less critical when designing visualizations for clinical diagnostics.
Overall,
we received positive feedback on the algorithm to cluster phenotypes to
eliminate duplications.
The IBD research associates especially liked that it not only
removed duplicates, but also presented phenotypes in categories that made the most
sense.
“Cholangitis is a co-presenting liver abnormality,
while it
is also related to
immune system,
this isn’t
how we think about
it.
The cluster view groups the two
liver phenotypes together,
separating it
from the GI phenotypes.
This makes sense
and it’s helpful
to see that separation.” (Fig. 5.9)
Chapter 5.
PhenoStacks
99
Figure 5.9:
Comparison between category and cluster layouts.
Cholangitis,
an in-
flammation of
the liver,
(A) appears under both Immune System and Abdomen in
the category view,
where it is grouped with mostly gastrointestinal
abnormalities.
(B) The cluster layout selects a more meaningful
organization that separates Gas-
trointestinal abnormalities and Liver abnormalities using our topology simplification
algorithm.
Data Quality Concerns
We worked with the researchers to map the phenotype terminology and clinical results
of
their data to the HPO.
For the most part this was straight-forward,
but as we
described for IBD, sometimes HPO terms were missing.
Since the HPO is an ongoing
project,
engaging researchers across a wider variety of diseases is an opportunity to
benefit from their expertise to help improve the HPO.
During the process,
the benefits of the structured phenotype data became clear
to all
participants.
Ambiguities in the description of phenotypes in the researchers’
datasets were uncovered, making it unclear what HPO term was appropriate, echoing
Chapter 5.
PhenoStacks
100
issues reported in the literature.
In these cases, a more general HPO term was used,
but for the researchers this underscored the benefits of integrating the HPO into the
data collection process at the beginning.
By visualizing phenotypes using the HPO,
deeper phenotyping benefits also became clear, because the researchers could see areas
where they were not seeing the differentiation they expected because the phenotypes
in their data were too general.
The researchers also noted that if their collaborators
were also using the HPO,
it would make it easier to merge datasets,
even if
they
are recorded at different granularities,
because the topology of the HPO accommo-
dates these differences.
Thus, these observations suggest that visualizations can help
communicate the benefits of
structured phenotype data in supporting consistency,
completeness, and granularity.
Sharing and Collaboration
All researchers commented that the visualization would be good for communicating
with collaborators and presenting and sharing results.
The different layout views were
seen as useful for projects involving collaborators with different levels of expertise, for
example geneticists who are less familiar with specific phenotypes and more focused
on the systems-level.
Seeing the categories would help bridge knowledge gaps with
unfamiliar terms by showing how they relate to each other.
The observations plot was also seen as a valuable aid when discussing and commu-
nicating insights.
Being able to see the patterns and show them to other researchers
was seen as far better than simply sharing the information using text descriptions.
For example,
the categorizations using the HPO topology clearly delineate related
phenotypes and also indicate specific subsystems that may play a role in the disease,
helping to differentiate localized and systemic symptoms.
To compare results,
re-
searchers could ask collaborators to describe the pattern of symptoms they are seeing
within a certain category,
rather than simply sharing specific phenotypes.
This can
also support collaboration between experts with different specializations.
Suggested Improvements
The researchers were eager to share ideas to improve the tool.
The PKU and my-
otonic dystrophy researchers,
who considered the task of subcohort discovery (W3),
suggested additional
features to organize patients in the observations plot.
For ex-
Chapter 5.
PhenoStacks
101
ample, one suggested visually separating patients into distinct subgroups within each
cohort.
Both researchers wanted to collapse subgroups into a single column to hide
patients that were less important to the analysis at hand.
They also both wanted to
add ad hoc attributes to the patients dynamically during analysis, to impose custom
sort orders on the patients.
This desire for greater interactive control
over patient
organization suggests that participants were embracing interactive visual analysis as
part of their workflows, and could envision more advanced features.
The IBD research associates suggested labeling certain phenotypes “very impor-
tant”, so that the frequency scores of these would be highlighted, regardless of their
diagnostic significance, “If you know you’re interested in certain phenotypes, it would
be nice to see them immediately.” While the information content does map to diag-
nostic significance,
in some cases they were interested in the presentation of pheno-
types that were more common, but very significant when they co-present with other
phenotypes in IBDs.
In a similar vein,
the myotonic dystrophy researcher wanted to add attributes
to the phenotypes,
similar to the patient attributes,
that could be used to sort the
phenotypes list differently.
In particular, a measure of frequency within the disease or
a correlation with severity was desired, as this would impose unique clustering when
paired with co-occurrence in patients.
Finally,
all
the researchers and research associates wanted a longitudinal
version
of
this tool,
since there were aspects of
their patients that they wanted to visually
track over time.
5.6.3
Study Limitations
This study is not without its limitations.
The deployment period was short and
variability of phenotype coverage in the HPO impacted the depth of some data ex-
plorations.
However,
we engaged researchers across a variety of specializations and
garnered insightful feedback.
The researchers were exposed to structured phenotype
data and gained increased sensitivity to the quality of their own data.
A long-term
deployment study of PhenoStacks is being planned.
Working with a researcher and his
team, we are submitting updates to the HPO so that the phenotypes are well repre-
sented.
PhenoStacks will be deployed among a large group of researchers participating
in a data collection workshop to support data auditing and analyses thereafter.
Chapter 5.
PhenoStacks
102
5.7
Conclusion and Future Work
This work introduced PhenoStacks,
a visual
analysis tool
to support cross-sectional
cohort phenotype analyses.
A novel
algorithm was developed to simplify the visual
display of the HPO topology and eliminate duplicated terms.
Based on feedback from
expert genetics researchers, this algorithm and the layouts that were produced were
preferred over category and tree layouts.
Deployment study results indicated many
potential applications within the researchers’ existing workflows.
These visualization
concepts can be applied in other domains where instances of taxonomies or ontologies
are analyzed.
The deployment study identified several
improvements that we plan to address
in subsequent open-source releases.
Agglomerating patient columns would benefit
analyses,
but also address scalability to larger cohorts.
Methods of
collapsing the
HPO topology (e.g.,
fish-eye distortion) could further mitigate clutter when cohorts
contain a wide variety of phenotypes.
Both approaches could integrate user-authored
tags (e.g.,
important phenotypes) and ad hoc attribute definition.
Given a richer
range of attributes, alternate visualizations of attributes are worth investigating (e.g.,
scatterplots to evaluate correlations).
Based on feedback, we plan to extend PhenoStacks to longitudinal cohort analy-
ses.
While clinical studies consider sequences of temporal events (e.g., hospital visits,
treatments),
genetics researchers focus on how phenotypes of a patient change over
time.
These natural
history studies
track disease progression in cohorts,
e.g.,
in-
vestigating the effect of environmental exposures or lifestyle on the manifestation of
phenotypes.
We see promise in applying approaches, such as temporal metrics (as in
CoCo (Malik et al. 2015)), to longitudinal phenotype analyses.
5.8
Acknowledgements
This work was partially funded by Genome Canada and Ontario Genomics through a
Bioinformatics/Computational
Biology grant to Dr.
Brudno and by a CPER Nord-
Pas de Calais / FEDER DATA Advanced data science and technologies grant to Inria
Lille Nord-Europe.
A special thanks to Michelle Annett, Hali Larsen, Peter Hamilton,
John Hancock,
the researchers who participated in our studies,
and the anonymous
reviewers for their thoughtful feedback.
Chapter 6
PhenoLines
The third case study
1
investigated disease subtyping via topic model
analysis.
This
chapter contributed PhenoLines, a visual analysis tool that supported comparison of
the temporal
trends modelled through topic modelling and facilitated topic charac-
terization.
PhenoLines
was
designed through collaborative iterative design with machine
learning experts.
Their workflows and analysis goals were characterized.
Temporal
comparison methods were developed to summarize trends over time, and comparisons
across topics.
The number of patient records increased a two orders of magnitude to
1000s of patients.
Outcome of PhenoStacks identified that level-of-detail
control
was important to
getting a better sense of the context at multiple levels of detail.
Methods for modify-
ing the topology to enable level-of-detail control based on properties of the data were
developed.
The analytical
abstraction was extended with this method to produce a
compressed representation that was further transformed into a set of
specific visu-
alizations:
radial
hierarchy,
scatterplot,
and line charts.
The level-of-detail
control
was used to simplify the hierarchical
view of the data,
and also to filter the results
displayed in the scatterplots and line charts.
1
The contents of this chapter has been accepted for publication as:
Glueck, M., Pakdaman Naeini,
M.,
Doshi-Velez,
F.,
Chevalier,
F.,
Khan,
A.,
Wigdor,
D.,
& Brudno,
M.
(2018).
PhenoLines:
Phenotype Comparison Visualizations for Disease Subtyping via Topic Models.
IEEE Transactions
on Visualization and Computer Graphics
, PP (99), Preprint
103
Chapter 6.
PhenoLines
104
6.1
Introduction
The characterization of
complex developmental
disorders,
such as autism spectrum
disorder (ASD), is a challenging and important task.
In such diseases, the heterogene-
ity in symptom presentation and a lack of definitive diagnostic tests cause difficulties
for diagnosis and prognosis:
clinicians must rely on their experience to identify the
disorder by observing the co-presentation of symptoms (i.e.,
symptom comorbidity),
as well as make predictions about how the disease will evolve for a particular patient
to determine treatment and care.
Symptoms are described by phenotypes—observable and measurable traits of pa-
tient
morphology (e.g.,
enlarged heart),
physiology (e.g.,
seizures),
or
behaviour
(e.g.,
depression)—and diseases are characterized by the probability of
phenotype
co-presentations.
Characterizing diseases is challenging for complex developmental
disorders because multiple disease processes may result in similar symptoms,
and a
single disease process may present differently in each child.
For example, two children
may have similar core ASD symptoms (e.g.,
language disorders),
but only one may
have severe gastrointestinal
symptoms.
Do the patients belong to different disease
subtypes,
or does one have two unrelated disorders? Symptoms may also vary as a
child ages.
An underlying neurological condition may produce convulsions in infancy
and intellectual
disability in childhood.
Developing a robust understanding of
how
phenotypes manifest and evolve over time for a particular disease (i.e., disease natural
history ) is critical to improving the accuracy of diagnosis and prognosis.
To support the study of disease natural history, researchers have applied machine
learning approaches to characterize diseases based on electronic health record (EHR)
data via clustering (Doshi-Velez et al.
2014),
deep learning (Che et al.
2015),
sup-
port vector machines (Lingren et al. 2016), and topic models (Elibol et al. 2016).
In
contrast to traditional
longitudinal
cohort studies of
several
hundred patients,
ma-
chine learning enables analyses of tens of thousands of patients,
thereby improving
the differentiation of
correlations between heterogeneous phenotypes from spurious
co-presentations of symptoms.
This work focuses on improving the analysis workflow
for topic model-based approaches to disease characterization.
Topic models can be trained on the symptoms of
patient subsets across many
ages, and then linked to create ad hoc disease history models based largely on cross-
sectional
data (i.e.,
EHRs).
The resulting topics estimate the temporal
evolution
Chapter 6.
PhenoLines
105
of
phenotype probabilities that describe latent disease processes.
Investigating the
pattern of dominant phenotypes across topics can yield characterizations of disease
subtypes (Doshi-Velez et al.
2015;
Elibol
et al.
2016).
Consulting medical
experts,
who contribute domain knowledge to characterize and evaluate the clinical
validity
of topic models,
can inform directions for debugging and refining the topic models.
During this iterative cycle of model characterization and optimization, it is critical to
investigate the patterns of modeled phenotypes both within,
and between disease
subtypes—e.g.,
what
phenotypes are most
prevalent
in each disease subtype,
what
phenotypes are common in some subtypes but not in others, and how do the prevalence
of phenotypes in a disease subtype change over time.
Due to the high dimensionality of topic models, de facto analyses often summarize
topics using a subset of
the modeled phenotypes (e.g.,
highest probability).
These
topic summaries may not accurately represent the semantic relationships between
phenotypes.
Phenotypes are not isolated,
rather,
they are indicative of higher-level
biological
systems (e.g.,
general
neurological
abnormalities).
Each modeled pheno-
type also reflects a temporal
evolution of probabilities (e.g.,
trends) that should be
evaluated in tandem with the patterns of phenotypes in topics.
Existing topic model
analyses do not represent modeled phenotypes using hierarchical
semantic relation-
ships,
and no tools exist to visualize the hierarchical
and temporal
dimensions of
phenotypes through tightly-coupled interactive exploration.
We address the representation of
semantic relationships by leveraging the tax-
onomy of the Human Phenotype Ontology (HPO) (K¨
ohler et al. 2016), which repre-
sents an anatomical hierarchy of subclass relationships between phenotypes, including
multiple-inheritance (i.e., one or more superclass phenotypes).
Using these relation-
ships,
the probabilities of
modeled phenotypes can be aggregated to more general
phenotypes,
revealing higher-level
patterns localized in biological
systems.
This en-
ables disease subtypes to be characterized by considering phenotypes at multiple
granularities (i.e., specific and general).
To this end, we contribute a data transformation workflow that processes unstruc-
tured topic model
output into a graph-based abstraction using the topology of
the
HPO. This graph unifies the representation of both hierarchical and temporal aspects
of
modeled phenotypes.
Yet,
this graph poses challenges for visualization,
as topic
model
output comprises thousands of
modeled phenotypes,
each with a temporal
component, and a complex hierarchical structure.
A novel measure of relevance was
Chapter 6.
PhenoLines
106
Figure 6.1:
PhenoLines facilitates the visual
analysis of topics that describe disease
symptoms, in support of topic model optimization and characterization.
Hierarchical
relationships, temporal trends, correlated measures, and rank-ordered lists enable for
comparisons within and between topics.
The interface includes (A) Settings Panel,
(B) Detail Panel, (C) Topics Panel, and (D) Search Panel.
developed to simplify the graph topology through filtering and compression, by lever-
aging existing prevalence data annotated to the HPO.
We demonstrate the graph
can be transformed into visualizations for different vectors of
analysis (i.e.,
radial
hierarchy, timeline charts, scatterplots, summary table, and rank-ordered list).
In this work,
we present PhenoLines,
a visual
analysis tool
for the interactive
interpretation of disease subtypes derived via topic models, based on this data trans-
formation workflow (Fig. 6.1).
PhenoLines was designed to support machine learning
experts when optimizing topic models,
and facilitate characterization sessions be-
tween machine learning and medical
experts.
We describe the collaborative design
process that we undertook to develop PhenoLines.
Finally,
we report the results
of
an initial
evaluation using topic models derived from a dataset of
ASD (Doshi-
Velez et al. 2014).
The evaluations include use by a collaborator, feedback from two
third-party machine learning experts,
and an in situ characterization session with a
development-behavioural pediatrician.
6.2
Background and Related Work
Our work builds upon research in machine learning and the visualization of
topic
models and longitudinal medical data.
Chapter 6.
PhenoLines
107
6.2.1
Topic Models of Clinical Data
Topic modeling is a machine learning approach for modeling discrete admixtures,
first popularized for extracting themes from document collections (Blei et al. 2003).
The underlying assumption is that a dataset can be modeled as a set of
topics
2
,
each of
which are probability distributions over words—or in our case,
phenotype
terms.
For example, a topic about neurological disorders may have high probability on
phenotype terms such as seizures or migraines.
The presentation of phenotypes for any
patient can then be represented as a mixture of topics.
For example, a patient with
only neurological symptoms might have a high weighting associated to a topic about
neurological disorders, while a patient with neurological and gastrointestinal concerns
may be best represented by a mixture of two or more topics.
The weighting applied
to each topic can help label and cluster patients with similar disease presentations.
Topic models have been extended to describe the temporal evolution of topics (Blei
& Lafferty 2006; Wang & McCallum 2006).
When applied to disease characterization,
these topic models capture the evolution of phenotype prevalence as a patient ages.
Thus,
the resulting topics can help identify insightful
presentations of
a disease’s
progression or to differentiate disease subtypes.
Topic models have been shown to be
effective for characterizing diseases (Doshi-Velez et al.
2015) and predicting patient
outcomes in intensive care units (Pivovarov et al. 2015; Huddar et al. 2016).
Visualization can address the challenge of interpreting and validating topic mod-
els (Chang et al. 2009).
In our work, we address interpretation and validation through
visualizations that facilitate characterization and inform optimization.
The iterative
cycle of characterization and optimization identifies phenotype patterns that are in-
consistent with the expectations of medical experts, enabling machine learning experts
to target improvements to the topic model.
6.2.2
Visualizing Topic Models
The popularity of
topic model-based text summarization motivated the design of
a number of
visualization systems to interpret document collections.
Topic mod-
els have been leveraged in visualizations to organize documents into meaningful
di-
mensional
projections (Chen et al.
2009;
Iwata et al.
2008;
Newman et al.
2010),
clusters (Lee et al. 2012),
and relationship networks (Gretarsson et al. 2012).
Topic
2
We will use
topic
,
disease process
, and
disease subtype
interchangeably.
Chapter 6.
PhenoLines
108
modeling has also been tightly integrated with interactive visualization to describe
document collections (e.g.
TIARA (Liu et al. 2012), ParallelTopics (Dou et al. 2011),
TextFlow (Cui et al. 2011)).
These systems assume a flat organization of topics, and
use a river-flow metaphor or Sankey diagrams to visualize the temporal evolution of
topics over time.
As the number of topics increases, these representations become vi-
sually cluttered.
To address scalability, hierarchical organizations of the evolution of
topics were proposed (e.g.
HierarchicalTopics (Dou et al. 2013), RoseRiver (Cui et al.
2014), TopicPanorama (Liu et al. 2014)).
These approaches rely on the automated or
semi-automated construction of topic hierarchies by clustering topics based on word
similarity.
Disease subtype analysis can be distinguished from the thematic analysis of doc-
uments based on the focus on words,
rather than topics.
Themes summarize how
topics evolve in relation to one other (e.g., themes relating to war or recessions wax
and wane corresponding to historical events).
In contrast, disease subtypes character-
ize the evolution of words (i.e., phenotype terms) across the time steps of individual
topics.
While prior work uses hierarchy to organize clusters of
related topics,
our
approach uses a hierarchy to classify the phenotype terms within topics.
A hierar-
chy produced by clustering is based on the words in the topics,
and optimizations
to the topic model may yield different hierarchies as the topics change.
In contrast,
the taxonomy of the HPO is a hierarchy that is independent of the topic modeling
process,
and thus consistent for different topic models,
while the subclass relation-
ships represent a classification of
phenotype terms based on domain consensus.
In
summary,
the hierarchy of the taxonomy not only summarizes probabilities to more
general phenotype terms, but also communicates how phenotype terms relate to each
other across different biological systems.
Topic models do not automatically provide meaning—they must be manually
interpreted and evaluated by domain experts (Chang et al. 2009).
The Topic Browser
(Gardner et al. 2010), Termite (Chuang et al. 2012), LDAvis (Sievert & Shirley 2014)
and LDAExplore (Ganesan et al.
2015) focused on verifying model
quality through
visual comparisons of how well topics relate to each other and how well terms associate
with each topic.
Our work most closely relates to visual analysis tools that support
the manual inspection and verification of the relevance and meaningfulness of latent
topics.
Chuang et al.
(Chuang et al.
2013) proposed a framework to support the
large-scale assessment of topic relevance by aligning a set of latent topics and a set
Chapter 6.
PhenoLines
109
of
reference topics,
visualized as a correspondence chart.
Since no reference topics
exist in our domain,
we propose a novel
approach to estimate phenotype relevance
by leveraging existing prevalence estimates via the HPO.
6.2.3
Visualizing Longitudinal Medical Data
A wealth of visualization tools has been developed to explore patient EHRs.
Most
efforts focus on patient medical histories in a time-oriented context, including moni-
toring a patient’s condition (e.g., LifeLines (Plaisant et al. 1998), VisuExplore (Rind
et al. 2011b)), analyzing response to a treatment (e.g., IPBC (Chittaro et al. 2003),
CareCruiser (Gschwandtner et al.
2011)),
and comparing evolving symptoms to a
baseline (e.g., Lifelines2 (Wang et al. 2008), LifeFlow (Wongsuphasawat et al. 2011)).
See Rind et al.
(Rind et al.
2011a) and Shneiderman et al.
(Shneiderman et al.
2013) for reviews in this area.
Clinicians find these tools helpful when determining a
course of treatment for acute or chronic patient problems.
Visualizations have also
been developed to investigate data from longitudinal
cohort studies,
such as for the
iterative refinement of event queries (e.g., CAVA (Zhang et al. 2014)), to define tem-
poral
cohort membership constraints (e.g.,
COQUITO (Krause et al.
2016)),
or to
evaluate the effectiveness of treatments (e.g.,
CoCo (Malik et al. 2015)).
Unlike the
present work,
these tools focused on extracting and visualizing sequences of
events
about specific patient events from EHR data.
Our work focuses on the comparing
and interpreting the temporal
evolution of
phenotype probabilities within and be-
tween disease subtypes.
To our knowledge, our work is among the first visualizations
of topic models applied to disease characterization.
6.3
Co-operative Design Process
The design of
PhenoLines was a collaboration between researchers in visualization
and machine learning.
The collaboration was initiated because the machine learning
researchers expressed an interest in applying the taxonomy of the HPO to help visual-
ize their topic models.
In this section, we is used to describe the design process from
the perspective of the visualization researchers.
To facilitate a systematic design pro-
cess, we adapted the nine-stage design study methodology framework (Sedlmair et al.
2012).
PhenoLines was developed over six months,
during which we worked closely
Chapter 6.
PhenoLines
110
with the machine learning researchers, who took on the role of domain experts.
Here,
we summarize the four stages of the Core Phase of the design process.
Problem Characterization.
In the Discover Stage, we investigated the problem
of disease subtyping via topic models.
First, we conducted two formative interviews
with the machine learning researchers to learn about their research, observe existing
tools,
and discuss barriers to analysis.
We followed-up with two semi-structured in-
terviews to elicit specific details about their data,
their workflow,
and the types of
analysis goals that could be supported through visualization.
The transcripts of these
interviews were coded to identify needs and requirements,
which were distilled into
abstract visualization tasks (Section 6.4).
Two core requirements emerged:
the hier-
archical visualization of disease subtypes to identify interesting phenotypes, and the
need to compare the temporal evolution of phenotype probabilities between subtypes.
Data Abstraction and Visual
Encoding.
In the Design Stage,
we worked
closely with the machine learning researchers to develop a graph-based data abstrac-
tion based on the taxonomy of the HPO, and evaluate visual encoding strategies.
The
machine learning researchers provided us with output from a topic model
they had
previously analyzed.
This enabled iterative development and refinement of the data
abstraction and visual encodings,
as the machine learning researchers could confirm
when expected patterns and insights were revealed.
The data abstraction addressed the requirement of
hierarchical
representation.
The modeled phenotypes of each disease subtype became leaf nodes, and the proba-
bilities were aggregated to more general
phenotypes in the hierarchy.
Working with
the machine learning experts,
we tested different measures to summarize the tem-
poral
evolution of phenotype probabilities as a single value that could be explicitly
encoded in visualizations.
Based on feedback from the machine learning experts, the
measures of maximum probability, trend slope, and representative age interval (peak
probability) best helped identify potential phenotypes of interest.
Implicit hierarchies (i.e., space-filling) were preferred over explicit representations
because they resembled heatmaps; compactly encoding the node values and revealing
patterns in the hierarchy (e.g., branches with similar values).
Radial hierarchies were
selected because they more evenly allocated size across all
levels of
the hierarchy,
which was important because leaf nodes were crucial to the analyses.
To compare the temporal evolution of phenotype probabilities between subtypes,
we tested explicit encodings of
the differences (e.g.,
variance,
mean-squared error,
Chapter 6.
PhenoLines
111
entropy).
The machine learning experts found these measures were inflexible for
the detailed comparisons necessary for analysis.
They preferred juxtaposed timeline
charts to compare the probabilities of phenotypes because the output from the topic
model was directly represented.
These timeline charts supported flexible comparisons
as the need arose, making it easier to pinpoint specific differences that could be hidden
in a summary measure.
Through the collaborative design work, it became clear that hierarchical and tem-
poral representations alone did not provide all the necessary perspectives on the data.
To mimic the existing workflow of the machine learning researchers, we incorporated
the rank-ordered list of the phenotypes in each topic model
to support summariza-
tion.
As we developed the summary measures,
our collaborators expressed a desire
to visualize correlations between the measures within and between topics,
resulting
in the scatterplot and summary chart.
The data transformation workflow and the
computation of summary measures are described in Section 6.5.
Initial
Prototype and Refinement.
In the Implement
Stage,
we developed
an interactive prototype using D3 (Bostock et al.
2011).
The machine learning re-
searchers were asked to evaluate features and report on bugs.
During this stage,
the Settings Panel (Fig. 6.1A) was developed to address configuration of the visual-
izations.
The relevance score and hierarchy filtering and compression methods were
developed to address visual complexity.
We continued to refine and extend the pro-
totype over four weeks to address usability issues.
With each update,
we were able
to attain richer feedback due to improved features and usability.
Iterative refine-
ments continued until
the machine learning researchers satisfied they could use the
prototype to make sense of, hypothesize about, and investigate the models they had
produced.
The resulting functional prototype is described in Section 6.6.
Functional Prototype Deployment.
In the Deploy Stage, the functional pro-
totype was evaluated by the machine learning researchers and two third party machine
learning experts.
The prototype was also used by the machine learning researchers
to conduct a disease characterization session with a medical
expert.
These evalua-
tions address the top three levels of Munzner’s Nested Model for Design and Valida-
tion (Munzner 2009).
Details of these evaluations are found in Section 6.7.
Chapter 6.
PhenoLines
112
6.4
Disease Subtype Analysis
The problem characterization yielded insights into disease subtyping via topic models,
key tasks,
and existing analysis methods and challenges.
We synthesize how visual-
ization could improve the analysis workflow,
and characterize the domain tasks as
abstract visualization tasks.
6.4.1
Clinical Data and Topic Models
The machine learning researchers expressed a desire to characterize and optimize
new topic models generated from an existing dataset of
autism spectrum disorder
(ASD) patients collected from Boston Children’s hospital
(Doshi-Velez et al.
2014).
This dataset included the comorbidity information of 13,337 patients extracted from
a corpus of
66,275 EHRs,
and was preprocessed to represent the comorbidity data
using unique term identifiers (CUI codes) from the Unified Medical Language System
(UMLS) (Bodenreider 2004).
The UMLS is a meta-thesaurus that provides termi-
nological mappings between a variety of medical vocabulary systems, including ICD,
SNOMED CT, and HPO.
The machine learning experts explained the comorbidity data was partitioned into
15 mutually exclusive age time steps (0 to 14 years) for the purposes of topic modeling.
The CUI
codes associated with each patient at each time step was considered a
document using a bag-of-words representation.
To reduce noise in the model,
only
the 5,000 most frequent CUI codes in the corpus were retained.
A standard Latent
Dirichlet Allocation (LDA) (Blei
et al.
2003) model
was applied to each of
the 15
time steps independently.
For each time step,
a seven-topic LDA was trained using
gensim (
ˇ
Reh˚uˇrek & Sojka 2010),
with both symmetric priors and hyper-parameter
optimization.
This process resulted in seven topics at each time step.
The Kuhn-
Munkres algorithm (Munkres 1957) was used to create a bipartite matching of topics
at adjacent time steps, resulting in seven disease process models, each describing the
phenotype probabilities for a disease subtype over the 15 time steps.
The machine
learning researchers provided us with the final output of the topic model, in the form
of tuples (Topic ID, Time ID, CUI, and Probability).
Chapter 6.
PhenoLines
113
6.4.2
Key Tasks
The formative interviews revealed that topic model researchers engage in an iterative
process of topic model characterization and optimization.
Disease Subtype Characterization and Validation
The interviewees explained that the primary goal when interpreting their topic mod-
els is the characterization of
modeled disease subtypes.
This process involves an
evaluation of the dominant phenotypes in each of the topics,
but also benefits from
a higher-level understanding of which biological systems are affected—e.g., dominant
neurological
phenotypes may indicate a broad correlation between these symptoms,
or point to specific developmental disorders or psychiatric conditions.
During this task,
machine learning researchers often consult medical
domain ex-
perts to ascertain whether the characterizations derived from the topic models align
to known comorbidities of the disease, and whether they reveal new correlations that
were not expected.
These conversations can also shed light on whether novel patterns
are scientifically interesting, or reveal biases present in the dataset.
Topic Model Debugging and Refinement
Topic models are optimized by improving prior estimates of
phenotype prevalence.
The interviewees explained that due to the non-linearity of the search space in topic
modeling,
the model
results must be checked to ensure unexpected effects were not
introduced whenever the topic model is modified.
The output also needs to be verified
to ensure that existing features continue to be captured.
If the refined model includes
unexpected changes in the definition of topics,
it is necessary to drill
down into the
details to investigate where the changes originate.
Feedback from the topic characterization efforts can also guide optimizations.
For
example,
one interviewee explained that a common issue transpires when a pheno-
type occurs with relatively high probability across multiple topics—in some cases,
this pattern may be perfectly valid,
indicating that the phenotype is common but
irrelevant to differentiating disease subtypes.
In other cases,
it may indicate that a
poor choice of prior estimates prevented differentiation.
Chapter 6.
PhenoLines
114
6.4.3
Existing Analysis Methods and Barriers
The machine learning researchers explained that specialized tools for in-depth explo-
ration of disease topic models are currently unavailable.
They typically write custom
analysis scripts to summarize topics based on the modeled phenotypes with high-
est probability in each topic and at each time step.
Due to the large number of
phenotypes, only a fixed number of the highest probability phenotypes are typically
evaluated.
They noted a shortcoming of
this approach is that it does not consider
higher-level affected biological systems.
The interviewees reported they manually pro-
duce timeline charts of temporally evolving probabilities to investigate the trends of
specific phenotypes, but this is a tedious, error-prone, and time-consuming process.
This largely manual process of analysis impedes fluidity of both model character-
ization and optimization tasks.
The interviewees explained that manually creating
timeline charts for subsets of
phenotypes impacted the quality of
disease subtype
characterization sessions with medical
experts.
Since charts could not be prepared
for all
phenotypes,
if
discussions with medical
experts required details of
an unex-
pected phenotype, follow-up sessions were necessary to complete the characterization,
which broke continuity of the discussion.
They also noted that the manual analyses
also made it difficult to maintain an overview of phenotype probabilities across disease
subtypes, impacting their ability to track the full effects of topic model optimizations.
6.4.4
Benefits of Interactive Visualization
The de-facto approach of displaying only the highest probability phenotypes,
with-
out consideration of their hierarchical
relationships,
can result in incorrect scientific
interpretation.
For example,
there are over 20 different phenotypes for convulsion-
related phenotypes.
A patient with epilepsy will
accrue combinations of
these 20
phenotypes depending both on the details of their sub-condition as well as their clin-
ician.
Thus, a topic relating to patients with epilepsy may put 0.01-0.03 probability
on each individual term, which, when summed result in 0.2-0.3 of the topic having to
do with epilepsy (with the rest of the probability mass having to do with comorbid
conditions).
In contrast, terms like intellectual disability and autism have many fewer
associated phenotypes.
Thus, a topic relating to patients with these conditions may
put much higher probabilities—0.1-0.2—on individual phenotypes.
If one looked only
at the highest probability phenotypes in such a topic,
we might mistakenly believe
Chapter 6.
PhenoLines
115
that the topic was only about autism and intellectual
disability because all
other
phenotypes had probability less than 0.05.
The hierarchical
representation of
phe-
notypes in topics using the taxonomy of the HPO can provide context that reveals
relationships between individual phenotypes and can also help identify whether top-
ics differentiate particular biological
systems.
This approach could improve on the
existing summarization approaches used by the machine learning researchers.
An interactive visualization system can also address the challenge of
fluidity in
characterization and optimization tasks by providing a consistent visual
representa-
tion of
the topics,
making it easier to track changes resulting from optimizations.
Characterization sessions can benefit through an interface to view details on demand
for any phenotype in the topic model.
6.4.5
Visualization Tasks
We classified the identified domain tasks in terms of abstract visualization tasks using
Brehmer & Munzner’s Multi-Level Task Typology (Brehmer & Munzner 2013).
Considering Why? users perform tasks, both aim to discover, but differ in search
and query approaches to interpret the underlying data.
The Characterization and
Validation task is oriented toward identifying specific phenotype co-presentations and
trends in the temporal probability distribution.
In this case, the target is known, so
search involved locate (location known) and explore (location unknown).
Through
query, the goal of this task is to identify and compare the phenotypes within topics.
In contrast, the Refinement and Debugging task is primarily concerned with the high-
level
patterns of
phenotype temporal
probability distributions between topics.
In
this case,
the target is unknown,
so search involves browse (location known) and
explore (location unknown).
Through query, the goal of this task is to compare or
summarize the differences between topics.
To address How?
users complete tasks,
our design process revealed the need to
encode unstructured topic models output in hierarchical
and temporal
visual
rep-
resentations, among others.
We thus developed a graph-based data abstraction that
can be transformed into task oriented visual representations.
Using this graph, sum-
mary measures of the temporal evolution of phenotype probabilities were developed
to compare and summarize broader trends between topics, and also identify specific
phenotypes within topics.
Visual encoding strategies were used to represent specific
Chapter 6.
PhenoLines
116
details to support comparisons.
For example, the summary table and timeline charts
enable comparison through juxtaposition,
while scatterplots and rank-ordered lists
explicitly represent relationships between data attributes.
Due to the variety of vi-
sual
representations,
users manipulate the visualizations through select,
arrange,
and change operations that maintain a consistent layout, rather than navigation.
To
address visual clutter and complexity, we support filter and aggregate operations by
developing a novel measure of phenotype relevance.
6.5
Data Transformation Workflow
The interactive analysis of
disease topic models required a data abstraction that
represented the hierarchical
and temporal
aspects of
the topics.
To this end,
we
developed a workflow to map CUI codes from the topic model output to phenotype
terms in the HPO,
and leverage the taxonomy of the HPO to derive a graph-based
data abstraction of the modeled phenotypes.
In prior work, we demonstrated the application of the HPO to visualize phenotype
data within a hierarchical semantic context (Glueck et al. 2016; Glueck et al. 2017).
In this work we extend this approach to calculate a novel relevance score that enables
filtering of phenotypes and simplification of the topology.
6.5.1
Mapping Topic Model Results to HPO
Recent evaluation of HPO content coverage in UMLS showed that term coverage was
only 54% (Winnenburg & Bodenreider 2014).
Although additional
HPO mappings
were added in the 2015AB UMLS release (Dhombres & Bodenreider 2016),
we still
discovered that only 10-20% of topic results terms had mappings.
To further improve
the coverage of
mappings from CUI to HPO,
we utilized a deep learning approach
to map text descriptions to HPO terms that is being developed in our lab (Arbabi
2016-11-03), improving term coverage to 80-90%.
We manually audited the terms to ensure that the terms with higher probabilities
(>0.001) were being correctly represented.
To fix remaining errors, we introduced a
curation layer to the mapping process that overrode results from the deep learning
approach.
The goal
of this data mapping process was not to develop a generalized
approached, but to ensure that our data was accurately represented using HPO terms.
Chapter 6.
PhenoLines
117
Efforts to improve mappings between medical vocabularies are a continuous effort and
outside the scope of the present work.
The resulting data mapping process thus mapped individual
CUI codes to HPO
terms.
These HPO terms were then used to extract relevant subgraphs of the HPO,
using the method of
our prior work (Glueck et al.
2016;
Glueck et al.
2017).
In
so doing,
probabilities for multiple CUI codes that mapped to the same HPO term
were aggregated.
Additionally, the subsumptive “is-a” relationships of the HPO sup-
ported logical inferences to higher-level phenotypes, enabling probabilities of specific
phenotypes to be aggregated up the hierarchy to the root.
The result is a multi-level
description of increasing granularity,
where more general
phenotype terms combine
the probabilities of more specific phenotype terms.
6.5.2
Computing Summary Measures
Based on the collaborative design process, we developed a set of measures to summa-
rize the temporal evolution of each phenotype’s probabilities to facilitate comparisons:
maximum probability,
trend slope,
representative age interval,
and relevance score.
Without the graph-based data abstraction, it would not be possible to calculate tem-
poral summary measures over the hierarchy of phenotypes.
We used two levels of
age intervals to compute these summary measures:
the
overall time interval (0-14 years), as well as four discrete age intervals, which align to
developmental milestones:
neonatal/infantile (0-2 years), childhood (2-5 years), early
juvenile (5-10 years),
and late juvenile 10-14 years.
These derive from the Age of
Onset
term in the HPO, although we subdivide juvenile into early and late in order
to subdivide this longer interval.
Maximum Probability and Trend Slope
To summarize the estimated probabilities of
each phenotype over patient age,
we
calculate two measures to summarize the overall time interval as a single value:
the
maximum probability and the slope of the linear regression fit.
These statistics were
chosen because they helped identify the most important probability and the magni-
tude of the change, respectively.
Chapter 6.
PhenoLines
118
Representative Age Interval
To identify the age interval where the highest probability occurs, we compute the 95th
percentile probability in each of the four discrete age intervals.
The interval with the
highest value is chosen as representative for a given phenotype.
This coarse measure
helps to localize the age interval where the peak probability of the phenotype occurs.
Relevance Score
To guide the interpretation of
disease subtypes,
we developed a novel
measure of
relevance for each phenotype to help identify phenotypes that are more likely to be
unique to the modeled disease, regardless of the modeled probability.
This relevance
score improves upon the current approach of reducing the phenotype search space by
considering only high-probability phenotypes, and was necessary due to the hierarchi-
cal aggregation of probabilities (i.e., general phenotypes will have higher probability
than specific phenotypes).
The HPO has been used to calculate the frequency with which a phenotype is
associated with known diseases (K¨
ohler et al.
2009).
We apply this computed fre-
quency as an estimate of
expected phenotype probability.
Although this estimate
is biased toward rare genetic diseases,
representative prevalence data is difficult to
source.
Thus,
this estimate was sufficient as a proof of concept to demonstrate the
automatic calculation of phenotype relevance.
The intuition follows that phenotypes
with both a high expected probability and a high modeled probability are less unique,
while phenotypes with a lower expected probability and a higher modeled probability
are more likely to be unique to the disease.
To calculate the relevance score,
we compute the difference between the proba-
bilities of phenotypes in the topic model and the expected probabilities derived from
the HPO. Let X be a phenotype in the topic model, then P
model
(X) is the phenotype
probability in a topic at one time step and P
expected
(X) is the expected phenotype
probability.
We calculate the magnitude of
the difference between P
model
(X) and
P
expected
(X) using the signal to noise ratio:
SNR(X) = 10 log
10
(P
model
(X))
−
10 log
10
(P
expected
(X))
(6.1)
The distribution of
SNR (Eq.
6.1) is used to identify relevant phenotypes by
assigning a percentile threshold,
i.e.,
the phenotypes with larger positive differences
Chapter 6.
PhenoLines
119
Figure 6.2:
An example SNR distribution for one topic at one time step.
A percentile
threshold can be used to identify the most relevant phenotypes in the right long-tail.
The boxplot shows IQR and 5-95 percentiles.
in the right long-tail
of the distribution indicate phenotypes with low expected and
high modeled probability (Fig. 6.2).
6.6
PhenoLines Description
PhenoLines is an interactive visual
analysis tool
that was designed using the data
transformation workflow.
Three visual representations are used to summarize pheno-
types within topics (i.e.,
radial
hierarchy,
scatterplot,
rank-ordered list) and two to
summarize phenotypes across topics (i.e., summary table, timeline charts) (Fig. 6.3).
To co-ordinate between these visualizations,
PhenoLines
supports
fully-linked
views.
Phenotypes,
represented as regions,
points,
or text,
can be hovered-over or
selected in the radial hierarchy, scatterplot, and rank-ordered lists to display detailed
information using the summary table and timeline charts.
Selecting a phenotype set
it as the default detailed information.
in the Detail
Panel
(Fig.
6.1B).
A keyword
search supports the direct look-up of specific phenotype terms (Fig. 6.1D).
6.6.1
Compare Within Topics
The Topics
Panel
(Fig.
6.1C)
provides
an overview of
all
topics,
organized into
columns of
visualizations for each topic.
Three visualizations are used to describe
Chapter 6.
PhenoLines
120
Figure 6.3:
Phenotypes can be compared across topics (A) summary table and (B)
juxtaposed timeline charts,
and also within topics (C) radial
hierarchy,
(D) scatter-
plot, and (E) rank-ordered list.
each topic:
a radial hierarchy, a scatterplot, and a rank-ordered list (Fig. 6.3C,D,E).
These visualizations enable a user to explore the dominant phenotypes within each
topic, supporting browse & explore search, through identify & compare queries.
We support these explorations through multiple visual
representations (encode)
that can be customized (arrange & change).
The Settings Panel (Fig. 6.1A) enables
the visual
representations to be configured based on the analysis.
For example,
the
user can change the summary measure used to define the fill
colour of
all
visual
representations in the Topics Panel
(Fig.
6.4).
Colour palettes were adapted from
ColorBrewer (Harrower & Brewer 2003).
The fill
colour thus explicitly encodes the
temporal evolution of phenotype probabilities (i.e., maximum probability, trend slope,
representative age interval).
The radial hierarchy represents the semantic relationships between phenotypes
(Fig. 6.3C). General phenotypes are at the center (root),
and grow in specificity to-
ward the periphery (leafs).
The user can set the arc length of each region to represent
the maximum probability of each phenotype (Fig.
6.5A).
This supports a top-down
approach to phenotype exploration, whereby dominant high-level phenotypes can be
identified, and then the contributing specific phenotypes can be investigated.
The scatterplot displays correlations between any of the four summary measures
(Fig. 6.3D). This visualization enables a comparison of the distribution of phenotypes
Chapter 6.
PhenoLines
121
across the measures, with each phenotype represented as a data point in the scatter-
plot.
The axes of the scatterplot can be customized to display different correlations
(e.g.,
maximum probability v.
representative age interval).
In addition to the fill
colour setting,
this enables the visual comparison of up to three summary measures
at a time in the scatterplot.
The rank-ordered list summarizes the phenotypes with highest probability in
each topic (Fig.
6.3E).
The relative probability of each phenotype is communicated
using bar charts adjacent to each term.
The rank-ordered list supports a bottom-up
approach to phenotype exploration,
and the list can be filtered based on the height
of each phenotype node in the graph.
For example,
the list can be limited to only
leaf phenotypes (height=0), to include parents (height=1), or to include parents and
grandparents (height=2).
This enables the user to control
the ratio of
aggregated
phenotypes to display along side the modeled phenotypes.
6.6.2
Compare Between Topics
The Topics Panel
can also be used to make high-level
comparisons between topics,
i.e., how are the phenotypes between topics different, overall? The user can set the arc
length to represent the descendant count of each phenotype.
This supports compar-
isons of explicitly encoded values between topics through a consistent representation
of the hierarchy topology,
supporting browse & explore search,
through compare &
summarize queries (Fig. 6.5B).
A detailed comparison of a single phenotype across topics is facilitated through
the Detail Panel (Fig. 6.1B), which contains a summary table and juxtaposed timeline
charts for the phenotype in each topic.
These visual
representations support locate
& explore search, through identify & compare queries.
The summary table displays the name of the phenotype alongside a table of all
summary measures, enabling for the detailed comparison of a single phenotype across
all topics (Fig. 6.3A).
A timeline chart for each topic displays how the probability of the phenotype
changes with a patient’s age.
These timeline charts are vertically juxtaposed to
facilitate comparisons along the temporal dimension of the evolving phenotype prob-
abilities (Fig. 6.3B).
The Detail
Panel
complements the Topics Panel:
once a phenotype is identified
Chapter 6.
PhenoLines
122
Figure 6.4:
The visualizations can encode different summary measures.
Example topic
displaying (A) maximum probability, (B) trend slope, (C) relevance score percentile,
and (D) representative age interval.
Figure 6.5:
Arc length based on (A) maximum probability reveals dominant pheno-
types, or (B) descendant count facilitates value comparisons between topics through
consistent topology.
The same two topics are depicted in both panels; only arc length
is changed.
in the topic charts,
the phenotype details can be carefully inspected and compared
across topics and time.
6.6.3
Filtering Phenotypes and Compressing Hierarchies
To address visual
complexity in all
visual
representations,
we use filter & aggregate
approaches to simplify the visualizations.
As the topology of
the HPO is complex
and supports multiple inheritance,
it can be difficult to fully display (Glueck et al.
2016;
Glueck et al. 2017).
During the Design Stage,
it became apparent that it was
unnecessary to show the entire hierarchy all the time.
However, a data-aware approach
to non-uniform hierarchy pruning was required to ensure important phenotypes were
not removed.
The graph-based data abstraction and relevance score made filtering
and topology simplification possible,
since it allowed systematic traversals of
the
Chapter 6.
PhenoLines
123
phenotype relations and recursive application of
relevance thresholds.
As filtering
and simplification is carried out on the graph representation, the effects propagate to
all visual representations, simplifying the radial hierarchy, reducing occlusions in the
scatterplot, and removing phenotypes from the rank-ordered list.
The relevance score is exposed to users as a percentile of the SNR distribution, and
is used to filter less relevant phenotypes by defining a minimum relevance percentile
threshold.
Our approach adopted the Minimum Description Length (MDL) Treecuts
method to prune branches of the hierarchy (Veras & Collins 2017).
MDL Treecuts
evaluate the nodes of the hierarchy recursively to define non-uniform treecuts based
on a measure of importance—in our implementation we use the relevance score.
Thus,
branches of the hierarchy are filtered if they do not contain at least one descendant
with a relevance score percentile higher than the threshold.
The user can dynamically
set the minimum relevance percentile threshold to define the aggressiveness of filtering.
For example,
phenotypes can be filtered to only include those in the top 10% of
relevance scores by setting the threshold to the 90th percentile.
The phenotypes
Figure 6.6:
Phenotypes can be filtered or compressed using a percentile threshold on
the relevance score distribution.
(A) Unfiltered hierarchy.
(B) Filtered phenotypes
can be desaturated,
or (C) hidden to reduce breadth.
(D) Compression uses two
thresholds to eliminate intermediate phenotypes to reduce depth.
An example radial
hierarchy is shown here,
but filtering and compression affects all
visual
representa-
tions.
Chapter 6.
PhenoLines
124
below this threshold are either displayed using a desaturated scale (Fig. 6.6B) or can
be hidden from view (Fig. 6.6C).
Although filtering removes branches from the hierarchy, it does not reduce depth
when leaf
phenotypes are also the most relevant.
To address this,
we developed a
hierarchy compression method,
also based on the relevance score.
A secondary per-
centile threshold is used to define the minimum relevance score percentile required
to display an intermediate phenotype.
Intermediate phenotypes below this threshold
are hidden and descendant phenotypes are merged to reduce the depth of the hierar-
chy.
A combination of the filtering and compression methods results in a simplified
hierarchical topology that provides higher-level context, while retaining relevant leaf
phenotypes (Fig. 6.6D).
6.7
Initial Evaluations
We conducted initial
evaluations of
PhenoLines in two parts.
First,
to investigate
debugging and refining topic models.
Second, to observe usage during a characteriza-
tion session with a developmental-behavioural pediatrician.
Three topic models were
generated for the evaluations.
Baseline Model.
The Baseline Model was trained using a non-informative Dirichlet
prior based on an equal likelihood that a phenotype would appear in any topic.
This
approach assumes no prior knowledge about the topics and is often used for initial
topic discovery.
Informed Prior Model.
The Informed Prior Model
used a Dirichlet prior de-
rived from an empirical
optimization that maximized the likelihood of
phenotypes
based on their occurrence in the original
data.
This symmetric prior promoted the
probability of phenotypes which were known to occur with higher frequency.
Curated Model.
The Curated Model
used a constrained dataset,
limited to
phenotypes that occurred with high probability in the Baseline Model.
Using un-
supervised learning,
an initial
set of
terms with high probability was expanded to
include related terms.
The resulting set of terms included 246 phenotypes.
The Cu-
rated Model was then trained on this data.
This approach removed less relevant terms
from the dataset to reduce the noise and improve differentiation between topics.
Chapter 6.
PhenoLines
125
6.7.1
Debugging and Refining
Visualizing the hierarchical and temporal components of the topics using PhenoLines
could help machine learning researchers interpret topic models for the purposes of
debugging and refinement.
To investigate this process,
we engaged one of
our ma-
chine learning collaborators to use PhenoLines to identify and explain the differences
between the outputs of the Baseline Model,
the Informed Prior Model,
and the Cu-
rated Model.
We elicited additional feedback from two third-party machine learning
experts through a short-term deployment study to corroborate our findings.
Informed Prior vs.
Baseline
The topics produced by the Informed Prior Model
were contrasted against those of
the Baseline Model.
Although the expectation was that the informed prior would
yield superior results,
a precise understanding of how the topics improved is needed
to guide future refinements.
Our collaborators used PhenoLines to compare and contrast the topics produced
by the Informed Prior Model
and the Baseline Model.
In both models,
there was
little differentiation between topics for specific phenotypes with high probability, but
substantial
differentiation when many related,
but low probability phenotypes were
aggregated.
By enabling investigations of
general
phenotypes (i.e.,
biological
sys-
tems), the visualizations helped our collaborators to explain how the symmetric prior
improved topic differentiation.
Using a combination of
the radial
hierarchies and
the timeline charts,
specific differences between the topics could be articulated.
For
example,
two topics having high prevalence of
gastrointestinal
abnormalities were
distinguished by their temporal characteristics:
one was strongly increasing over age,
while the other was decreasing.
Curated vs.
Informed Prior
The insights obtained from the Informed Prior Model informed the approach of con-
straining terms,
to filter terms common across the population and thereby further
promote topic differentiation.
The topics produced by the Curated Model
were better differentiated than the
Informed Prior Model,
and these differentiations extended to specific phenotypes in
three of
the topics.
Our collaborators again used the radial
hierarchies to identify
Chapter 6.
PhenoLines
126
these differences.
For example,
two topics were enriched with neurological
abnor-
malities,
but these were differentiated by more specific phenotypes that indicated
prevalence of mood disorders in one,
and psychosis in the other.
The radial
hierar-
chy and timeline charts helped to characterize the differences between the topics and
identify patterns that could be validated with medical experts.
The insights of
how topics differentiated in each of
the three models would not
have been possible without the hierarchical
aggregation of
phenotype probabilities.
Had the topics been compared only using the highest probability phenotypes,
the
differentiation between the topics would have been missed.
Third-Party Evaluation
To corroborate our findings and collect qualitative feedback, we recruited two experi-
enced third-party machine learning experts to evaluate PhenoLines over a one-week
deployment.
Both had experience with topic modeling; one had prior experience with
ASD. The tool was demonstrated in a 1 hour session, in which experts were trained in
the interface and the three topic models were introduced.
Experts were asked to use
the tool
and complete an online survey to document their hypotheses and findings
after each usage.
Each conducted 2-3 analysis sessions, lasting 45 minutes to 1 hour
each.
A 30 minute semi-structured interview was conducted after the deployment to
collect detailed feedback, using the survey results to guide the discussion.
Both experts found that the topics produced by the Curated Model
were more
discriminative than those produced by the other two models, and spent most of their
time investigating this model.
The expert with no ASD experience identified the same
three differentiated topics as our collaborators.
The expert with ASD experience also
identified these topics and commented that he was able to distinguish comorbidities
with which he was familiar.
Knowledge of
ASD impacted how these experts used
PhenoLines.
The rank-ordered list was used in all
sessions by the expert familiar
with ASD, while the expert without experience started using it as a reference in later
sessions.
He explained that it became very useful
after he had familiarized himself
with the terms,
and that he used the radial
hierarchy to learn about the terms and
their relationships.
Both experts reported that the radial
hierarchies and timeline
charts were the most informative when differentiating topics,
while the scatterplot
helped to locate terms with similar summary measures regardless of their hierarchical
and temporal characteristics.
Chapter 6.
PhenoLines
127
The experts also suggested improvements.
Both wanted additional
information
from the training data included, such as which CUI codes were mapped to each phe-
notype, and the number of patients that were modeled by each topic.
The expert with
ASD experience also wanted to know to what CUI codes the aggregated phenotypes
were related.
6.7.2
Characterization and Validation
PhenoLines was evaluated in situ,
during a topic characterization session between a
machine learning researcher and a developmental-behavioural pediatrician.
The ses-
sion lasted two hours and topics from the Curated Model
were used.
The pediatrician
had prior experience reviewing disease clustering results with the machine learning
researcher, but no prior experience with PhenoLines or topic models.
In the first 30
minutes, the machine learning researcher introduced PhenoLines to the pediatrician
and demonstrated how aspects of the topic model were visualized.
Over the next 60
minutes,
the two collaboratively used PhenoLines to characterize different topics in
the model.
The final 30 minutes were used for open discussion to collect qualitative
feedback about PhenoLines.
Topic Characterization Results
Of
the seven topics in the model,
three were characterized as likely to align with
cases the pediatrician was familiar with:
(a) children with a diagnosis of
cerebral
palsy and ASD, (b) children with an earlier misdiagnosis of ASD and a later correct
diagnosis of ADHD and mood disorders, and (c) children with an earlier misdiagnosis
of ASD and a later correct diagnosis of psychosis.
Another topic was characterized as
a likely catch-all for phenotypes that did not directly relate to the diagnosis of ASD.
The remaining four topics appeared to characterize diagnoses of
ASD occurring at
different ages and were differentiated along comorbidities that the pediatrician was
unsure related to ASD.
These results are in line with prior clustering results using this dataset (Doshi-
Velez et al.
2014),
in which subgroups were identified with primarily neurological
(e.g., seizures), psychiatric (e.g., mood disorders), multi-system, and undefined char-
acterizations.
In addition to replicating these results,
PhenoLines enabled a richer
discussion of the specific phenotypes in each topic.
For example, seizures and contrac-
Chapter 6.
PhenoLines
128
tures are highly correlated with cerebral palsy and this relationship was evident in the
topic having to do with cerebral
palsy and ASD.
These additional
details provided
stronger evidence to support the topic characterizations.
The hierarchical
aggrega-
tion of probabilities also made the contributions of specific phenotypes to higher-level
phenotypes more apparent.
The pediatrician was particularly interested in the two topics that appeared to
characterize misdiagnoses of ASD. She commented that specific patient cases of mis-
diagnosis are very hard to identify in practice,
but are of significant interest to the
clinical community.
Early correct diagnosis of mood disorders and psychosis is diffi-
cult and a misdiagnosis of ASD often occurs in such cases.
She commented that there
was great value in using the topics to characterize comorbid phenotypes that could
potentially help differentiate these patients earlier and lead to more robust diagnosis
strategies.
Differentiated Roles
An interesting dynamic evolved between the pediatrician and the machine learning
researcher, whereby the pediatrician took on the role of investigator and the machine
learning researcher the role of verifier.
The pediatrician focused primarily on the rank-
ordered list.
She explained it was the easiest for her to interpret because she quickly
recognized relevant phenotype terms and efficiently parsed the relative probabilities
that were represented as bars.
Since doctors are trained to think in terms of specific
symptoms, it is not surprising that the rank-ordered list most aligned to her training.
However, the rank-ordered list also hides the complexities of hierarchical relationships
and temporal
trends,
and could lead to misinterpretations based on an incomplete
reading of
the data.
Thus,
as the pediatrician developed hypotheses,
the machine
learning researcher ensured that the hypotheses were grounded in the data.
Using the
radial hierarchies,
timeline charts,
and scatterplots,
the machine learning researcher
collected additional evidence to support or counter the hypotheses developed by the
pediatrician in this verification process.
The machine learning researcher commented
that without the holistic perspective provided by multiple visual representations, this
verification task would not have been possible.
The two participants also reflected on differences compared to prior characteri-
zation sessions.
In the past,
sessions were conducted using prepared lists and static
charts.
Although similar representations were available in PhenoLines, both experts
Chapter 6.
PhenoLines
129
agreed that the interactivity of the tool greatly improved the flow of the discussion.
The interactivity enabled immediate inspection of
any part of
the model,
whereas
in the past,
the machine learning researcher would have had to follow-up regarding
phenotypes for which no materials had been prepared.
Using PhenoLines,
the dis-
cussion was more fluid and allowed a deeper line of
investigation to occur without
interruption.
The machine learning researcher commented that PhenoLines was integral in fa-
cilitating the dialogue with the pediatrician.
By supporting a differentiation of roles,
the experts were able to simultaneously attend to different visual
representations
and collaboratively develop robust explanations of the relationships captured by the
topics.
Preferred Visual Representations
The rank-ordered list,
with the representative age interval
colour scale,
was used
most by the pediatrician and preferred.
It enabled her to quickly draw coarse asso-
ciations between high probability phenotypes without necessitating interpretation of
the more complex visual representations.
This combination enabled the pediatrician
to speculate about the topics that characterized misdiagnoses.
On the other hand,
the machine learning researcher reported that the radial
hi-
erarchies was most preferred.
When preparing for the characterization session,
the
hierarchy enabled a top-down approach, first identifying the dominant biological sys-
tems represented in a topic and then drilling down to the more specific contributing
pheotypes.
In contrast, the radial hierarchies were used in a bottom-up manner dur-
ing the characterization session.
As the pediatrician focused on detailed phenotypes,
the machine learning researcher used the hierarchies to verify whether the trends
of
the specific phenotypes that the pediatrician identified were mirrored in related
specific phenotypes or in more general
phenotypes.
This verification process proved
crucial to contextualize the topic characterizations.
The timeline charts were reported most useful to compare the specific age inter-
vals where a phenotype dominated,
by looking at the distribution of
probabilities
between topics,
and to verify the ages with the most probability mass.
This helped
to differentiate topics that captured observations of disease symptoms at an earlier or
later age.
Although the representative age interval
measure provided a coarse indi-
cation of the age, the timeline charts were critical in verifying the actual distribution
Chapter 6.
PhenoLines
130
and magnitude of the probability.
The machine learning researcher commented this
workflow was efficient when identifying phenotypes for further investigation.
When
applying the representative age interval
to the radial
hierarchies,
judgements could
be made regarding whether related phenotypes presented at similar age intervals, or
whether there was a discrepancy.
Two novel ad hoc usages of the scatterplots were observed.
First, the scatterplots
were preferred by both the machine learning and pediatrician to compare the maxi-
mum probability of phenotypes.
By encoding maximum probability along the vertical
axis they could accurately and simultaneously compare phenotype probabilities, not
only within topics,
but also across the topics.
Second,
the scatterplots were used
to perform A/B comparisons,
by selecting a phenotype and then quickly hovering
over other phenotypes to flip the information displayed in the Details Panel.
These
observations can inform improvements to the interface to address these analysis use
cases.
Relevance Score
The pediatrician found the relevance score was effective at filtering less relevant phe-
notypes, but noted there were several errors.
Further investigation revealed these oc-
curred due to biases present in the expected phenotype probability.
As the expected
probability derived from the HPO is biased toward rare genetic diseases,
the anno-
tations have a higher prevalence of
neurological
and developmental
abnormalities,
(e.g.,
developmental
delay,
intellectual
disability,
seizures).
As these abnormalities
are overrepresented in the expected probability,
the associated modeled phenotypes
received lower relevance scores.
These abnormalities are highly relevant to ASD and
uncommon in most non-genetic conditions.
That said, she noted that automatically
quantifying the relevance of a phenotype is highly desirable, since it can help identify
meaningful phenotypes regardless of their modeled probability.
Thus our approach is
promising, but requires a curated expected probability to avoid misleading interpre-
tations.
6.8
Discussion and Limitations
We addressed the top three levels of the Nested Model for Design and Validation (Mun-
zner 2009).
The visual encodings were justified using collaborative design,
and vali-
Chapter 6.
PhenoLines
131
dated, along with the data abstraction, via evaluations with machine learning experts.
The problem domain characterization was validated through observation of a disease
subtype characterization session involving a machine learning researcher and a med-
ical expert.
Phenotype hierarchies.
The machine learning researchers unanimously lauded
the representation of phenotypes within the hierarchical taxonomy of the HPO. The
aggregation of
phenotype probabilities helped identify the dominant biological
sys-
tems in each topic and acted as a starting point for deeper investigation.
Although the
pediatrician reported some of the HPO terminology was unfamiliar (when compared
with ICD terms),
the radial
hierarchy enabled discussions about biological
systems
that are not available as CUI codes.
The hierarchical
representation also promoted
investigations of specific phenotype divergences between topics with similar dominant
biological systems, which was not possible with previous analysis approaches.
Temporal
evolution of phenotype probabilities.
The timeline charts were
used extensively by both the machine learning experts and the medical expert to in-
vestigate the evolution of specific phenotype probabilities.
Timeline charts were used
most frequently to confirm patterns observed in the radial
hierarchies,
and explore
the implications by comparing the timeline charts of a specific phenotype across the
topics.
This division of hierarchical and temporal perspectives aligned well with the
workflow of experts in both domains.
Temporal
summary measures.
The machine learning experts reported the
maximum probability and relevance score percentiles aligned with the goals of iden-
tifying dominant phenotypes in each topic and intuiting about their relevance to the
disease.
The trend slope and representative age interval
provided meaningful
infor-
mation when investigations focused on biological
systems where probabilities were
aggregated.
However, when investigating specific phenotypes, the modeled probabili-
ties were often isolated to shorter time intervals, so the trend slope over the entire age
interval
did not summarize these distributions well.
In response,
we introduced an
additional option to calculate the trend slope for only the representative age interval.
There would be value in further efforts to develop a metric that accurately identifies
the time interval of the largest probability mass.
Facilitating comparisons.
The visualizations supported a variety of
compar-
isons of
the topics:
hierarchical
relationships within topics,
temporal
progression
across topics,
and correlations between summary measures.
The ability to highlight
Chapter 6.
PhenoLines
132
and select phenotypes in any view was greatly appreciated, as it enabled for the iso-
lation of specific terms to compare and provided a means of ad hoc A/B comparisons
between phenotypes.
An additional feature that was requested was the ability to hide
phenotypes that are known to be less relevant.
Expected Phenotype Probability.
We identified shortcomings of
the rele-
vance score due to the expected probability based on the HPO. Developing expected
probability is challenging,
because finding a representative dataset to model
is dif-
ficult (Kohane et al.
2006).
Patients who frequently visit hospitals have more data
entered, leading to an over-representation of individuals with pre-existing conditions.
Hospitals also have different specializations and tend to see patients with associ-
ated conditions.
Data from an institution may thus also have a bias toward pa-
tients with certain types of conditions (e.g., gastrointestinal), which could lead to an
over-representation of these phenotypes.
In any case,
the approach of calculating a
relevance score based on an expected probability is promising,
with the caveat that
expected probabilities must be carefully curated and validated to ensure that they do
not mislead the investigators.
This is interesting and highly important future work
to make it easier for medical
experts to reason about the complex output of
topic
models.
Coupling to clinical
data.
The pediatrician suggested PhenoLines could pro-
vide a starting point for clinical
investigations,
based on topics that characterize
interesting disease processes or patient cohorts.
Providing a tighter coupling to the
underlying EHR data could extend the clinical utility of PhenoLines.
The phenotype
terminology used in the HPO is less familiar to medical
experts than ICD code de-
scriptions,
so integrating term mappings between other medical
terminologies could
improve the interpretability of the visualizations.
6.9
Conclusion and Future Work
This work introduced PhenoLines,
an interactive visual analysis tool to support the
interpretation of disease subtypes via topic models to facilitate model
characteriza-
tion and optimization.
We described a data transformation workflow to produce a
flexible graph-based data abstraction that can be converted into a variety of visual
representations that provide complementary perspectives on topics and the pheno-
types they model.
We demonstrated the benefits of both hierarchical
and temporal
Chapter 6.
PhenoLines
133
representations for the analysis of disease subtypes.
Results of initial evaluations sug-
gest that PhenoLines aids interpretation of the quality of topic models by machine
learning researchers,
and also enables fluid collaborative inspection of topic models
with medical experts.
Improving our understanding of how phenotypes manifest and
evolve over time for a particular disease can help differentiate disease subtypes,
im-
proving diagnosis and prognosis, and enabling for more effective personalized care to
address the individual needs of patients.
Feedback suggested that PhenoLines could act as a gateway to the underlying
EHR data.
For example,
topics identified as characterizing cases of
misdiagnosis
could be used to extract patient cohorts for further clinical investigation.
Extending
the clinical utility of PhenoLines is an interesting direction for future research.
While the relevance score is a promising approach to simplify the hierarchical
topology through filtering and compression,
further research is necessary to develop
and validate representative expected phenotype probabilities to improve automatic
relevance computation.
In our evaluations, the topic models were limited to seven topics, but future work
could address interactive adjustment of
the number of
topics.
Methods that auto-
matically derive the optimal
number of topics may be applicable (e.g.,
Hierarchical
Dirichlet Process (Teh et al. 2005)).
Although our work investigated disease characterization via topic models,
the
data transformation workflow is general
and could be applied to other ontologies,
and for data with or without a temporal
component.
Just as the ontology-based
data abstraction provided common ground for discussions between machine learning
researchers and medical experts, such abstractions could help bridge the knowledge-
gap between collaborating visualization researchers and domain experts.
A graph-
based abstraction is familiar in the visualization domain, while the terminology aligns
to the mental
models of
domain experts.
As we demonstrated,
the graph-based
data abstraction can be flexibly transformed into a variety of visual representations.
Further, our approach to topology simplification could be adapted to general graphs
or trees when expected measures of data are available.
Chapter 6.
PhenoLines
134
6.10
Acknowledgements
This work was partially funded by Genome Canada and Ontario Genomics through
a Bioinformatics/Computational
Biology grant to Dr.
Brudno.
The authors thank
Michelle Annett, Aryan Arbabi, Rafael Veras, Bruno De Araujo, John Hancock, the
domain experts, as well as the anonymous reviewers for their thoughtful suggestions.
Chapter 7
Ontology-Based Analytical
Abstractions for Visualization
The case studies demonstrated that visualizing ontology-annotated data using ter-
minological ontologies can benefit domain-specific tasks by presenting data within a
semantic context, and thus support sensemaking activities.
In this section, I present
a unification of the approaches developed in the case studies that can be applied to
any computational ontology meeting the following requirements:
1.
Ontology specifies hierarchical relationships between entities, such as subsump-
tion (“is-a”) or meronymy (“part-of”) relationships.
2.
Ontology can be represented as a directed-acyclic graph.
3.
A measure of relevance can be calculated for each entity in the ontology,
such
as term information content or term frequency.
Ontology-based Analytical
Abstractions for Visualization (OAAV) is a unified
approach that leverages the structural relationships specified by a terminological on-
tology to help visualize ontology-annotated data within the semantic context given
by the ontology.
This approach enables the visual encoding and spatial organization
methods presented in the three case studies to be combined.
Different combinations
of
topology simplification methods may be selected,
as required by a domain ex-
pert’s analysis goals.
The unified representation of
data is amenable to a variety
of visualization techniques,
and the methods proposed in the three case studies are
summarized.
135
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization136
7.1
Ontology Specification
Ontologies can be specified in a variety of
mark-up languages (e.g.,
OBO,
OWL).
Regardless of the specification format,
the relationships of interest can be extracted
in the form of an edge-list (e.g., subsumption relationships) (Fig. 7.1).
To use a new ontology with OAAV,
a parser must be implemented based on
the specification format used to define the ontology.
OBO and edge-lists formats
are currently supported,
but support for additional
formats can be added.
OAAV
uses the ontology specification to instantiate an internal representation as a directed-
acyclic graph,
with ontology entities represented by nodes,
and their hierarchical
relationships as edges (Fig. 7.2).
The ontology may also include additional attributes related to each entity, or ad-
ditional attributes may be calculated for entities of the ontology, such as a measure of
entity relevance (Fig. 7.3).
For example, in PhenoBlocks (Chapter 4) and PhenoStacks
(Chapter 5), an information content score was calculated based on the prevalence of
phenotype associated with different diseases.
In PhenoLines (Chapter 6), a frequency
score was calculated based on the expected frequency of phenotype occurrence across
diseases.
These ontology attributes may be linked to entities of the ontology and are
available for later computation.
They are calculated at the ontology level,
and thus
shared across all abstract data representations derived from the ontology.
In the case
studies,
such attributes were used to compute the relative relevance of entities with
respect to the analysis task.
Figure 7.1:
Example ontology specification as an edge list.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization137
Figure 7.2:
Illustration of example ontology instantiated as a directed-acyclic graph.
Figure 7.3:
Additional
attributes may be provided for ontology entities,
such as an
information content score or a frequency score.
In the case studies, these scores were
used to denote a measure of entity relevance.
7.2
Data Transformation
Data is annotated to the ontology by referencing entity IDs.
This enables data at-
tributes to be linked to specific entities within the ontology.
The attributes can be
any form of
data collected,
such as categorical
(e.g.,
PhenoBlocks,
PhenoLines) or
numerical
(e.g.,
PhenoLines).
The input data can be input in a flat tabular format
where each entity and attributes are defined in a row (Fig. 7.4).
The annotated data is parsed by OAAV into graph representations based on the
topology of the ontology.
Only the entities relevant to the data record are instantiated,
in a process that generates a reachability graph from each entity to the root node of
the ontology.
Thus each data record is represented by a subgraph of the ontology.
All
entities on the path to the root are instantiated,
based on the relationships implied
by the ontology.
(Fig. 7.5)
In addition to the inference of
topological
structure,
attributes for entities for
which no annotated data exists can be inferred.
A mapping function is defined for a
given dataset to define how annotated data attributes should be applied to new enti-
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization138
Figure 7.4:
Data input into OAAV is in a tabular format where attributes are de-
fined for ontology entity IDs.
Observations (OBS) may be categorical, numerical, or
sequences (e.g., time series) or sets of multiple observations.
Figure 7.5:
Each row of
a data record are transformed into a graph representation
using the ontology as a template.
Entities described by data points are shown with
a heavy stroke, and entities inferred based on ontology relationships a thin stroke.
ties, and how they should be merged.
Due to the possibility of multiple-inheritance,
methods to merge attributes from multiple children must be considered and clearly
defined.
For example,
a min or max function may be applied,
or the average taken,
or represented as a set of all categorical information (Fig. 7.6).
In PhenoBlocks and PhenoStacks, data attributes implied presence (true) or ab-
sence (false),
and data was merged using logical
XOR functions.
In PhenoLines,
the data involved probabilities,
and so a probabilistic sum was applied to aggre-
gate the probabilities across all
children.
Finally,
a union of
topologies of
all
data
records is computed to facilitate comparisons using a common topological
represen-
tation (Fig. 7.7).
Taking these steps together, OAAV transforms all data records into a single graph-
based abstract data representation that uses the unified topology and merges all
attributes and infers attributes for all other entities.
The result is a multi-dimensional
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization139
graph where all data records and all entities are represented (Fig 7.8).
Each data record can be indexed individually,
or additional
computations can
be carried out across all
data records for each entity in the ontology.
This data
representation is flexible and supports a wide variety of topology simplification and
visual comparison approaches as will now be described.
Figure 7.6:
Using subsumption relationships of the ontology, attributes of annotated
data are inferred for entities where no annotated data exists.
A function to transfer
values must be defined, and handle merging attributes from multiple children.
Figure 7.7:
A union of all record representations is created to facilitate comparisons
using a common topology.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization140
Figure 7.8:
OAAV merges all
data record topologies and attributes into a single
graph-based abstract data representation.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization141
7.3
Topology Simplification
The unified representation of the data as an ontology-based abstract representation
facilitates a variety of topology simplification methods to be applied to aid visualiza-
tion.
A fundamental
issue when visualizing ontology data is the complexity of
the
ontology.
Even when viewing data as subgraphs of the ontology, this complexity can
make the data difficult to understand.
OAAV currently provides two approaches to
simplify the topology of the ontology for visualization:
eliminating redundancies and
controlling level-of-detail.
Although these methods require more rigorous evaluation
for robustness and correctness,
they demonstrate the potential
application of
com-
putational
approaches supported by the ontology to support sensemaking through
simplified visualizations.
Since ontologies often support multiple-inheritance in their relationships,
hierar-
chical visualizations can become complex and confusing because strict conversion to
hierarchy results in the duplication of entities with multiple parents.
By leveraging
the relevance score of
each entity,
a single path from each leaf
to the root can be
calculated using a greedy algorithm to determine the path of highest relevance from
each leaf to the root.
This simplification is only possible when performed directly on
the graph representation, prior to conversion into a hierarchical form (Fig 7.9).
The
result is a simplified graph without multiple-inheritance which lends itself to direct
transformation into hierarchy for visualization.
This can be seen as an approach of
simplifying the breadth of the topology, as demonstrated in PhenoStacks (Chapter 5).
However, the resulting graphs without multiple-inheritance may still be topologi-
Figure 7.9:
Multiple-inheritance can lead to duplication of
nodes when the unified
representation is converted into a strict hierarchy.
Redundancy elimination uses entity
relevance attributes to find the best single path from each leaf to the root.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization142
cally complex in depth.
So, in addition, methods to simplify the depth of the topology
were developed.
Depending on the user task, different goals may be desirable.
Thus,
three approaches are demonstrated in the case studies,
one of
generalization,
one
of
details,
and one of
compression.
In the generalization approach,
a graph-cut is
performed to remove more detailed nodes (Fig. 7.10).
The result is a truncated graph in terms of depth.
The decision where to make
the graph-cut is again based on the relevance measure provided by the ontology.
This
enables a non-uniform graph cut that is based on the relevance score of entities,
as
defined by the domain.
The result is that only the most important general
nodes
will be displayed in the visualization, supporting aggregated findings to be explored.
A version of
this approach was supported in PhenoLines (Chapter 6) to aggregate
entities based on the frequency of occurrence.
A second approach is to focus only on the details.
In this method,
a graph-
cut is made originating from the leaf
nodes and thus preserves the most detailed
entity data attributes.
Again,
using the entity relevance score enables for a non-
uniform graph cut that takes the semantic importance of entities into account.
The
result is a truncated graph that represents the most detailed nodes (Fig 7.11).
This
approach was demonstrated in PhenoLines when filtering nodes for display in the list
of phenotypes ranked by relevance.
Finally,
both general
and details may be of interest,
but the specifics of the in-
termediary nodes may be superfluous.
Thus,
a method of
depth compression was
developed, again using the ontology relevance measure.
In this approach, two thresh-
olds are defined,
one for a top-level
cut and one for a bottom-level
cut.
This works
to select a general node with a minimum relevance score and leaf nodes with at least
a minimum relevance score.
In this way,
detailed leaf
structure is preserved while
also showing higher-level
grouping,
but removing intermediate nodes which acts to
compress the depth of the topological structure (Fig 7.12).
In all cases, the thresholds used to define the graph-cuts may be input by the user
and modified in real-time to change the visualizations.
In this way, the user does not
need to know details of the topology, merely the significance of the relevance measure
used.
Since this measure is derived from semantics of
the domain of
the ontology,
this can help to make a very complex measure more tractable for understanding.
These approaches to redundancy elimination and level-of-detail
control
demon-
strate the power of
maintaining a unified representation of
the data based on the
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization143
Figure 7.10:
Level-of-detail
control
for generalization maintains general
nodes while
performing a graph-cut that removes specific entities.
Figure 7.11:
Level-of-detail
control
for details maintains leaf
nodes and performs a
graph-cut that removes more general entities.
Figure 7.12:
Level-of-detail
control
for topology compression maintains general
and
specific entities while removing intermediary entities.
ontology.
It enables computation of
graph-cuts based on domain-specific measures
of relevance to support interactive user control on simplifying and restructuring the
complexity of the data visualization to show the generalities or details of interest.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization144
7.4
Comparison Approaches
The unified representation of the data also enables for a variety of computations and
comparisons to occur for each entity in the ontology.
Recall that each entity has all of
the annotated data attributes associated.
Moreover, the logical relationships defined
by the ontology enable inference of attribute values for data entities for which no data
was collected.
This means a complete picture of the data across the structure of the
ontology can be computed from incomplete data,
which can help to identify higher-
level
(general) correspondences between observed data.
Three comparison methods
have been demonstrated in the case studies and are now summarized.
Pairwise comparison is possible by comparing the value of one entity data record
index to another (Fig. 7.13).
Further, these computed comparison can then be trans-
formed into a representation,
such as a strict hierarchy that can be displayed in a
variety of visualization forms, such as a radial hierarchy, or an indented list (Fig. 7.14).
Further, many-to-many comparison is possible by evaluating all of the data records
simultaneously (Fig.
7.15).
As demonstrated in PhenoStacks (Chapter 5),
the sub-
sumption relationships can be used to infer values down to the leaf nodes and then the
leaf nodes extracted and displayed in rows and columns of a matrix.
Further, heuristic
filtering of the simplified hierarchy was used to concisely group entities (Fig. 7.16).
Finally,
numeric calculations are also possible across all
of
the data records as-
sociated with each entity.
For example,
the frequency of
categorical
data can be
calculated,
or the trend of
numerical
data (Fig.
7.17).
Using this approach,
addi-
tional visualizations can then display the more detailed data at each data record such
as summary statistics (Fig. 7.18), or a timeseries or associated trend (Fig. 7.19).
These approaches only suggest some possible visualizations.
The graph-based
abstract representation is amenable to wide variety of
visualization methods.
As
demonstrated in the case studies, the same data representation was used to represent
data hierarchically,
in text lists,
in bar charts,
in line charts,
scatterplots,
and in
matrices.
This coverage is complete for the basic charts used in visualization.
Graph
abstraction is a superset whereby different traversals can yield data that can be
represented or aggregated to be represented in a variety of visualizations.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization145
Figure 7.13:
Pairwise comparisons can be explicitly encoded.
Figure 7.14:
Pairwise comparisons can be compared using hierarchical
differential
views.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization146
Figure 7.15:
Many-to-many comparisons can be encoded using subsumption inference
to align all data records at the most detailed level.
Figure 7.16:
Many-to-many comparisons can be facilitated by grouping detailed ob-
servations using higher-level categories from the ontology and displayed in a matrix.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization147
Figure 7.17:
Frequency measures derived across data records can be encoded within
the structure of the ontology.
Figure 7.18:
Observation frequencies can be visualized using explicit encoding in a
hierarchical summary chart.
Figure 7.19:
Temporal trends associated with an entity can be visualized using com-
parative line charts, while attributes of all entities compared using a scatterplot.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization148
7.5
Application to Other Data Domains
To demonstrate the potential
application of
OAAV to other domain ontologies,
I
present a proof-of-concept implementation using the Medical
Subject Headings on-
tology (MeSH) to visualize keyword trends of medical publications.
7.5.1
MeSH
The Medical Subject Headings (MeSH) ontology defines over 25,000 terms to catego-
rize and classify publications in the biomedical domain.
MeSH is applied to annotate
documents in a large document collection with entities from the ontology.
These tags
describe the associated areas of medical research presented in each medical publica-
tion.
For example,
diseases investigated,
relevant system localizations,
treatments,
and scientific methodology,
among others,
can be described using MeSH.
Similar to
the HPO,
MeSH supports meronymy relationships and multiple-inheritance terms
(Fig. 7.20).
The hierarchical
relationships in MeSH are defined as “broader than” relation-
ships, which is a fusion of subsumption (“is-a”) and meronymy (“part-of”) relation-
ships.
The 16 broadest headings of MeSH include anatomy,
diseases,
chemicals and
drugs,
methodology,
organisms,
psychiatry and psychology,
and geography,
among
others.
MEDLINE (Medical
Literature Analysis and Retrieval
System Online,
or MED-
LARS Online) is a bibliographic database of biomedical and life sciences publications
and currently includes over 23 million records of publications from over 5,600 jour-
nals (MEDLINE Fact Sheet).
The unique feature of MEDLINE is that every record
is manually annotated using MeSH terms by domain experts and reviewed for consis-
tency.
This enables queries to leverage the controlled vocabulary of MeSH to return
precise results.
Annotated publications can be queried through the PubMed web-
based API.
The structure of MeSH has been demonstrated as an approach to hierarchically
organize query results and group papers that use similar terms (Edwards & Keˇselj
2010).
Another potential usage is to use the MeSH hierarchy to analyze the frequency
of term usage across publications and over time.
Given a query result set,
binning
publications by year and then aggregating the number of publications associated with
each MeSH term can reveal temporal trends of term usage, yielding insights into how
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization149
Figure 7.20:
Example of the MeSH structure, which supports meronymy and multiple-
inheritance.
term usage evolves over time.
To my knowledge,
MeSH has not yet been applied to
the visual analysis of term frequency.
As a proof-of-concept demonstration,
OAAV was updated to use MeSH as the
source ontology, and datasets were created from MEDLINE query results.
To visually
analyze MeSH term usage over time,
approaches from PhenoLines were adopted.
Just as PhenoLines was designed to analyze the evolution of phenotype frequency in
patients, the visual representations were applicable to analyzing the evolution of term
frequency in publications.
Another feature of
PhenoLines is that it enables a measure of
phenotype im-
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization150
portance by comparing the observed frequency in patients against an expected prior
frequency in the population.
To enable this feature for MeSH, a prior measure of term
frequency across all
publications in MEDLINE was obtained from a colleague (Lar-
ivi`ere 2017-04-11).
This frequency data represented the total number of publications
associated with each MeSH term.
This frequency data was used as the entity rele-
vance score in OAAV. The intuition is that terms that appear frequently in both the
query results and in all publications are less distinctive of that query, while the terms
represented with higher frequency within the query results than in all
publications
are more likely to be distinctive of
the query (i.e.,
enriched terms).
This enables
an exploration of the enriched terms in a query result set and analyze the trends of
individual terms.
7.5.2
Example Usage Scenario
In this example usage scenario, I use an exploratory analysis scenario to demonstrate
how insights might be developed using the visualizations produced by OAAV and
further validated through additional research.
Just as the visualizations in PhenoLines were used to analyze trends in phenotype
frequency across patients,
the visualizations were adopted to analyze the trends in
keyword usage in a MEDLINE query result set.
The query used for this example
was a search for “Autistic Disorder”, which resulted in 17,998 publications that were
annotated with the term.
The result set was cropped from 1972-2016, years where at
least 100 papers were published consistently each year.
The goal
of the exploratory
analysis was to identify terms that were enriched in publications related to Autism
Spectrum Disorder (ASD) and to evaluate whether the trends could be corroborated
with experts.
The relevance measure was successful
at filtering out general
terms related to
subjects (e.g., , “Human”, “Child”, “Adolescent”), clinical methods (e.g., “Diagnosis,
Differential”), study designs (e.g., “Follow-up Studies”, “Case Control Studies”), and
general diseases (e.g., “Syndrome”), which are terms related to most diseases and less
specific to ASD.
The relevance measure also helped to highlight enriched terms that occurred with
higher frequency in the query results than in overall
medical
publications.
Of these
terms, decreasing trends were associated with MeSH terms that were related to symp-
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization151
toms accepted to be associated with ASD.
These terms included language develop-
ment,
stereotyped behaviour,
echolalia,
affective symptoms,
mutism,
among others.
These terms appeared with higher frequency in earlier years,
as the association of
these symptoms were still under investigation.
ASD was once thought to be linked to
childhood schizophrenia,
a link that has since been disproven,
and can be observed
in the decreased occurrence of
the term after 1988.
The visualization also helped
identify two notable ASD related research trends,
one related to vaccinations,
the
other to a form of treatment.
These insights were corroborated through discussions
with researchers familiar with ASD.
In what follows,
I described details of
the two
research trends that were identified using the visualization.
Vaccinations and Autism
An enriched term identified as having a strong trend was “Measles-Mumps-Rubella
Vaccine” (MMR) (Fig 7.21).
The term has existed in its present form since 1986,
when the individual
terms for “Measles Vaccine”,
“Mumps Vaccine”,
and “Rubella
Vaccine” were combined.
In the query results for “Autistic Disorder”, the term first
appeared in 1998.
The timeline showed that MMR quickly grew in interest, peaking at
8.7% of ASD related papers in 2001.
Only after 2004 did the trend start to decrease.
This observed pattern can be traced to a case of medical research fraud, which has
left a lasting on the public perception of risks associated with vaccination (Andrew
Wakefield ).
A paper was published in 1998 that suggested a link between vaccinations
and ASD,
citing MMR in particular (Wakefield et al.
1998).
This paper has since
Figure 7.21:
“Measles-Mumps-Rubella Vaccine” is a term that shows a quick rise in
interest and then decreasing trend over time, which indicates the research conducted
after fraudulent research findings were published.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization152
been retracted after the British General Medical Council found the lead author guilty
of serious misconduct (The Lancet 2010).
A series of
follow-up studies were conducted in the years following the original
publication, but none were able to replicate the original results (Andrew Wakefield ).
In 2004,
the Institute of
Medicine released a comprehensive report that favoured
rejection of
causal
associations between a range of
vaccines,
including MMR,
and
ASD (Immunization Safety Review Committee 2004).
These results have been fur-
ther corroborated through special committee review (Committee to Review Adverse
Effects of Vaccines 2012), meta-analyses (Taylor et al. 2014), and a retrospective co-
hort study of almost 100,000 children (Jain et al. 2015).
However, due to broad media
coverage of
the original
paper at the time,
the trend against vaccination continues
to grow.
In particular,
there is a continuing trend to avoid vaccination in younger
siblings of children already diagnosed with ASD (Jain et al. 2015).
Autism Treatment
Another enriched term, “Secretin” also had a strong trend (Fig. 7.22).
The term has
appeared in MeSH since 1966, but first appeared in ASD related publications in 1998,
with swift uptake to almost 6% of papers published in 2000,
then quickly declined,
dropping off completely after 2005.
A 1998 study reported a case series that showed
improvement in three children with ASD after treatment with secretin (Horvath et
al. 1998).
Subsequent research, however, has shown little evidence of the therapeutic
benefits of secretin for ASD (Esch & Carr 2004; Francis 2005).
Figure 7.22:
Early results suggested “Secretin” was an effective treatment for ASD,
but the effectiveness was later disproved.
Chapter 7.
Ontology-Based Analytical Abstractions for Visualization153
7.5.3
Discussion
Although PhenoLines was not designed specifically to analyze query result sets of
document collections, this example demonstrates that OAAV can be readily applied
to an ontology in a new data domain.
Further refinement to the visualizations would be necessary to better address the
specific task requirements associated with document collection analysis.
For example,
the trends calculated in PhenoLines should be limited to the duration of the existence
of a term, and for newer terms, the year that it was added to MeSH indicated on the
timeline.
Although it was the case for PhenoLines that only the most enriched terms were of
interest, this may not be the case for keyword analyses.
More common keywords may
also yield interesting trends that relate to methodological
approaches and capture
the changing approaches to conducting studies for ASD. Additional work is necessary
to develop interaction methods to filter and compress the hierarchy so as to identify
both enriched terms, but also those that occur with high frequency in both the query
results and over all publications.
Extending the core functionality of OAAV to MeSH was straightforward, involving
writing a file loader to parse the MeSH hierarchy.
Minor structural
differences in
MeSH revealed areas where the current implementation of
OAAV could be better
abstracted to accommodate a wider variety of ontologies.
Chapter 8
Conclusion
This dissertation has presented ontology-based analytical
abstractions for visualiza-
tion (OAAV).
Although prior
work has
proposed semantic schemas
(e.g.,
RDFS
(Brunetti
et al.
2013)) as an approach to transform unstructured information into
visualizations, to my knowledge the work herein represents the first systematic explo-
ration methods to support visualizations of annotated data through the application
of a terminological ontology.
Prior efforts have not investigated the use of ontological
structure to facilitate computation of visual encodings for comparison, nor methods to
address the visual organization challenges associated with complex ontology topology.
To address the primary research objective, the development of OAAV was guided
by the insights garnered from three case studies of
analysis tasks in the medical
domain.
These collaborative design efforts yielded three prototype visualization tools,
PhenoBlocks,
PhenoStacks,
and PhenoLines,
that validated the utility of ontology-
based visualizations to support the sensemaking activities of domain experts.
This grounded and incremental
process resulted the unified approach described
by OAAV. Of course, there is more work to be done to further improve and refine the
methods I have presented,
as well as develop new analysis approaches using OAAV.
My hope is that this work demonstrates the value of
ontology-based data repre-
sentations for visualization and provides a foundation for future investigations into
this promising approach to contextualizing visualizations for domain-specific analysis
tasks.
In this final
chapter,
I summarize the contributions of
this thesis work,
discuss
assumptions and limitations, describe opportunities for future research, and conclude
with reflections.
154
Chapter 8.
Conclusion
155
8.1
Summary
The evaluation of
prototype visualizations with domain experts helped to identify
features that would be broadly applicable to visualization of data using ontologies.
These insights helped to identify shortcomings that were addressed in subsequent case
studies, and grounded development in real-world needs.
PhenoBlocks
(Chapter
4)
provided the starting point
for
the development
of
ontology-based visualizations.
The goal during this project was to develop a unified
representation of ontology-annotated data records that leveraged ontology structure.
The evaluations with domain experts revealed that the ontology provided meaning-
ful context for the data and facilitated sensemaking.
Feedback from domain experts
suggested that the duplication of
nodes due to multiple-inheritance was confusing
and the visualized structure was very complex (e.g.,
too dense,
too much detail).
It
was clear that methods of simplifying the topology would be needed to improve the
readability of ontology-based visualizations.
The issue of multiple inheritance was addressed during the development of PhenoS-
tacks (Chapter 5).
An algorithm was developed to eliminate multiple-inheritance by
selecting a single path to the root from every leaf node in the hierarchy.
The “best”
path was distinguished by using a measure of
node relevance calculated using the
ontology.
This approach simplified the breadth of the ontology structure by remov-
ing redundant branches.
Based on the evaluations, the resulting simplified structure
aligned well to the mental models of the domain experts, and resulted in classifications
that were meaningful
to their data.
Similar to the feedback from PhenoBlocks,
the
complexity and detail of the structure was identified as a shortcoming.
The domain
experts had varying specializations and each wanted a different detail
in the visual-
izations.
This helped to pinpoint that not only was complexity reduction important,
but that it needed to be interactively controlled so that domain experts could adjust
the views as their tasks required.
The development of PhenoLines (Chapter 6) addressed the issue of structural com-
plexity.
An algorithm was developed to compress branches in the hierarchy that were
less relevant to the task, while maintaining those with high relevance to the task.
The
resulting compression was non-uniform over the depth of the hierarchy,
and yielded
a visualization with more detail around relevant nodes.
Relevance was calculated by
comparing a measure of
expected frequency against the observed frequency in the
Chapter 8.
Conclusion
156
data for each node.
A threshold to specify minimum relevance could be interactively
specified.
This approach simplified the depth of the ontology structure by compress-
ing less relevant portions of the hierarchy.
Feedback during evaluations revealed that
level-of-detail control was successful in simplifying hierarchy depth, while still main-
taining meaningful organizations of the data.
The ability to adjust the level-of-detail
proved particularly useful when experts with different backgrounds used the tool col-
laboratively, by starting with a highly compressed version to develop an overview of
the data and then expanding details as required for deeper investigations.
The contributions of
this dissertation addressed three levels of
generalizability:
analysis-specific, task-oriented, and data representation via ontology.
First, each case
study yielded domain-
and analysis-specific contributions.
In each case study,
the
analysis tasks of domain experts were systematically characterized from a visualiza-
tion perspective using the Multi-level
Task Typology (Brehmer & Munzner 2013).
PhenoBlocks addressed the analysis challenges of clinical differential diagnosis of rare
genetic diseases, PhenoStacks cross-sectional cohort analysis of rare genetic diseases,
and PhenoLines genetic disease subtyping via topic model analysis.
These character-
izations can inform future visualization research into these domains and analyses.
Second,
task-oriented contributions relate to the challenges of visual
comparison
of hierarchical data.
Each case study considered comparisons across increasing num-
bers of data records:
pairwise (one-to-one),
cohorts (many-to-many),
and temporal
(many-to-many + time series) comparisons.
The visual
encoding approaches pre-
sented are more generally applicable to similar comparison tasks in other domains
where comparisons are required between multiple hierarchical data records.
Third,
representation-oriented contributions of relate to the topology simplifica-
tion approaches demonstrated for visual organization in OAAV. The critical challenge
of unifying multiple records of annotated data into a single ontology-based represen-
tation was developed in PhenoBlocks.
Methods to leverage ontology-base represen-
tation to manage hierarchy breadth through the elimination of redundancies due to
multiple-inheritance were explored in PhenoStacks.
Level-of-detail
control
that en-
abled the depth of
hierarchies to be interactively adjusted based on data-oriented
measures of importance were developed in PhenoLines.
These methods that address
the topological
complexity of ontologies to facilitate data organization and improve
readability of visualizations that rely on ontologies are broadly applicable to a variety
of domains (e.g., biomedical informatics, information sciences).
Chapter 8.
Conclusion
157
8.2
Limitations
The case studies focused on the biomedical domain and the Human Phenotype On-
tology (HPO). While this ontology is representative of the terminological ontologies
found in this domain, it may not be the case that all ontologies share the properties
required to accommodate the methods proposed in this dissertation.
From a spec-
ification standpoint,
an ontology must formalize hierarchical
relationships between
entities (e.g.,
subsumption,
meronymy) and be representable as a directed-acyclic
graph.
The algorithmic approaches to redundancy elimination and level-of-detail control
rely on a measure of relevance.
The information content score and expected frequency
measure were derived from annotated data sources external
to the data sets being
analyzed by the domain experts.
Although such measures could be calculated for any
terminological ontology, the difficulty lies in the availability of globally representative
data.
For these techniques to be applied in other domains,
a measure of
relevance
pertinent to the data in the domain would need to be derived.
For example,
alter-
native measures of relevance may be derived based on models or statistics over the
data.
Ontology-annotated data is not always available.
In order to visualize data us-
ing an ontology,
annotations must be created.
This can be a challenging task.
The
data used in PhenoBlocks was already annotated to the HPO, which made it a good
starting point for my case study work.
However,
in PhenoStacks and PhenoLines,
considerable effort was necessary to annotate data with entities from the HPO.
In
PhenoStacks, the data was largely unstructured text; collected through paper-based
form or extracted from patient records.
At the time, manual annotation was necessary
to convert the data into a usable format.
This involved close collaboration between
myself and domain experts to disambiguate terminology and find appropriate terms
in the HPO. In PhenoLines, the source data was annotated to a different terminology
(ICD). Annotation to the HPO was completed using a combination of mapping from
the UMLS Metathesaurus and the application of an experimental
machine learning
translator.
The automatic results provided a strong starting point,
but the annota-
tions required manual
review to confirm correctness.
Producing annotated data is
not an insurmountable problem,
but may be a limiting factor in the application of
OAAV.
Chapter 8.
Conclusion
158
8.3
Reflections
When I started working with domain experts in the medical domain, my knowledge
of biology,
diseases,
and phenotypes was elementary.
A certain level
of domain un-
derstanding is required to engage in successful collaborations (Sedlmair et al. 2012).
Taking on the role of visualization designer in the case studies,
the Human Pheno-
type Ontology played a large role in helping me to learn the terminology and expand
my understanding of
how concepts in the domain related to each other.
Since the
ontology is an externalization of the mental models of the domain experts, I was able
to leverage it as a resource to improve my own understanding and facilitate discus-
sions with domain experts.
The results of
the case studies provided evidence that
the ontological structure was beneficial to support domain experts in making sense of
their data.
At the same time, it was a tremendous resource during the development
of
visualizations.
Through interviews,
I was able to extract an expectation about
the kinds of
patterns I should be seeing in the data.
This guided me during early
development and testing,
and also enabled me to ask deeper questions when I dis-
covered new patterns or unexpected relationships — were these the result of
bugs
or did they make sense given the data.
The ontology thus also provided a common
ground between myself and the domain experts.
A similar interaction was observed
between topic modelling and disease experts in PhenoLines, where the common visual
representation of the ontology facilitated and guided their discussions.
Ontologies in the biomedical domain develop as need requires,
which has been a
point of criticism.
During my case studies, I encountered situations where the qual-
ity of specification did not meet the needs of the collaborating domain experts.
For
example, while developing PhenoStacks, gastrointestinal phenotypes were underspec-
ified and hindered my ability to annotate data provided by IBD researchers.
The
detail
across gastrointestinal
features were inconsistent (e.g.,
inflammation was not
associated with all localizations) and the logical structure was confusing to my collab-
orators (e.g.,
‘esophagus” was categorized under “abdominal
cavity” because it was
part of the digestive tract).
The collaboration helped identify areas where the HPO
could be improved, and were subsequently submitted as bug reports and feature re-
quests.
In recent versions of the HPO, these issues are starting to be addressed.
The
“abdominal
cavity” term has been replaced by “digestive system”.
Since ontologies
are ongoing efforts,
while they may not meet immediate needs,
it is only through
Chapter 8.
Conclusion
159
their use on a variety of
different analysis problems and datasets that they can be
improved.
Although this example can be seen as a shortcoming of using ontologies,
it also highlights the benefits of abstracting the data representation from the visual-
ization.
The HPO may have been inadequate at the time,
but as the HPO evolves,
no changes need to be made to PhenoStacks.
By simply updating the ontology to the
latest version, the representational issues can be immediately resolved.
With an eye on the future,
I believe that the application of
ontology will
con-
tinue to evolve as machine learning is embraced across domains.
By virtue of
be-
ing both human- and machine-readable,
ontologies provide a powerful
approach to
knowledge representation that could facilitate the interpretation of
machine learn-
ing algorithms—providing common ground between human and machine.
Moreover,
machine learning could be applied to automate data-driven approaches to ontology
specification.
Visualization research often promotes the development of novel and generalizable
visual representations of data.
Through my experience with case studies, these goals
may be at odds with the practical
utility of these advances to non-visualization ex-
perts.
Even if novel visual representations are shown to be more efficient for a given
task, the time required to learn how to use the visualization can be a barrier to adop-
tion by domain experts.
This observation applies to both novel
visual
encodings as
well
as novel
interaction methods.
Domain experts may not have the motivation to
develop the mental model required to interpret or interact with these tools.
Through
my experiences,
I believe that in these situations,
there is benefit to using simpler,
well-known visual representations, even if they are less efficient.
PhenoBlocks used space-efficient radial
hierarchies to explicitly encode compar-
isons.
Although well
understood in the visualization domain,
these implicit hierar-
chies were difficult for domain experts to visually parse.
They were more familiar with
explicit hierarchies (i.e.,
phylograms).
Learning from this,
I surveyed the visualiza-
tions used by domain experts prior to designing PhenoStacks.
This lead me to use a
matrix with adjacent explicit hierarchy that resembled the visual organization of the
familiar “gene heatmap”.
This visualization was much easier for the domain experts
to interpret.
When evaluating PhenoLines, I found that radial hierarchies were easily
interpreted by the topic modeller (computer scientist), but that the disease specialist
(medical
expert) preferred scatterplots and line charts.
Providing multiple simple
visualizations,
each expert was able to use those that were easiest to interpret,
and
Chapter 8.
Conclusion
160
integrate the different perspectives through discussion.
This is not to say that novel
visual
representations are not useful,
but rather to
highlight that the background and expertise of
the intended users is an important
consideration.
There is a practical
benefit to using simple visualizations to commu-
nicate data to non-visualization experts.
However,
to accommodate this approach,
non-trivial work must be done in the backend.
In OAAV, I demonstrated that com-
plex data representations can be used to generate simple goal-oriented visualizations.
8.4
Impact of Prototypes
Demonstrations of each prototype are publicly available.
The prototypes and OAAV
are available as open source projects on GitHub through the GPL-3.0 License:
•
PhenoBlocks
http://www.phenoblocks.org
http://www.github.com/mikeglueck/phenoblocks
•
PhenoStacks:
http://www.phenostacks.org
http://www.github.com/mikeglueck/phenostacks
•
PhenoLines:
http://www.phenolines.org
http://www.github.com/mikeglueck/phenolines
•
OAAV:
http://www.github.com/mikeglueck/oaav
PhenoBlocks and PhenoStacks were deployed for longer term use on several med-
ical research projects to aid in the analysis of data.
The application of the tools and
outcomes of these deployments are described in this section.
8.4.1
Congenital Muscular Dystrophy
PhenoStacks continued to be used by researchers who were investigating a cohort
of Congenital
Muscular Dystrophy patients.
PhenoStacks was used to identify and
summarize patterns of phenotype co-occurrence across patients,
including the most
Chapter 8.
Conclusion
161
frequent phenotypes with diagnostic significance and demonstrate possible test results
that could be used to identify the severity of
the presentation of
the disease.
The
results of
these investigations resulted in an accepted poster at the Muscle Study
Group Annual
Conference (Muscle Study Group).
My collaborators are currently
working towards a full-length paper version of the results.
8.4.2
Myotubular Myopathy
PhenoStacks played a role in the validation and evaluation of a cohort of Myotubular
Myopathy patients.
The original data collection had issues of consistency, detail, and
ambiguity of clinical observations.
PhenoStacks served to help identify data mapping
issues and guided data refinement and validation processes.
For example,
patients
where clinical
observations were either missing,
not detailed enough,
or ambiguous
were clarified.
The tool also provided an overview that supported validation of data
transcription.
The finalized dataset was then investigated using PhenoStacks to sum-
marize the frequency of
key phenotypes associated with the disease and compare
results to previous work.
Two visualizations were produced, one to summarize phys-
ical examination findings, and the other to summarize patient reported phenotypes.
PhenoStacks was also used to create figures for the paper, and an interactive version
of
the data has been made available as supplemental
material.
The resulting work
has been accepted for publication in Neurology (Amburgey et al. 2017).
8.4.3
Nemaline Myopathy
Based on positive experiences working on the Myotubular Myopathy cohort, my col-
laborators asked me to advise on the design data collection protocols that improved
the consistency of data collection and took advantage of the HPO.
The data collec-
tion protocol
was used at a patient workshop organized by A Foundation Building
Strength in White Plains,
NY,
in June 2016 to collect both patient reported phe-
notypes and conduct physical
examinations.
I am currently collaborating with the
researchers to translate quantitative physical exam results to phenotype terms from
the HPO.
PhenoBlocks and PhenoStacks will
be extended to help visualize the re-
sulting data.
PhenoStacks will be used to summarize phenotype frequency within the
cohort,
and PhenoBlocks will be used to compare individual patients to a canonical
representation of disease subtypes.
I expect that the combination of these tools will
Chapter 8.
Conclusion
162
help provide both an overview of phenotype variation and investigate the details of
those variations for specific patients.
8.5
Future Research
I have demonstrated the application of OAAV to MeSH,
but additional
work is re-
quired to further explore the generalizability of the methods proposed in this disser-
tation.
The approaches developed are but one approach to leveraging ontologies for
the purposes of visualization.
The proposed methods of topology simplification have
been qualitatively evaluated in the context of specific domain tasks, but more rigor-
ous study is necessary to validate the algorithms by evaluating algorithm correctness,
understanding limitations and edge cases, as well as addressing scalability.
These are
all
part of the fourth level
of the Nested Model
of Design and Validation (Munzner
2009) that was outside the scope of the case studies.
There are a wealth of ontologies in the biomedical
domain which could be used
to this end (e.g.,
Gene Ontology,
Mouse Phenotype Ontology).
Investigating gen-
eralizability will
require continued in-depth study and collaborations with domain
experts.
Each subdomain comes with new problems,
and requires a user-centred
approach to create contextualized visualizations that address the needs of each do-
main.
By tackling specific analysis challenges in new domains, the generalizability of
OAAV can be validated and extended to meet the needs of a wider variety of analysis
tasks.
Through continued collaborations with domain experts,
future improvements
to OAAV will include support for a wider variety of data types and data structures, as
well as scalability.
Moreover, as new analysis problems are addressed, novel methods
of data aggregation, summarization, and relevance score metrics will be developed.
In
this way, the approaches proposed in OAAV will continue to be extended, validated,
and generalized.
Working closely with medical
researchers revealed that a key barrier to the use
of
ontologies in practice remains the difficulties of
annotating collected data with
entities from an ontology.
An effective approach so far has been to improve the
data collection protocols such that these mappings are clearly defined before data
collection.
By referencing the structure of the ontology during this phase,
potential
ambiguities in data collection protocols have been identified before data collection
begins.
However, this remains a tedious and manual process.
Research into creating
Chapter 8.
Conclusion
163
tools to help design data collection protocols that help automate mapping to ontology
entities, and include logic to map quantitative exam results to one or more phenotype
terms, would go a long way to both improve the quality of collected data, ability to
visualize the data, and further to extend data analysis through interoperability with
other datasets.
Another promising direction is the application of machine learning approaches to
help extract phenotype terms from unstructured text, such as medical records.
Ma-
chine learning could help automate this process in a data-driven manner, through rec-
ommendations of associations between data and ontology entities (i.e., term names),
or even automatically derived entity mappings from quantitative data (e.g., severity
measures).
An experimental algorithm was used in PhenoLines and its use with a real-
world dataset provided useful feedback to improve the algorithm.
These approaches
raise a new research question:
how do we build trust in an automated process?
I
want to explore how OAAV can be applied to help debug and explain such machine
learning algorithms.
For example,
imagine a neural
network that classifies data,
by
linking individual neurons to the associated ontology entities, the internal process of
finding and aggregating recommendations could be visualized within the context of
the ontology.
The end result will improve semi-automated and automated annotation
through visual assurances that build trust in machine learning approaches.
Applying
machine learning in tandem with visualization to real-world datasets is a powerful
avenue to help validate and improve the robustness of automatic methods,
while at
the same time contributing to the research outcomes of visualization researchers and
medical researchers, alike.
By using the HPO in the design of visualizations, the case studies provided mean-
ingful
feedback regarding the logical
consistency and structure of
the HPO.
This
presents an opportunity where visualizations can be used as a vehicle to test and
refine ontologies by enabling domain experts to visually explore their own data in the
context of the ontologies.
By making the structure of the ontology visually explicit in
an analysis-oriented context, domain experts may help in furthering the development
of ontologies by providing feedback as a byproduct of their analyses.
The true benefits of OAAV will only be seen if domain experts can easily access
these technologies.
Making it easier to create visualizations using OAAV requires
the design of workflows and user interfaces that integrate ontology selection and data
annotation.
To this end,
seek to provide a service-oriented deployment of OAAV to
Chapter 8.
Conclusion
164
encourage use by non-visualization domain experts.
In particular, I want to address
the challenge of
merging multiple ontologies and complex datasets,
such as EHRs.
These efforts will make it easier to visualize data with OAAV, and enable the broader
application of OAAV to novel domains.
8.6
Final Word
Ontologies have been widely applied to computational analysis of ontology-annotated
data.
In this dissertation, I have demonstrated that terminological ontologies can also
be applied to organizing data in visualizations.
The case studies provided evidence
to support my hypothesis that using ontological structure to organize visualizations
can support sensemaking by aligning the visual representation with the mental model
of domain experts.
I hope that this work will
serve to motivate future explorations
into how ontologies can be used to visually represent data,
and how ontology-based
computations can leverage domain semantics to improve the visual encoding of data
in visualizations.
Bibliography
Amberger, J. S., Bocchini, C. A., Schiettecatte, F., Scott, A. F., & Hamosh, A. (2015).
OMIM. org: Online Mendelian Inheritance in Man (OMIM
R
), an online catalog of
human genes and genetic disorders. Nucleic Acids Research, 43 (D1), D789–D798.
Amburgey, K., Tsuchiya, E., de Chastonay, S., Glueck, M., Alvarez, R., Nguyen, C.-
T., Rutkowski, A., Hornyak, J. E., Beggs, A. H., & Dowling, J. J. (2017). A natural
history study of X-linked myotubular myopathy. Neurology, 89 (13), 1355–1364.
Arbabi, A. (2016-11-03). Personal communication.
Archambault,
D.,
Munzner,
T.,
& Auber,
D.
(2007).
Grouse:
Feature-Based,
Steer-
able Graph Hierarchy Exploration. In Proceedings of the Joint Eurographics-IEEE
VGTC Symposium on Visualization (EuroVis07), 67–74.
Archambault, D., Munzner, T., & Auber, D. (2008). GrouseFlocks: Steerable explo-
ration of
graph hierarchy space.
IEEE Transactions on Visualization and Com-
puter Graphics, 14 (4), 900–913.
Arndt,
T.
(2008).
Visual
software tools for bioinformatics.
Journal
of
Visual
Lan-
guages & Computing, 19 (2), 291–301.
Arocha, J. F., Patel, V. L., & Patel, Y. C. (1993). Hypothesis generation and the co-
ordination of theory and evidence in novice diagnostic reasoning. Medical Decision
Making, 13 (3), 198–211.
Ashburner, M., Ball, C. A., Blake, J. A., Botstein, D., Butler, H., Cherry, J. M., Davis,
A. P., Dolinski, K., Dwight, S. S., Eppig, J. T., et al. (2000). Gene Ontology: tool
for the unification of biology. Nature Genetics, 25 (1), 25–29.
Baynam, G., Walters, M., Claes, P., Kung, S., LeSouef, P., Dawkins, H., Bellgard, M.,
Girdea, M., Brudno, M., Robinson, P., et al. (2015). Phenotyping: targeting geno-
type’s rich cousin for diagnosis.
Journal
of
Paediatrics and Child Health,
51 (4),
381–386.
165
BIBLIOGRAPHY
166
Bertin,
J.
(1967).
Semiology of Graphics:
Diagrams,
Networks,
Maps.
University of
Wisconsin press.
Bertin, J. (1981). Graphics and Graphic Information Processing. Walter de Gruyter.
Binder,
H.,
Hopp,
L.,
Lembcke,
K.,
& Wirth,
H.
(2015).
Personalized disease phe-
notypes from massive OMICs data.
Big Data Analytics in Bioinformatics and
Healthcare, 359–378.
Blei,
D.
M.
& Lafferty,
J.
D.
(2006).
Dynamic topic models.
In Proceedings of
the
23rd International
Conference on Machine Learning. ACM, 113–120.
Blei,
D.
M.,
Ng,
A.
Y.,
& Jordan,
M.
I.
(2003).
Latent dirichlet allocation.
Journal
of Machine Learning Research, 3 (Jan), 993–1022.
Bl¨
uthgen,
N.,
Brand,
K.,
Cajavec,
B.,
Swat,
M.,
Herzel,
H.,
& Beule,
D.
(2005).
Biological profiling of gene groups utilizing Gene Ontology. Genome Informatics,
16 (1), 106–115.
Bodenreider,
O.
(2004).
The unified medical
language system (UMLS):
integrating
biomedical terminology. Nucleic Acids Research, 32 (suppl 1), D267–D270.
Borkin,
M.,
Gajos,
K.,
Peters,
A.,
Mitsouras,
D.,
Melchionna,
S.,
Rybicki,
F.,
Feld-
man, C., & Pfister, H. (2011). Evaluation of artery visualizations for heart disease
diagnosis.
IEEE Transactions on Visualization and Computer Graphics,
17 (12),
2479–2488.
Bostock, M. & Heer, J. (2009). Protovis: A graphical toolkit for visualization.
IEEE
Transactions on Visualization and Computer Graphics, 15 (6).
Bostock,
M.,
Ogievetsky,
V.,
& Heer,
J.
(2011).
D
3
data-driven documents.
IEEE
Transactions on Visualization and Computer Graphics, 17 (12), 2301–2309.
Brehmer, M. & Munzner, T. (2013). A multi-level typology of abstract visualization
tasks. IEEE Transactions on Visualization and Computer Graphics, 19 (12), 2376–
2385.
Bremm, S., Landesberger, T. von, Heß, M., Schreck, T., Weil, P., & Hamacherk, K.
(2011). Interactive visual comparison of multiple trees. In Proceedings of the IEEE
Conference on Visual
Analytics Science and Technology. IEEE, 31–40.
Breslav, S., Khan, A., & Hornbæk, K. (2014). Mimic: visual analytics of online micro-
interactions. In Proceedings of the International Working Conference on Advanced
Visual
Interfaces. ACM, 245–252.
BIBLIOGRAPHY
167
Brewer, C. A. (1994a). Color Use Guidelines for Mapping and Visualization. In Visu-
alization in Modern Cartography. Ed. by A. MacEachren & D. Taylor. Tarrytown,
NY: Elsevier Science. Chap. 7, 123–147.
Brewer, C. A. (1994b). Guidelines for Use of the Perceptual Dimensions of Color for
Mapping and Visualization. In Proceedings of the International Society for Optical
Engineering, 54–63.
Brunetti,
J.
M.,
Auer,
S.,
Garc´ıa,
R.,
Kl´ımek,
J.,
& Neˇcask`
y,
M.
(2013).
Formal
linked data visualization model.
In Proceedings of
International
Conference on
Information Integration and Web-based Applications & Services. ACM, 309.
Burkhard, R. A. (2005). Towards a framework and a model for knowledge visualiza-
tion:
Synergies between information and knowledge visualization.
In Knowledge
and Information Visualization. Springer, 238–255.
Buske, O. J., Girdea, M., Dumitriu, S., Gallinger, B., Hartley, T., Trang, H., Misyura,
A.,
Friedman,
T.,
Beaulieu,
C.,
Bone,
W.
P.,
et al.
(2015).
PhenomeCentral:
a
portal
for phenotypic and genotypic matchmaking of
patients with rare genetic
diseases. Human Mutation, 36 (10), 931–940.
Card,
S.
K.
& Mackinlay,
J.
(1997).
The structure of
the information visualization
design space. In Proceedings of the IEEE Symposium on Information Visualization.
IEEE, 92–99.
Card,
S.
K.,
Mackinlay,
J.
D.,
& Shneiderman,
B.
(1999).
Readings in Information
Visualization: Using Vision to Think. Morgan Kaufmann.
Carpendale, S., Chen, M., Evanko, D., Gehlenborg, N., G¨
org, C., Hunter, L., Rowland,
F., Storey, M.-A., & Strobelt, H. (2014). Ontologies in biological data visualization.
IEEE Computer Graphics and Applications, 34 (2), 8–15.
Carr,
D.
B.,
Littlefield,
R.
J.,
Nicholson,
W.,
& Littlefield,
J.
(1987).
Scatterplot
matrix techniques for large N.
Journal
of
the American Statistical
Association,
82 (398), 424–436.
Cerami, E., Gao, J., Dogrusoz, U., Gross, B. E., Sumer, S. O., Aksoy, B. A., Jacobsen,
A., Byrne, C. J., Heuer, M. L., Larsson, E., et al. (2012). The cBio cancer genomics
portal:
an open platform for exploring multidimensional
cancer genomics data.
Cancer Discovery, 2 (5), 401–404.
Chang, J., Boyd-Graber, J. L., Gerrish, S., Wang, C., & Blei, D. M. (2009). Reading
tea leaves: How humans interpret topic models. In NIPS. Vol. 31, 1–9.
BIBLIOGRAPHY
168
Che,
Z.,
Kale,
D.,
Li,
W.,
Bahadori,
M.
T.,
& Liu,
Y.
(2015).
Deep computational
phenotyping. In Proceedings of the 21st ACM SIGKDD International
Conference
on Knowledge Discovery and Data Mining. ACM, 507–516.
Chen,
Y.,
Wang,
L.,
Dong,
M.,
& Hua,
J.
(2009).
Exemplar-based visualization of
large document corpus (infovis2009-1115).
IEEE Transactions on Visualization
and Computer Graphics, 15 (6).
Chi,
E.
H.
(2002).
Expressiveness of the data flow and data state models in visual-
ization systems.
In Proceedings of
the Working Conference on Advanced Visual
Interfaces. ACM, 375–378.
Chi, E. H.-h. & Riedl, J. T. (1998). An operator interaction framework for visualiza-
tion systems.
In Proceedings of
the IEEE Symposium on Information Visualiza-
tion. IEEE, 63–70.
Chittaro,
L.,
Combi,
C.,
& Trapasso,
G.
(2003).
Data mining on temporal
data:
a
visual
approach and its clinical
application to hemodialysis.
Journal
of
Visual
Languages & Computing, 14 (6), 591–620.
Chong, J. X., Buckingham, K. J., Jhangiani, S. N., Boehm, C., Sobreira, N., Smith,
J. D., Harrell, T. M., McMillin, M. J., Wiszniewski, W., Gambin, T., et al. (2015).
The genetic basis of Mendelian phenotypes: discoveries, challenges, and opportu-
nities. The American Journal
of Human Genetics, 97 (2), 199–215.
Chuang,
J.,
Manning,
C.
D.,
& Heer,
J.
(2012).
Termite:
Visualization techniques
for assessing textual
topic models.
In Proceedings of
the International
Working
Conference on Advanced Visual
Interfaces. ACM, 74–77.
Chuang, J., Gupta, S., Manning, C. D., & Heer, J. (2013). Topic Model Diagnostics:
Assessing Domain Relevance via Topical Alignment. ICML, (3), 612–620.
Clare,
A.
(2005).
Integration of
genomic and phenotypic data.
Data Analysis and
Visualization in Genomics and Proteomics, 83.
Cleveland, W. S. (1993). Visualizing Data. Hobart Press.
Cleveland,
W.
S.
& McGill,
R.
(1984).
Graphical
Perception:
Theory,
Experimenta-
tion,
and Application to the Development of Graphical
Methods.
Journal
of the
American statistical
association, 79 (387), 531–554.
Cleveland, W. S. et al. (1985). The Elements of Graphing Data. Wadsworth Advanced
Books and Software Monterey, CA.
Committee to Review Adverse Effects of
Vaccines et al.
(2012).
Adverse effects of
vaccines: evidence and causality. National Academies Press.
BIBLIOGRAPHY
169
Conesa, A., G¨
otz, S., Garc´ıa-G´
omez, J. M., Terol, J., Tal´
on, M., & Robles, M. (2005).
Blast2GO: a universal tool for annotation, visualization and analysis in functional
genomics research. Bioinformatics, 21 (18), 3674–3676.
Cui,
W.,
Liu,
S.,
Tan,
L.,
Shi,
C.,
Song,
Y.,
Gao,
Z.,
Qu,
H.,
& Tong,
X.
(2011).
Textflow:
Towards better understanding of evolving topics in text.
IEEE Trans-
actions on Visualization and Computer Graphics, 17 (12), 2412–2421.
Cui,
W.,
Liu,
S.,
Wu,
Z.,
& Wei,
H.
(2014).
How Hierarchical
Topics
Evolve in
Large Text Corpora. IEEE Transactions on Visualization and Computer Graphics,
20 (12), 2281–2290.
Decker,
S.,
Melnik,
S.,
Van Harmelen,
F.,
Fensel,
D.,
Klein,
M.,
Broekstra,
J.,
Erd-
mann, M., & Horrocks, I. (2000). The semantic web: The roles of XML and RDF.
IEEE Internet Computing, 4 (5), 63–73.
Deer, B. Andrew Wakefield - The Fraud Investigation. http://briandeer.com/mmr/
lancet-summary.htm. Accessed May 2017.
Denny,
J.
C.,
Ritchie,
M.
D.,
Basford,
M.
A.,
Pulley,
J.
M.,
Bastarache,
L.,
Brown-
Gentry,
K.,
Wang,
D.,
Masys,
D.
R.,
Roden,
D.
M.,
& Crawford,
D.
C.
(2010).
PheWAS: demonstrating the feasibility of a phenome-wide scan to discover gene–
disease associations. Bioinformatics, 26 (9), 1205–1210.
Dhombres,
F.
& Bodenreider,
O.
(2016).
Interoperability between phenotypes
in
research and healthcare terminologies—Investigating partial
mappings between
HPO and SNOMED CT. Journal
of Biomedical
Semantics, 7 (1), 3.
Doshi-Velez, F., Ge, Y., & Kohane, I. (2014). Comorbidity clusters in autism spectrum
disorders: an electronic health record time-series analysis. Pediatrics, 133 (1), e54–
e63.
Doshi-Velez,
F.,
Wallace,
B.
C.,
& Adams,
R.
(2015).
Graph-sparse LDA:
a topic
model with structured sparsity. In Proceedings of the AAAI Conference on Arti-
ficial
Intelligence.
Dou, W., Wang, X., Chang, R., & Ribarsky, W. (2011). Paralleltopics: A probabilistic
approach to exploring document collections. In Proceedings of the IEEE Confer-
ence on Visual
Analytics Science and Technology. IEEE, 231–240.
Dou,
W.,
Yu,
L.,
Wang,
X.,
Ma,
Z.,
& Ribarsky,
W.
(2013).
Hierarchicaltopics:
Vi-
sually exploring large text collections using topic hierarchies. IEEE Transactions
on Visualization and Computer Graphics, 19 (12), 2002–2011.
BIBLIOGRAPHY
170
Edwards,
P.
& Keˇselj,
V.
(2010).
MeSH represented MEDLINE query results.
In
Canadian Conference on Artificial
Intelligence. Springer, 75–86.
Elibol, H. M., Nguyen, V., Linderman, S., Johnson, M., Hashmi, A., & Doshi-Velez,
F. (2016). Cross-corpora unsupervised learning of trajectories in autism spectrum
disorders. Journal
of Machine Learning Research, 17 (133), 1–38.
Elmqvist,
N.
& Fekete,
J.-D.
(2010).
Hierarchical
aggregation for information vi-
sualization:
Overview,
techniques,
and design guidelines.
IEEE Transactions on
Visualization and Computer Graphics, 16 (3), 439–454.
Elmqvist,
N.,
Do,
T.-N.,
Goodell,
H.,
Henry,
N.,
& Fekete,
J.-D.
(2008).
ZAME:
Interactive large-scale graph visualization. In Proceedings of the IEEE Pacific Vi-
sualization Symposium. IEEE, 215–222.
Elstein, A. S., Shulman, L. S., & Sprafka, S. A. (1978). Medical Problem Solving: An
Analysis of Clinical Reasoning.
Esch, B. E. & Carr, J. E. (2004). Secretin as a treatment for autism: a review of the
evidence. Journal
of Autism and Developmental
Disorders, 34 (5), 543–556.
FORGE Canada. FORGE Canada Consortium. http://www.genomebc.ca/research-
programs/projects/health/finding-of-rare-disease-genes-in-canada-
forge-canada/. Accessed March 2015.
Fan,
J.,
Luo,
H.,
Gao,
Y.,
& Jain,
R.
(2007).
Incorporating concept ontology for
hierarchical video classification, annotation, and visualization. IEEE Transactions
on Multimedia, 9 (5), 939–957.
Fekete,
J.-D.
(2004).
The infovis toolkit.
In Proceedings of the IEEE Symposium on
Information Visualization. IEEE, 167–174.
Feltovich,
P.
J.,
Johnson,
P.
E.,
Moller,
J.
H.,
& Swanson,
D.
B.
(1984).
LCS:
The
role and development of medical
knowledge in diagnostic expertise.
Readings in
Medical
Artificial
Intelligence, 275–319.
Ferstay,
J.
A.,
Nielsen,
C.
B.,
& Munzner,
T.
(2013).
Variant view:
visualizing se-
quence variants in their gene context.
IEEE Transactions on Visualization and
Computer Graphics, 19 (12), 2546–2555.
Fiume, M., Smith, E. J., Brook, A., Strbenac, D., Turner, B., Mezlini, A. M., Robin-
son,
M.
D.,
Wodak,
S.
J.,
& Brudno,
M.
(2012).
Savant Genome Browser 2:
vi-
sualization and analysis for population-scale genomics.
Nucleic Acids Research,
40 (W1), W615–W621.
BIBLIOGRAPHY
171
Francis,
K (2005).
Autism interventions:
a critical
update.
Developmental
Medicine
& Child Neurology, 47 (07), 493–499.
Fu,
B.,
Noy,
N.
F.,
& Storey,
M.-A.
(2015).
Eye tracking the user experience–An
evaluation of ontology visualization techniques. Semantic Web, (Preprint), 1–19.
Ganesan, A., Brantley, K., Pan, S., & Chen, J. (2015). LDAExplore: Visualizing Topic
Models Generated Using Latent Dirichlet Allocation. CoRR, abs/1507.06593.
Gardner, M. J., Lutes, J., Lund, J., Hansen, J., Walker, D., Ringger, E., & Seppi, K.
(2010).
The topic browser:
An interactive tool
for browsing topic models.
In In
NIPS Workshop on Challenges of Data Visualization. Vol. 2.
Genesereth,
M.
R.
& Nilsson,
N.
J.
(1987).
Logical
Foundations of Artificial
Intelli-
gence. Morgan Kaufmann.
Gentner, D. & Stevens, A. L. (1983). Mental Models. Hillsdale, NJ: Lawrence Erlbaum
Associates.
Gilson, O., Silva, N., Grant, P. W., & Chen, M. (2008). From web data to visualization
via ontology mapping. Computer Graphics Forum, 27 (3), 959–966.
Girdea, M., Dumitriu, S., Fiume, M., Bowdin, S., Boycott, K. M., Ch´enier, S., Chi-
tayat, D., Faghfoury, H., Meyn, M. S., Ray, P. N., et al. (2013). PhenoTips: patient
phenotyping software for clinical and research use. Human Mutation, 34 (8), 1057–
1065.
Gleicher, M., Albers, D., Walker, R., Jusufi, I., Hansen, C. D., & Roberts, J. C. (2011).
Visual comparison for information visualization. Information Visualization, 10 (4),
289–309.
Global
Genes.
Global
Genes.
https://globalgenes.org/rare-diseases-facts-
statistics. Accessed October 21, 2015.
Glueck, M., Hamilton, P., Chevalier, F., Breslav, S., Khan, A., Wigdor, D., & Brudno,
M.
(2016).
PhenoBlocks:
Phenotype Comparison Visualizations.
IEEE Transac-
tions on Visualization and Computer Graphics, 22 (1), 101–110.
Glueck, M., Gvozdik, A., Chevalier, F., Khan, A., Brudno, M., & Wigdor, D. (2017).
PhenoStacks:
cross-sectional
cohort phenotype comparison visualizations.
IEEE
Transactions on Visualization and Computer Graphics, 23 (1), 191–200.
Glueck, M., Pakdaman Naeini, M., Doshi-Velez, F., Chevalier, F., Khan, A., Wigdor,
D., & Brudno, M. (2018). PhenoLines: Phenotype Comparison Visualizations for
Disease Subtyping via Topic Models.
IEEE Transactions on Visualization and
Computer Graphics, PP (99), Preprint.
BIBLIOGRAPHY
172
Graham,
M.
& Kennedy,
J.
(2007).
Exploring multiple trees through DAG repre-
sentations.
IEEE Transactions on Visualization and Computer Graphics,
13 (6),
1294–1301.
Graham, M. & Kennedy, J. (2010). A survey of multiple tree visualisation. Informa-
tion Visualization, 9 (4), 235–252.
Graham,
M.,
Kennedy,
J.
B.,
& Hand,
C.
(2000).
A comparison of
set-based and
graph-based visualisations of overlapping classification hierarchies. In Proceedings
of the Working Conference on Advanced Visual
Interfaces. ACM, 41–50.
Graham, M., Watson, M. F., & Kennedy, J. B. (2002). Novel visualisation techniques
for working with multiple,
overlapping classification hierarchies.
Taxon,
51 (2),
351–358.
Greeno,
J.
G.
(1983).
Conceptual
entities.
In Mental
Models.
Ed.
by D Gentner &
A. L. Stevens. Hillsdale, NJ: Lawrence Erlbaum Associates. Chap. 10, 227–252.
Gretarsson, B., O’donovan, J., Bostandjiev, S., H¨
ollerer, T., Asuncion, A., Newman,
D., & Smyth, P. (2012). Topicnets: Visual analysis of large text corpora with topic
modeling. ACM Transactions on Intelligent Systems and Technology, 3 (2), 23.
Groves, M., O’Rourke, P., & Alexander, H. (2003). The clinical reasoning character-
istics of diagnostic experts. Medical
Teacher, 25 (3), 308–313.
Groza,
T.,
Hunter,
J.,
& Zankl,
A.
(2013).
Mining skeletal
phenotype descriptions
from scientific literature. PloS one, 8 (2), e55656.
Gruber,
T.
R.
(1993).
A translation approach to portable ontology specifications.
Knowledge Acquisition, 5 (2), 199–220.
Gruber, T. R. (1995). Toward principles for the design of ontologies used for knowledge
sharing. International
Journal
of Human-Computer Studies, 43 (5), 907–928.
Gschwandtner,
T.,
Aigner,
W.,
Kaiser,
K.,
Miksch,
S.,
& Seyfang,
A.
(2011).
Care-
Cruiser: exploring and visualizing plans, events, and effects interactively. In Pro-
ceedings of the IEEE Pacific Visualization Symposium. IEEE, 43–50.
Guarino,
N.
et al.
(1998).
Formal
ontology and information systems.
In Proceedings
of
the International
Conference on Formal
Ontology and Information Systems,
81–97.
Guerra-G´
omez,
J.,
Pack,
M.
L.,
Plaisant,
C.,
& Shneiderman,
B.
(2013).
Visualiz-
ing change over time using dynamic hierarchies: TreeVersity2 and the StemView.
IEEE Transactions on Visualization and Computer Graphics, 19 (12), 2566–2575.
BIBLIOGRAPHY
173
Haber, R. B. & McNabb, D. A. (1990). Visualization idioms: A conceptual model for
scientific visualization systems. Visualization in Scientific Computing, 74, 93.
Harrower, M. & Brewer, C. A. (2003). ColorBrewer. org: an online tool for selecting
colour schemes for maps. The Cartographic Journal, 40 (1), 27–37.
Healey,
C.
& Enns,
J.
(2012).
Attention and visual
memory in visualization and
computer graphics. IEEE Transactions on Visualization and Computer Graphics,
18 (7), 1170–1188.
Heer, J. & Agrawala, M. (2006). Software design patterns for information visualiza-
tion.
IEEE Transactions on Visualization and Computer Graphics,
12 (5),
853–
860.
Heer,
J.
& Agrawala,
M.
(2008).
Design considerations for collaborative visual
ana-
lytics. Information Visualization, 7 (1), 49–62.
Heer, J. & Bostock, M. (2010). Crowdsourcing graphical perception: using mechanical
turk to assess visualization design.
In Proceedings of the SIGCHI Conference on
Human Factors in Computing Systems. ACM, 203–212.
Heer, J., Card, S. K., & Landay, J. A. (2005). Prefuse: a toolkit for interactive infor-
mation visualization. In Proceedings of the SIGCHI Conference on Human Factors
in Computing Systems. ACM, 421–430.
Hennekam, R. & Biesecker, L. G. (2012). Next-generation sequencing demands next-
generation phenotyping. Human Mutation, 33 (5), 884–886.
Herman,
I.,
Melan¸con,
G.,
& Marshall,
M.
S.
(2000).
Graph visualization and navi-
gation in information visualization: A survey. IEEE Transactions on visualization
and computer graphics, 6 (1), 24–43.
Herre,
H.
(2010).
The Ontology of
Medical
Terminological
Systems:
Towards the
Next Generation of Medical Ontologies. In Theory and Applications of Ontology:
Computer Applications. Springer, 373–391.
Herv´
as,
R.
& Bravo,
J.
(2011).
COIVA:
context-aware and ontology-powered infor-
mation visualization architecture. Software: Practice and Experience, 41 (4), 403–
426.
Heuer, R. J. (1999). Psychology of Intelligence Analysis. Lulu. com.
Hollan, J., Hutchins, E., & Kirsh, D. (2000). Distributed cognition: toward a new foun-
dation for human-computer interaction research. ACM Transactions on Computer-
Human Interaction, 7 (2), 174–196.
BIBLIOGRAPHY
174
Holten,
D.
& Van Wijk,
J.
J.
(2008).
Visual
comparison of hierarchically organized
data. In Computer Graphics Forum. Vol. 27. 3. Wiley Online Library, 759–766.
Horvath,
K.,
Stefanatos,
G.,
Sokolski,
K.
N.,
Wachtel,
R.,
Nabors,
L.,
& Tildon,
J. T. (1998). Improved social and language skills after secretin administration in
patients with autistic spectrum disorders. Journal of the Association for Academic
Minority Physicians.
Houle, D., Govindaraju, D. R., & Omholt, S. (2010). Phenomics: the next challenge.
Nature Reviews Genetics, 11 (12), 855–866.
Hu,
Z.,
Hung,
J.-H.,
Wang,
Y.,
Chang,
Y.-C.,
Huang,
C.-L.,
Huyck,
M.,
& DeLisi,
C.
(2009).
VisANT 3.5:
multi-scale network visualization,
analysis and inference
based on the gene ontology. Nucleic Acids Research, gkp406.
Huddar,
V.,
Desiraju,
B.
K.,
Rajan,
V.,
Bhattacharya,
S.,
Roy,
S.,
& Reddy,
C.
K.
(2016).
Predicting Complications in Critical
Care Using Heterogeneous Clinical
Data. IEEE Access, 4, 7988–8001.
HPO Annotation Guide.
Human Phenotype Ontology,
Annotation Guide.
http://
www.human-phenotype-ontology.org/contao/index.php/annotation-guide.
html. Accessed March 2015.
Hutchins, E. (1995). Cognition in the Wild. MIT press.
Immunization Safety Review Committee et al.
(2004).
Immunization safety review:
vaccines and autism. National Academies Press.
Iwata, T., Yamada, T., & Ueda, N. (2008). Probabilistic latent semantic visualization:
topic model for visualizing documents. In Proceedings of the 14th ACM SIGKDD
International
Conference on Knowledge Discovery and Data Mining. ACM, 363–
371.
Jain,
A.,
Marshall,
J.,
Buikema,
A.,
Bancroft,
T.,
Kelly,
J.
P.,
& Newschaffer,
C.
J.
(2015). Autism occurrence by MMR vaccine status among US children with older
siblings with and without autism.
Journal
of the American Medical
Association,
313 (15), 1534–1540.
Johnson-Laird,
P.
N.
(1983).
Mental
Models:
Towards a Cognitive Science of
Lan-
guage, Inference, and Consciousness. 6. Harvard University Press.
Jones, K. L., Jones, M. C., & Del Campo, M. (2013). Smith’s Recognizable Patterns
of Human Malformation. Elsevier Health Sciences.
Josephson, J. R. & Josephson, S. G. (1996). Abductive Inference: Computation, Phi-
losophy, Technology. Cambridge University Press.
BIBLIOGRAPHY
175
Kalogerakis,
E.,
Christodoulakis,
S.,
& Moumoutzis,
N.
(2006).
Coupling ontologies
with graphics content for knowledge driven visualization.
In Proceedings of
the
IEEE Conference on Virtual
Reality. IEEE, 43–50.
Kang,
Y.-a.
& Stasko,
J.
(2011).
Characterizing the intelligence analysis process:
Informing visual analytics design through a longitudinal field study. In Proceedings
of the IEEE Conference on Visual
Analytics Science and Technology.
IEEE,
21–
30.
Katifori,
A.,
Halatsis,
C.,
Lepouras,
G.,
Vassilakis,
C.,
& Giannopoulou,
E.
(2007).
Ontology visualization methods—a survey. ACM Computing Surveys, 39 (4), 10.
Keim,
D.,
Andrienko,
G.,
Fekete,
J.-D.,
G¨
org,
C.,
Kohlhammer,
J.,
& Melan¸
con,
G.
(2008).
Visual
analytics:
Definition,
process,
and challenges.
In Information
Visualization. Springer, 154–175.
Keller, T. & Tergan, S.-O. (2005). Visualizing knowledge and information: An intro-
duction. In Knowledge and Information Visualization. Springer, 1–23.
Kelso, J., Hoehndorf, R., & Pr¨
ufer, K. (2010). Ontologies in biology. In Theory and
Applications of Ontology: Computer Applications. Springer, 347–371.
Khatri, P. & Dr˘
aghici, S. (2005). Ontological analysis of gene expression data: current
tools, limitations, and open problems. Bioinformatics, 21 (18), 3587–3595.
Kim,
H.,
Choo,
J.,
Park,
H.,
& Endert,
A.
(2016).
Interaxis:
Steering scatterplot
axes via observation-level
interaction.
IEEE Transactions on Visualization and
Computer Graphics, 22 (1), 131–140.
Kirby, R. M. & Meyer, M. (2013). Visualization collaborations: What works and why.
IEEE Computer Graphics and Applications, 33 (6), 82–88.
Klein,
G.,
Moon,
B.,
& Hoffman,
R.
R.
(2006).
Making sense of sensemaking 1:
Al-
ternative perspectives. IEEE Intelligent Systems, 21 (4), 70–73.
Kl´ımek,
J.,
Helmich,
J.,
& Neˇcask`
y,
M.
(2013).
Payola:
Collaborative linked data
analysis and visualization framework.
In Proceedings of
the Extended Semantic
Web Conference. Springer, 147–151.
Kohane, I. S., Masys, D. R., & Altman, R. B. (2006). The incidentalome: a threat to
genomic medicine. Journal of the American Medical Association, 296 (2), 212–215.
K¨
ohler, S., Schulz, M. H., Krawitz, P., Bauer, S., D¨olken, S., Ott, C. E., Mundlos, C.,
Horn,
D.,
Mundlos,
S.,
& Robinson,
P.
N.
(2009).
Clinical
diagnostics in human
genetics with semantic similarity searches in ontologies. The American Journal of
Human Genetics, 85 (4), 457–464.
BIBLIOGRAPHY
176
K¨
ohler, S., Doelken, S. C., Mungall, C. J., Bauer, S., Firth, H. V., Bailleul-Forestier,
I., Black, G. C., Brown, D. L., Brudno, M., Campbell, J., et al. (2013). The Hu-
man Phenotype Ontology project: linking molecular biology and disease through
phenotype data. Nucleic Acids Research, gkt1026.
K¨
ohler,
S.,
Vasilevsky,
N.
A.,
Engelstad,
M.,
Foster,
E.,
McMurry,
J.,
Aym´e,
S.,
Baynam,
G.,
Bello,
S.
M.,
Boerkoel,
C.
F.,
Boycott,
K.
M.,
et al.
(2016).
The
Human Phenotype Ontology in 2017.
Nucleic Acids Research,
45 (D1),
D865–
D876.
Krause,
J.,
Perer,
A.,
& Stavropoulos,
H.
(2016).
Supporting iterative cohort con-
struction with visual
temporal
queries.
IEEE Transactions on Visualization and
Computer Graphics, 22 (1), 91–100.
Kruskal, J. B. & Landwehr, J. M. (1983). Icicle plots: Better displays for hierarchical
clustering. The American Statistician, 37 (2), 162–168.
Krzywinski, M., Schein, J., Birol, I., Connors, J., Gascoyne, R., Horsman, D., Jones,
S.
J.,
& Marra,
M.
A.
(2009).
Circos:
an information aesthetic for comparative
genomics. Genome Research, 19 (9), 1639–1645.
Lanktree,
M.
B.,
Hassell,
R.
G.,
Lahiry,
P.,
& Hegele,
R.
A.
(2010).
Phenomics:
ex-
panding the role of clinical evaluation in genomic studies. Journal of Investigative
Medicine, 58 (5), 700–706.
Lanzenberger,
M.,
Sampson,
J.,
& Rester,
M.
(2010).
Ontology Visualization:
Tools
and Techniques for Visual Representation of Semi-Structured Meta-Data. Journal
of Universal
Computer Science, 16 (7), 1036–1054.
Larivi`ere, V. (2017-04-11). Personal communication.
Lee,
B.,
Parr,
C.
S.,
Plaisant,
C.,
Bederson,
B.
B.,
Veksler,
V.
D.,
Gray,
W.
D.,
&
Kotfila,
C.
(2006).
Treeplus:
Interactive exploration of
networks with enhanced
tree layouts. IEEE Transactions on Visualization and Computer Graphics, 12 (6),
1414–1426.
Lee, H., Kihm, J., Choo, J., Stasko, J., & Park, H. (2012). iVisClustering: An interac-
tive visual document clustering via topic modeling. In Computer Graphics Forum.
Vol. 31. 3pt3. Wiley Online Library, 1155–1164.
Lex, A., Gehlenborg, N., Strobelt, H., Vuillemot, R., & Pfister, H. (2014). UpSet: visu-
alization of intersecting sets.
IEEE Transactions on Visualization and Computer
Graphics, 20 (12), 1983–1992.
BIBLIOGRAPHY
177
Lingren, T., Chen, P., Bochenek, J., Doshi-Velez, F., Manning-Courtney, P., Bickel, J.,
Welchons,
L.
W.,
Reinhold,
J.,
Bing,
N.,
Ni,
Y.,
et al.
(2016).
Electronic Health
Record Based Algorithm to Identify Patients with Autism Spectrum Disorder.
PloS one, 11 (7), e0159621.
Liu, S., Zhou, M. X., Pan, S., Song, Y., Qian, W., Cai, W., & Lian, X. (2012). Tiara:
Interactive,
topic-based visual
text summarization and analysis.
ACM Transac-
tions on Intelligent Systems and Technology, 3 (2), 25.
Liu, S., Wang, X., Chen, J., Zhu, J., & Guo, B. (2014). Topicpanorama: A full picture
of
relevant topics.
In Proceedings of
the IEEE Conference on Visual
Analytics
Science and Technology. IEEE, 183–192.
Liu,
Z.,
Nersessian,
N.,
& Stasko,
J.
(2008).
Distributed cognition as a theoretical
framework for information visualization. IEEE Transactions on Visualization and
Computer Graphics, 14 (6), 1173–1180.
LMD.
London Medical
Databases.
http://www.lmdatabases.com.
Accessed March
2015.
Lord, P. W., Stevens, R. D., Brass, A., & Goble, C. A. (2003). Investigating semantic
similarity measures across the Gene Ontology: the relationship between sequence
and annotation. Bioinformatics, 19 (10), 1275–1283.
Lussier,
Y.
A.
& Liu,
Y.
(2007).
Computational
approaches to phenotyping:
high-
throughput phenomics.
Proceedings of the American Thoracic Society,
4 (1),
18–
25.
MEDLINE Fact Sheet.
https://www.nlm.nih.gov/pubs/factsheets/medline.
html. Accessed April 2017.
Mackinlay, J. (1986). Automating the design of graphical presentations of relational
information. ACM Transactions on Graphics, 5 (2), 110–141.
Madsen, B. N. & Thomsen, H. E. (2008). Terminological Principles Used for Ontolo-
gies. Managing Ontologies and Lexical
Resources, 107–122.
Malik,
S.,
Du,
F.,
Monroe,
M.,
Onukwugha,
E.,
Plaisant,
C.,
& Shneiderman,
B.
(2015). Cohort comparison of event sequences with balanced integration of visual
analytics and statistics.
In Proceedings of
the 20th International
Conference on
Intelligent User Interfaces. ACM, 38–49.
Meyer, M., Gˆırba, T., & Lungu, M. (2006). Mondrian: An Agile Information Visualiza-
tion Framework. In Proceedings of the ACM Symposium on Software Visualization.
SoftVis ’06. ACM, 135–144.
BIBLIOGRAPHY
178
Meyer, M., Munzner, T., & Pfister, H. (2009). MizBee: a multiscale synteny browser.
IEEE Transactions on Visualization and Computer Graphics, 15 (6), 897–904.
Munkres, J. (1957). Algorithms for the assignment and transportation problems. Jour-
nal
of the Society for Industrial
and Applied Mathematics, 5 (1), 32–38.
Munzner,
T.
(2009).
A nested model
for visualization design and validation.
IEEE
Transactions on Visualization and Computer Graphics, 15 (6), 921–928.
Munzner, T., Guimbreti`ere, F., Tasiran, S., Zhang, L., & Zhou, Y. (2003). TreeJuxta-
poser: scalable tree comparison using Focus+ Context with guaranteed visibility.
In ACM Transactions on Graphics. Vol. 22. 3. ACM, 453–462.
Muscle Study Group.
Muscle Study Group — 2016 Annual
Conference Abstracts.
https://musclestudygroup.org/2016-annual-conference-abstracts/.
Ac-
cessed April 2017.
Nazemi, K., Breyer, M., Burkhardt, D., Stab, C., & Kohlhammer, J. (2014). SemaVis:
A new approach for visualizing semantic information. In Towards the Internet of
Services: The THESEUS Research Program. Springer, 191–202.
Newman, D., Baldwin, T., Cavedon, L., Huang, E., Karimi, S., Martinez, D., Scholer,
F., & Zobel, J. (2010). Visualizing search results and document collections using
topic maps.
Web Semantics:
Science,
Services and Agents on the World Wide
Web, 8 (2), 169–175.
Nielsen,
C.
B.,
Jackman,
S.
D.,
Birol,
I.,
& Jones,
S.
J.
(2009).
ABySS-Explorer:
visualizing genome sequence assemblies. IEEE Transactions on Visualization and
Computer Graphics, 15 (6), 881–888.
Nielsen,
C.
B.,
Younesy,
H.,
O’Geen,
H.,
Xu,
X.,
Jackson,
A.
R.,
Milosavljevic,
A.,
Wang, T., Costello, J. F., Hirst, M., Farnham, P. J., et al. (2012). Spark: a navi-
gational paradigm for genomic data exploration. Genome Research, 22 (11), 2262–
2269.
Nye, T. M. & Gascuel, O. (2008). Trees of trees: an approach to comparing multiple
alternative phylogenies. Systematic biology, 57 (5), 785–794.
OMIM.
Online Mendelian Inheritance in Man.
http://www.omim.org/.
Accessed
March 2015.
OBO. Open Biomedical Ontology Foundry, Ontology Table. http://www.obofoundry.
org/. Accessed March 2017.
Orphanet. Orphanet: a portal for rare diseases and orphan drugs. http://www.orpha.
net. Accessed March 2015.
BIBLIOGRAPHY
179
Parr,
C.
S.,
Lee,
B.,
Campbell,
D.,
& Bederson,
B.
B.
(2004).
Visualizations for
taxonomic and phylogenetic trees. Bioinformatics, 20 (17), 2997–3004.
Pendergrass,
S.
A.,
Dudek,
S.
M.,
Crawford,
D.
C.,
& Ritchie,
M.
D.
(2012).
Visu-
ally integrating and exploring high throughput phenome-wide association study
(PheWAS) results using PheWAS-View. BioData Mining, 5 (1), 1.
Perer,
A.
& Shneiderman,
B.
(2008).
Integrating Statistics and Visualization:
Case
Studies of Gaining Clarity During Exploratory Data Analysis.
In Proceedings of
the SIGCHI Conference on Human Factors in Computing Systems. CHI ’08. ACM,
265–274.
Perin, C., Dragicevic, P., & Fekete, J.-D. (2014). Revisiting bertin matrices: New in-
teractions for crafting tabular visualizations. IEEE Transactions on Visualization
and Computer Graphics, 20 (12), 2082–2091.
Philippakis,
A.
A.,
Azzariti,
D.
R.,
Beltran,
S.,
Brookes,
A.
J.,
Brownstein,
C.
A.,
Brudno,
M.,
Brunner,
H.
G.,
Buske,
O.
J.,
Carey,
K.,
Doll,
C.,
et al.
(2015).
The Matchmaker Exchange:
a platform for rare disease gene discovery.
Human
Mutation, 36 (10), 915–921.
POSSUM.
Pictures of Standard Syndromes and Undiagnosed Malformations.
http:
//www.possum.net.au. Accessed March 2015.
Pirolli, P. & Card, S. (2005). The sensemaking process and leverage points for analyst
technology as identified through cognitive task analysis.
In Proceedings of
the
International
Conference on Intelligence Analysis. Vol. 5, 2–4.
Pivovarov, R., Perotte, A. J., Grave, E., Angiolillo, J., Wiggins, C. H., & Elhadad, N.
(2015). Learning probabilistic phenotypes from heterogeneous EHR data. Journal
of Biomedical
Informatics, 58, 156–165.
Plaisant, C. (2004). The Challenge of Information Visualization Evaluation. In Pro-
ceedings of the Working Conference on Advanced Visual Interfaces. AVI ’04. ACM,
109–116.
Plaisant,
C.,
Mushlin,
R.,
Snyder,
A.,
Li,
J.,
Heller,
D.,
& Shneiderman,
B.
(1998).
LifeLines: using visualization to enhance navigation and analysis of patient records.
In Proceedings of the AMIA Symposium. American Medical Informatics Associa-
tion, 76.
Poli,
R.
& Obrst,
L.
(2010).
The interplay between ontology as categorial
analysis
and ontology as technology.
In Theory and Applications of
Ontology:
Computer
Applications. Springer, 1–26.
BIBLIOGRAPHY
180
Rath,
A.,
Olry,
A.,
Dhombres,
F.,
Brandt,
M.
M.,
Urbero,
B.,
& Ayme,
S.
(2012).
Representation of rare diseases in health information systems:
the Orphanet ap-
proach to serve a wide range of end users. Human Mutation, 33 (5), 803–808.
ˇ
Reh˚uˇrek, R. & Sojka, P. (2010). Software Framework for Topic Modelling with Large
Corpora. English. In Proceedings of the LREC 2010 Workshop on New Challenges
for NLP Frameworks.
http://is.muni.cz/publication/884893/en.
Valletta,
Malta: ELRA, 45–50.
Rind,
A.,
Wang,
T.
D.,
Aigner,
W.,
Miksch,
S.,
Wongsuphasawat,
K.,
Plaisant,
C.,
& Shneiderman,
B.
(2011a).
Interactive information visualization to explore and
query electronic health records. Foundations and Trends in Human-Computer In-
teraction, 5 (3), 207–298.
Rind,
A.,
Aigner,
W.,
Miksch,
S.,
Wiltner,
S.,
Pohl,
M.,
Turic,
T.,
& Drexler,
F.
(2011b).
Visual
exploration of
time-oriented patient data for chronic diseases:
Design study and evaluation.
In Symposium of
the Austrian HCI and Usability
Engineering Group. Springer, 301–320.
Robertson,
G.,
Cameron,
K.,
Czerwinski,
M.,
& Robbins,
D.
(2002).
Animated vi-
sualization of
multiple intersecting hierarchies.
Information Visualization,
1 (1),
50–65.
Robinson, P. N. (2012). Deep phenotyping for precision medicine. Human Mutation,
33 (5), 777–780.
Robinson, P. N. & Mundlos, S (2010). The human phenotype ontology.
Clinical
Ge-
netics, 77 (6), 525–534.
Robinson, P. N., K¨
ohler, S., Bauer, S., Seelow, D., Horn, D., & Mundlos, S. (2008).
The Human Phenotype Ontology:
a tool
for annotating and analyzing human
hereditary disease. The American Journal
of Human Genetics, 83 (5), 610–615.
Robinson,
P.
N.,
Mungall,
C.
J.,
& Haendel,
M.
(2015).
Capturing phenotypes for
precision medicine. Molecular Case Studies, 1 (1), a000372.
Rosario,
G.
E.,
Rundensteiner,
E.
A.,
Brown,
D.
C.,
Ward,
M.
O.,
& Huang,
S.
(2004). Mapping nominal values to numbers for effective visualization. Information
Visualization, 3 (2), 80–95.
Rumelhart,
D.
E.
& Norman,
D.
A.
(1983).
Representation in memory.
Tech.
rep.
DTIC Document.
BIBLIOGRAPHY
181
Russell,
D.
M.,
Stefik,
M.
J.,
Pirolli,
P.,
& Card,
S.
K.
(1993).
The cost structure
of sensemaking. In Proceedings of the INTERACT’93 and CHI’93 Conference on
Human Factors in Computing Systems. ACM, 269–276.
Schlicker,
A.,
Domingues,
F.
S.,
Rahnenf¨
uhrer,
J.,
& Lengauer,
T.
(2006).
A new
measure for functional similarity of gene products based on Gene Ontology. BMC
Bioinformatics, 7 (1), 302.
Schroeder, M. P., Gonzalez-Perez, A., & Lopez-Bigas, N. (2013). Visualizing multidi-
mensional cancer genomics data. Genome Medicine, 5 (1), 1.
Schulz,
H.-J.
(2011).
Treevis.
net:
A tree visualization reference.
IEEE Computer
Graphics and Applications, 31 (6), 11–15.
Schulz, H.-J., Hadlak, S., & Schumann, H. (2011). The design space of implicit hier-
archy visualization: A survey. IEEE Transactions on Visualization and Computer
Graphics, 17 (4), 393–411.
Secrier, M., Pavlopoulos, G. A., Aerts, J., & Schneider, R. (2012). Arena3D: visualiz-
ing time-driven phenotypic differences in biological systems. BMC Bioinformatics,
13 (1), 1.
Sedig, K. & Parsons, P. (2016). Design of Visualizations for Human-Information In-
teraction: A Pattern-Based Framework. Synthesis Lectures on Visualization, 4 (1),
1–185.
Sedlmair,
M.,
Isenberg,
P.,
Baur,
D.,
& Butz,
A.
(2011).
Information visualization
evaluation in large companies: Challenges, experiences and recommendations. In-
formation Visualization, 10 (3), 248–266.
Sedlmair, M., Meyer, M., & Munzner, T. (2012). Design study methodology: Reflec-
tions from the trenches and the stacks.
IEEE Transactions on Visualization and
Computer Graphics, 18 (12), 2431–2440.
Senay, H. & Ignatius, E. (1994). A knowledge-based system for visualization design.
IEEE Computer Graphics and Applications, 14 (6), 36–47.
Shachak,
A.
& Fine,
S.
(2008).
The Effect of
training on biologists acceptance of
bioinformatics tools: A field experiment. Journal
of the American Society for In-
formation Science and Technology, 59 (5), 719–730.
Shannon, P., Markiel, A., Ozier, O., Baliga, N. S., Wang, J. T., Ramage, D., Amin,
N., Schwikowski, B., & Ideker, T. (2003). Cytoscape: a software environment for
integrated models of biomolecular interaction networks. Genome Research, 13 (11),
2498–2504.
BIBLIOGRAPHY
182
Shire Human Genetic Therapies (2013).
Rare Disease Impact Report:
Insights from
patients and the medical community. Shire Human Genetic Therapies, Tech. Rep.
Shneiderman, B. (1992). Tree visualization with tree-maps: 2-d space-filling approach.
ACM Transactions on Graphics, 11 (1), 92–99.
Shneiderman, B. (1996). The eyes have it: A task by data type taxonomy for informa-
tion visualizations. In Proceedings of the IEEE Symposium on Visual
Languages.
IEEE, 336–343.
Shneiderman, B. & Plaisant, C. (2006). Strategies for Evaluating Information Visual-
ization Tools: Multi-dimensional In-depth Long-term Case Studies. In Proceedings
of the 2006 AVI Workshop on BEyond time and errors: novel evaLuation methods
for Information Visualization. BELIV ’06. ACM, 1–7.
Shneiderman,
B.,
Plaisant,
C.,
& Hesse,
B.
W.
(2013).
Improving healthcare with
interactive visualization. Computer, 46 (5), 58–66.
Shyr,
C.,
Kushniruk,
A.,
Karnebeek,
C.
D.
van,
& Wasserman,
W.
W.
(2016).
Dy-
namic software design for clinical exome and genome analyses: insights from bioin-
formaticians, clinical geneticists, and genetic counselors. Journal
of the American
Medical
Informatics Association, 23 (2), 257–268.
Sievert,
C.
& Shirley,
K.
E.
(2014).
LDAvis:
A method for visualizing and inter-
preting topics. In Proceedings of the Workshop on Interactive Language Learning,
Visualization, and Interfaces, 63–70.
Smith,
B.,
Ashburner,
M.,
Rosse,
C.,
Bard,
J.,
Bug,
W.,
Ceusters,
W.,
Goldberg,
L.
J.,
Eilbeck,
K.,
Ireland,
A.,
Mungall,
C.
J.,
et al.
(2007).
The OBO Foundry:
coordinated evolution of ontologies to support biomedical data integration. Nature
Biotechnology, 25 (11), 1251–1255.
Sollie,
A.,
Sijmons,
R.
H.,
Lindhout,
D.,
Ploeg,
A.
T.,
Rubio Gozalbo,
M.
E.,
Smit,
G. P. A., Verheijen, F., Waterham, H. R., Weely, S., Wijburg, F. A., et al. (2013).
A New Coding System for Metabolic Disorders Demonstrates Gaps in the Interna-
tional Disease Classifications ICD-10 and SNOMED-CT, Which Can Be Barriers
to Genotype–Phenotype Data Sharing. Human Mutation, 34 (7), 967–973.
Stasko, J. & Zhang, E. (2000). Focus+ context display and navigation techniques for
enhancing radial, space-filling hierarchy visualizations. In Proceedings of the IEEE
Symposium on Information Visualization. IEEE, 57–65.
Stevens, R. & Lord, P. (2009). Application of ontologies in bioinformatics. In Handbook
on Ontologies. Springer, 735–756.
BIBLIOGRAPHY
183
Stolte,
C.,
Tang,
D.,
& Hanrahan,
P.
(2002).
Polaris:
A system for query,
analysis,
and visualization of multidimensional relational databases. IEEE Transactions on
Visualization and Computer Graphics, 8 (1), 52–65.
Studer, R., Benjamins, V. R., & Fensel, D. (1998). Knowledge engineering: principles
and methods. Data & Knowledge Engineering, 25 (1-2), 161–197.
Talbot,
J.,
Setlur,
V.,
& Anand,
A.
(2014).
Four experiments on the perception of
bar charts. IEEE Transactions on Visualization and Computer Graphics, 20 (12),
2152–2160.
Taylor, L. E., Swerdfeger, A. L., & Eslick, G. D. (2014). Vaccines are not associated
with autism: an evidence-based meta-analysis of case-control and cohort studies.
Vaccine, 32 (29), 3623–3629.
Teh, Y. W., Jordan, M. I., Beal, M. J., & Blei, D. M. (2005). Sharing clusters among
related groups:
Hierarchical
Dirichlet processes.
In Advances in Neural
Informa-
tion Processing Systems, 1385–1392.
The Lancet,
T.
E.
of
(2010).
RETRACTION—Ileal-lymphoid-nodular hyperplasia,
non-specific colitis, and pervasive developmental disorder in children. Lancet, 375 (9713),
445.
Tobiasz,
M.,
Isenberg,
P.,
& Carpendale,
S.
(2009).
Lark:
Coordinating co-located
collaboration with information visualization. IEEE Transactions on Visualization
and Computer Graphics, 15 (6), 1065–1072.
Tu, Y. & Shen, H.-W. (2007). Visualizing changes of hierarchical data using treemaps.
IEEE Transactions on Visualization and Computer Graphics, 13 (6), 1286–1293.
Tufte, E. R. (2006). Beautiful evidence. New York.
Tukey, J. W. (1977). Exploratory Data Analysis. Reading, Mass.
Van Ham,
F.
(2003).
Using multilevel
call
matrices in large software projects.
In
Proceedings of
the IEEE Symposium on Information Visualization.
IEEE,
227–
232.
Vaske, C. J., Benz, S. C., Sanborn, J. Z., Earl, D., Szeto, C., Zhu, J., Haussler, D., &
Stuart,
J.
M.
(2010).
Inference of patient-specific pathway activities from multi-
dimensional
cancer genomics data using PARADIGM.
Bioinformatics,
26 (12),
i237–i245.
Veras, R. & Collins, C. (2017). Optimizing Hierarchical Visualizations with the Mini-
mum Description Length Principle. IEEE Transactions on Visualization and Com-
puter Graphics, 23 (1), 631–640.
BIBLIOGRAPHY
184
Vercruysse, S., Venkatesan, A., & Kuiper, M. (2012). OLSVis: an animated, interac-
tive visual browser for bio-ontologies. BMC Bioinformatics, 13 (1), 1.
Wakefield,
A.
J.,
Murch,
S.
H.,
Anthony,
A.,
Linnell,
J.,
Casson,
D.,
Malik,
M.,
Berelowitz,
M.,
Dhillon,
A.
P.,
Thomson,
M.
A.,
Harvey,
P.,
et al.
(1998).
RE-
TRACTED: Ileal-lymphoid-nodular hyperplasia, non-specific colitis, and pervasive
developmental
disorder in children.
Wang, T. D., Plaisant, C., Quinn, A. J., Stanchak, R., Murphy, S., & Shneiderman,
B. (2008). Aligning temporal data by sentinel events: discovering patterns in elec-
tronic health records. In Proceedings of the SIGCHI Conference on Human Factors
in Computing Systems. ACM, 457–466.
Wang, X. & McCallum, A. (2006). Topics over time: a non-Markov continuous-time
model of topical trends.
In Proceedings of the 12th ACM SIGKDD International
Conference on Knowledge Discovery and Data Mining. ACM, 424–433.
Weber, E. U., B¨
ockenholt, U., Hilton, D. J., & Wallace, B. (1993). Determinants of di-
agnostic hypothesis generation: effects of information, base rates, and experience.
Journal
of
Experimental
Psychology:
Learning,
Memory,
and Cognition,
19 (5),
1151.
Winnenburg, R. & Bodenreider, O. (2014). Coverage of phenotypes in standard ter-
minologies. Joint Bio-Ontologies and BioLINK ISMB, 41–44.
Wongsuphasawat,
K.,
Moritz,
D.,
Anand,
A.,
Mackinlay,
J.,
Howe,
B.,
& Heer,
J.
(2016). Voyager: Exploratory analysis via faceted browsing of visualization recom-
mendations. IEEE Transactions on Visualization and Computer Graphics, 22 (1),
649–658.
Wongsuphasawat, K., Qu, Z., Moritz, D., Chang, R., Ouk, F., Anand, A., Mackinlay,
J.,
Howe,
B.,
& Heer,
J.
(2017).
Voyager 2:
Augmenting Visual
Analysis with
Partial View Specifications. In Proceedings of the 2017 CHI Conference on Human
Factors in Computing Systems. ACM, 2648–2659.
Wongsuphasawat, K., Guerra G´
omez, J. A., Plaisant, C., Wang, T. D., Taieb-Maimon,
M.,
& Shneiderman,
B.
(2011).
LifeFlow:
visualizing an overview of
event se-
quences.
In Proceedings of
the SIGCHI Conference on Human Factors in Com-
puting Systems. ACM, 1747–1756.
Yi, J. S., Kang, Y.-a., Stasko, J. T., & Jacko, J. A. (2008). Understanding and charac-
terizing insights: how do people gain insights using information visualization? In
BIBLIOGRAPHY
185
Proceedings of the 2008 Workshop on BEyond time and errors: novel
evaLuation
methods for Information Visualization. ACM, 4.
Zeeberg,
B.
R.,
Feng,
W.,
Wang,
G.,
Wang,
M.
D.,
Fojo,
A.
T.,
Sunshine,
M.,
Narasimhan, S., Kane, D. W., Reinhold, W. C., Lababidi, S., et al. (2003). GoMiner:
a resource for biological
interpretation of genomic and proteomic data.
Genome
Biology, 4 (4), R28.
Zhang,
J.
& Norman,
D.
A.
(1994).
Representations in distributed cognitive tasks.
Cognitive Science, 18 (1), 87–122.
Zhang,
Z.,
Gotz,
D.,
& Perer,
A.
(2014).
Iterative cohort analysis and exploration.
Information Visualization, 14 (4), 289–307.
Zhao, J., Chevalier, F., Pietriga, E., & Balakrishnan, R. (2011). Exploratory analysis
of time-series with chronolenses.
IEEE Transactions on Visualization and Com-
puter Graphics, 17 (12), 2422–2431.
Zhao, J., Chevalier, F., Collins, C., & Balakrishnan, R. (2012). Facilitating discourse
analysis with interactive visualization.
IEEE Transactions on Visualization and
Computer Graphics, 18 (12), 2639–2648.
