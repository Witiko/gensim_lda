Personalized Research Paper Recommendation using Deep
Learning
Hebatallah A. Mohamed Hassan
Roma Tre University
Department of Engineering
Via della Vasca Navale 79
Rome, Italy 00146
hebatallah.mohamed@uniroma3.it
ABSTRACT
With the increasing number of scientific publications,
research
paper recommendation has become increasingly important for sci-
entists. Most researchers rely on keyword-based search or following
citations in other papers, in order to find relevant research articles.
And usually they spend a lot of time without getting satisfactory
results. This study aims to propose a personalized research paper
recommendation system, that facilitate this task by recommending
papers based on users’ explicit and implicit feedback. The users will
be allowed to explicitly specify the papers of interest. In addition,
user activities (e.g., viewing abstracts or full-texts) will be analyzed
in order to enhance users’ profiles. Most of the current research
paper recommendation and information retrieval systems use the
classical bag-of-words methods, which don’t consider the context
of the words and the semantic similarity between the articles. This
study will use Recurrent Neural Networks (RNNs) to discover con-
tinuous and latent semantic features of the papers,
in order to
improve the recommendation quality. The proposed approach uti-
lizes PubMed so far, since it is frequently used by physicians and
scientists, but it can easily incorporate other datasets in the future.
KEYWORDS
Recommender systems; personalization; deep learning; recurrent
neural networks
1
INTRODUCTION
Recommender System (RS) for research articles is a very important
application that helps researchers keeping track of their field of
study.
Moreover,
it can aid the scientists (e.g.,
physicians) as a
decision support tool. One way by which researchers find articles is
following citations in other articles that they are interested in, but
this limits them to specific citation communities, and it is biased
towards heavily cited papers. Another method of finding articles is
keyword-based search, which is a powerful approach, but it is also
limited as it can be difficult to form queries to search with. This has
opened the door to using recommendation methods as a way to
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
UMAP’17, July 9–12, 2017, Bratislava, Slovakia
© 2017 ACM.
978-1-4503-4635-1/17/07. . . $15.00
DOI: http://dx.doi.org/10.1145/3079628.3079708
help researchers finding interesting articles. Most of the current RSs
are available for commercial applications, such as news, movies and
music applications. On the contrary, few projects address scientific
literature recommendation.
The existing RSs approaches can be classified into three types:
content-based filtering, collaborative filtering and hybrid approaches.
Content-based filtering uses the content of items which are highly
rated by a user in order to find her preferences [
17
]. On the other
hand, collaborative filtering utilizes the similarity between user’s
preferences and other similar users’ preferences in order to rec-
ommend new items [7]. Hybrid RSs use a combination of content-
based and collaborative filtering techniques [
5
]. Most of the current
research paper recommendation systems are based on the bag-of-
words model, that represents the number of times each word occurs
in a document. The context of the words and the semantic similar-
ity between words are not considered during the extraction and
representation of the document features.
Recent advances in artificial neural networks (ANNs) have shown
that continuous word vectors can be learned as a probability distri-
bution over the words of a document. Deep learning architectures
are basically ANNs of multiple non-linear layers. A key benefit of
deep learning is the analysis and learning of massive amounts of
unsupervised data, making it a valuable tool for big data analytics
where raw data is largely unstructured. Using deep learning tech-
niques to extract meaningful data representations makes it possible
to obtain a semantic and relational understanding of the data from
such high-dimensional textual data.
We intend to use deep learning techniques for recommending
relevant research papers in PubMed
1
database,
based on the se-
mantic content of the papers that match user’s preferences. User
profiles will be built based on some basic information that a user
may provide, such as the papers she is interested in, to be selected as
input from a graphical user interface. Moreover, the profiles will be
improved using user interaction information that can be extracted
from users’ logs.
The first part of this paper briefly presents the research goals,
some of the research literature related to the existing approaches
of designing research paper RSs.
The other parts introduce the
proposed system architecture, the technologies that we will use,
and the evaluation methods. The paper is concluded by presenting
the current research progress.
1
https://www.ncbi.nlm.nih.gov/pubmed
UMAP 2017 Doctoral Consortium 
UMAP’17, July 9-12, 2017, Bratislava, Slovakia
327
2
RESEARCH GOALS
This main research goals can be summarized as follows:
•
To propose a novel personalized research paper recom-
mendation approach that learns and utilizes the semantic
representation of papers’ titles and abstracts for matching
users’ interests.
•
To study the effect of using deep neural networks, in par-
ticular word2vec
2
and long short-term memory (LSTM)
techniques in extracting the semantic representation of the
scientific papers’ titles and abstracts for the recommenda-
tion task.
•
To propose a comprehensive user modeling framework that
combines user explicit and implicit feedback by allowing
users to specify their preferred papers and by analyzing
users behaviors.
3
RELATED WORK
There have been some attempts to develop recommendation sys-
tems for scientific literature. Citation databases such as CiteSeerX
3
apply citation analysis in order to identify papers that are similar to
an input paper. Scholarly search engines such as Google Scholar
4
fo-
cus on classic text mining and citation counts. The research of [
20
]
has also presented a recommendation system based on citations.
Other work was done based on articles content;
many differ-
ent types of continuous representations techniques such as Latent
Dirichlet Allocation (LDA) [
19
] and Latent Semantic Analysis (LSA)
[
1
,
9
] have been used to describe the content of a document as a
probability distribution of latent variables known as topics.
The
assumption behind those methods is that words that are related to
each other will often appear in the same documents. The system
illustrated in [
1
] used TF-IDF and LSA methods to discover groups
of words that are equivalent in their meaning.
The authors of [
19
] presented a topic-based recommendation
system that combines traditional collaborative filtering with topic
modeling based on LDA model.
Nascimento et al.
[
16
] provided
another example of a content-based RS for scientific articles recom-
mendation. Their proposed solution utilized the n-grams models
to generate queries from a particular article that is presented by
the user, and then submit the generated queries on publicly avail-
able web sources of scientific papers. Their method used the titles
and abstracts of the articles, and the similarity of the papers was
calculated through the cosine similarity method.
In [
21
],
the authors presented PURE,
a content-based recom-
mendation system that works on documents’ titles and abstracts
of the PubMed dataset. It automatically captures user preferences
by using her response to the presented papers. Furthermore, PURE
uses the well-known TF-IDF method and learns probabilistic model
for computing relevant documents based on selected documents
added by the user.
Docear [
3
] is an academic literature suite to search,
organize,
and create research articles. Its recommender system uses content-
based methods to recommend articles. It builds a user model using
the mind maps created by the user, and match it with Docear Digital
2
https://code.google.com/archive/p/word2vec/
3
http://citeseerx.ist.psu.edu/index
4
https://scholar.google.it/
Library. The authors claimed to have achieved good results based
on the number of clicks gained, through around thirty thousand
tested recommendation results.
Some authors suggested using collaborative filtering and ratings
[
6
]. Ratings can be generated by considering citations as ratings.
They can also be implicitly inferred by monitoring user’s actions
such as downloading or bookmarking a paper.
The system pro-
posed in [
6
], called Scienstein, combines different methods for pro-
viding literature recommendation. Scienstein integrated the tradi-
tional keyword-based search with citation analysis, author analysis,
source analysis, implicit and explicit ratings. Instead of entering
just keywords for searching documents, a user may provide entire
documents as an input,
include reference lists,
and provides im-
plicit and explicit ratings in order to improve the recommendation
process.
In [
10
] a personalized academic research paper RS is presented.
It recommends articles relevant to the research field of the users,
supposing that researchers like their own articles. Based on this
assumption papers similar to the ones previously written by users
are recommended as relevant to them.
This system uses a web
crawler to retrieve research papers from IEEE Xplore
5
and ACM
digital library
6
. It measures text similarity using bag-of-words and
KNN methods to determine the similarity between two research
papers and uses collaborative filtering methods to recommend the
items.
Finally, the research of [
14
] proposed a novel method for integrat-
ing structural and contextual information to build a context specific
network for generating recommendations for similar PubMed arti-
cles.
Some of the used methods have drawbacks, which limit their abil-
ity to deliver recommendations. For example, in the citation-based
approaches, not all research papers are cited and hence cannot be
recommended. Also, reference lists can contain irrelevant citations
just because the author believes that well-known papers should be
cited, or in order to promote other publications although they are
irrelevant for the citing paper [
6
]. In addition, text-based RSs cannot
identify related papers if different terms are used. Moreover, the
basic topic modeling methods which are based on the traditional
bag-of-words techniques,
have the disadvantage that topics are
probability distributions over a collection of words that represent
a document, it does not consider the semantic relations between
words. Thus, it may result in redundant topics that contain different
words, but with the same meaning. In addition, these techniques
don’t take the context of the words into consideration.
Collaborative filtering in the research paper recommender sys-
tems domain would be ineffective as there is a huge number of
papers compared with the number of users,
and only few users
rated the same papers. In domains such as movie recommendations,
there are few items and many users such as in MovieLens
7
recom-
mender system, and most movies have been watched and rated by
at least some users [
2
]. Therefore, like-minded users can be found
and recommendations can be given effectively.
The use of deep neural networks for Natural Language Process-
ing (NLP) has recently received much attention; it provides high
5
http://ieeexplore.ieee.org/Xplore/home.jsp
6
http://dl.acm.org/
7
https://grouplens.org/datasets/movielens/
UMAP 2017 Doctoral Consortium 
UMAP’17, July 9-12, 2017, Bratislava, Slovakia
328
quality semantic word representations. These models are usually
trained on large amounts of data. In the last few years, deep neural
network models have been applied to tasks ranging from machine
translation to question answering, but not much attention is paid to
the RSs area. For instance, in [
15
] and [
12
], the authors showed that
LSTM can be used to build a language model and assess semantic
similarity between sentences. To the best of our knowledge, there
have been no work done before for recommending scientific articles
based on LSTM.
4
RESEARCH METHODOLOGY
4.1
Data Collection
PubMed is one of the largest public databases in biological and
medical sciences.
It contains more than 26 million citations for
biomedical literature from MEDLINE
8
, life science journals, and
online books. Each paper in MEDLINE is indexed using a controlled
vocabulary, called Medical Subject Headings (MeSH), which is used
to describe the main topics discussed.
The set of MeSH terms is
manually assigned by biomedical experts who scan each article.
We will use BioPython [
4
] library to crawl the PubMed database
through PubMed Central (PMC) APIs
9
,
and download titles and
abstracts of sample papers. Then, we will concatenate the title and
abstract for each paper.
We will use only the titles and abstracts of the papers to calculate
the similarity between the papers and recommend similar articles
since they will be always publicly available. In addition, fetching
and analyzing the full text of every paper would significantly slow
down the process.
4.2
Language Modeling
Recurrent Neural Networks (RNNs) are deep models that are widely
used when dealing with sequential data, unlike the traditional neu-
ral networks which assume that all inputs and outputs are inde-
pendent of each other. RNNs have shown great promise in image
and video captioning, time series prediction, NLP, text and music
generation and much more tasks [
11
]. LSTM networks are a type of
RNNs [
8
], that allows the model to learn longer-term dependencies
than a traditional RNN.
Word2vec is one of state-of-the-art word embedding techniques,
published by Google in 2013 [
13
], that learns distributed represen-
tations for words. It converts text into a numerical form that deep
nets can understand. The idea of the word vectors is to represent
a word by a dense vector in a semantic space, and other vectors
close by should be semantically similar. Other deep recurrent neural
network architectures had been previously proposed for learning
word representations, but the major problem with those methods
was the long time required to train the models. Word2vec learns
quickly compared to other models.
In general,
parallelization is
used to speed up the training process, so that larger models can be
trained in a reasonable amount of time.
We will create a language model using the word2vec and LSTM
techniques, in order to be used for measuring the relatedness of
the scientific publications. Word2vec will be used for computing
individual word representation for all the words from the collected
8
https://www.nlm.nih.gov/bsd/pmresources.html
9
https://www.ncbi.nlm.nih.gov/home/develop/api.shtml
papers. We intend to use gensim Python package [
18
] for this pur-
pose. Then, we will train a LSTM model using the vectors of words
resulted from the word2vec step,
in order to learn the semantic
content of the research papers.
This model will be used for the
purpose of document embedding. In other words, the LSTM model
will be utilized for representing an article according to the semantic
representation of its words.
4.3
User Profile Creation
In order to recommend papers to users, we will model users’ inter-
ests in user profiles. These profiles will represent users’ tastes and
opinions about papers. Such profiles could contain both long-term
and short-term interests, gathered explicitly or implicitly.
One of the explicit feedback forms is to ask the user to explicitly
specify papers which are relevant to her (which are satisfying in-
formation need). Implicit feedback is to collect data about user’s
preferences based on observations of the user’s behavior from the
transactions log like viewing abstracts or full-text articles.
In our study, we will build user profiles from users’ explicit and
implicit short-term interests; user can explicitly add or delete the
preferred articles as an input to the recommender system,
from
which the title and abstract will be extracted and the semantic
vectors will be calculated. In addition, we will infer users’ interests
based on viewing abstracts and clicking links to full-text articles
while querying the PubMed Central in the same query session.
We will assign high weights to the vectors that characterize the
topics which the user is interested in, based on the user’s actions;
for instance, viewing abstract only should be weighted lower than
viewing the whole paper.
4.4
Recommendation of papers
Using the constructed user profile and the feature vectors of the set
of the candidate papers to recommend, the system will compute the
cosine similarities between the papers in the user profile and the
ones in the corpus, considering the weights that take into account
the user feedback. Highly relevant papers will be ranked first for
presentation. Therefore, the correctness of an item in the ranking
list should be weighted by its position in the ranking.
Figure 1
shows the high level architecture of the proposed method.
4.5
Evaluation Methods
We will compare the results from our recommendation engine with
PubMed MeSH-based baseline. Similar to the PubMed recommender
system proposed in [
14
], we will use MeSH-based paper similarities
as the gold standard to evaluate the different methods. In the MeSH-
based paper similarities, the quality of predictions for each paper is
defined based on its distance compared to similar predictions from
MeSH scores.
In addition to the described offline evaluation, we intend to con-
duct user studies in order to evaluate our proposed method. The
participants will
be asked to read and indicate how the recom-
mended papers are relevant to their research.
5
CURRENT PROGRESS
The thesis is now in the initial phase. We are currently studying the
different recommendation methodologies, deep learning techniques,
UMAP 2017 Doctoral Consortium 
UMAP’17, July 9-12, 2017, Bratislava, Slovakia
329
Figure 1: The proposed method
and reviewing the literature of the research paper recommender
systems. The next steps will be the implementation of the proposed
approach and the evaluation of its performance in comparison with
other approaches in the literature.
ACKNOWLEDGMENTS
I would like to thank my advisors, Dr. Giuseppe Sansonetti for his
comments that helped to improve this manuscript, Prof. Alessandro
Micarelli and Dr. Fabio Gasparetti for their support and feedback
in this research.
REFERENCES
[1]
Titipat Achakulvisut, Daniel E Acuna, Tulakan Ruangrong, and Konrad Kording.
2016.
Science Concierge:
A fast content-based recommendation system for
scientific publications.
PloS one 11, 7 (2016), e0158423.
[2]
Joeran Beel, Bela Gipp, Stefan Langer, and Corinna Breitinger. 2016.
Research-
paper recommender systems: a literature survey.
International Journal on Digital
Libraries 17, 4 (2016), 305–338.
[3]
Joeran Beel, Stefan Langer, Marcel Genzmehr, and Andreas Nürnberger. 2013.
Introducing Docear’s research paper recommender system. In Proceedings of the
13th ACM/IEEE-CS joint conference on Digital libraries. ACM, 459–460.
[4]
Peter JA Cock, Tiago Antao, Jeffrey T Chang, Brad A Chapman, Cymon J Cox,
Andrew Dalke, Iddo Friedberg, Thomas Hamelryck, Frank Kauff, Bartek Wilczyn-
ski, and others. 2009.
Biopython: freely available Python tools for computational
molecular biology and bioinformatics.
Bioinformatics 25, 11 (2009), 1422–1423.
[5]
Luis M De Campos, Juan M Fernández-Luna, Juan F Huete, and Miguel A Rueda-
Morales. 2010.
Combining content-based and collaborative recommendations: A
hybrid approach based on Bayesian networks.
International Journal of Approxi-
mate Reasoning 51, 7 (2010), 785–799.
[6]
Bela Gipp,
Jöran Beel,
and Christian Hentschel.
2009.
Scienstein: A research
paper recommender system.
In Proceedings of the international conference on
emerging trends in computing (iceticâĂŹ09). 309–315.
[7]
Jonathan L Herlocker, Joseph A Konstan, Loren G Terveen, and John T Riedl.
2004. Evaluating collaborative filtering recommender systems. ACM Transactions
on Information Systems (TOIS) 22, 1 (2004), 5–53.
[8]
Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long short-term memory. Neural
computation 9, 8 (1997), 1735–1780.
[9]
Thomas K Landauer and Susan T Dumais. 1997.
A solution to Plato’s problem:
The latent semantic analysis theory of acquisition, induction, and representation
of knowledge.
Psychological review 104, 2 (1997), 211.
[10]
Joonseok Lee,
Kisung Lee,
and Jennifer G Kim.
2013.
Personalized academic
research paper recommendation system.
arXiv preprint arXiv:1304.5457 (2013).
[11]
Zachary C Lipton, John Berkowitz, and Charles Elkan. 2015.
A critical review of
recurrent neural networks for sequence learning.
arXiv preprint arXiv:1506.00019
(2015).
[12]
Tomas Mikolov, Martin Karafiát, Lukas Burget, Jan Cernock
`
y, and Sanjeev Khu-
danpur. 2010.
Recurrent neural network based language model.. In Interspeech,
Vol. 2. 3.
[13]
Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. 2013.
Distributed representations of words and phrases and their compositionality. In
Advances in neural information processing systems. 3111–3119.
[14]
Shahin Mohammadi, Sudhir Kylasa, Giorgos Kollias, and Ananth Grama. 2016.
Context-Specific Recommendation System for Predicting Similar PubMed Arti-
cles. In Data Mining Workshops (ICDMW), 2016 IEEE 16th International Conference
on. IEEE, 1007–1014.
[15]
Jonas Mueller and Aditya Thyagarajan. 2016.
Siamese Recurrent Architectures
for Learning Sentence Similarity.. In AAAI. 2786–2792.
[16]
Cristiano Nascimento, Alberto HF Laender, Altigran S da Silva, and Marcos André
Gonçalves. 2011. A source independent framework for research paper recommen-
dation. In Proceedings of the 11th annual international ACM/IEEE joint conference
on Digital libraries. ACM, 297–306.
[17]
Michael J Pazzani and Daniel Billsus.
2007.
Content-based recommendation
systems.
In The adaptive web. Springer, 325–341.
[18]
Radim Rehurek and Petr Sojka. 2010.
Software framework for topic modelling
with large corpora. In In Proceedings of the LREC 2010 Workshop on New Challenges
for NLP Frameworks. Citeseer.
[19]
Chong Wang and David M Blei. 2011.
Collaborative topic modeling for recom-
mending scientific articles. In Proceedings of the 17th ACM SIGKDD international
conference on Knowledge discovery and data mining. ACM, 448–456.
[20]
Ian Wesley-Smith and Jevin D West.
2016.
Babel: A Platform for Facilitating
Research in Scholarly Article Discovery. In Proceedings of the 25th International
Conference Companion on World Wide Web. International World Wide Web Con-
ferences Steering Committee, 389–394.
[21]
Takashi Yoneya and Hiroshi Mamitsuka.
2007.
PURE:
a PubMed article rec-
ommendation system based on content-based filtering.
Genome informatics 18
(2007), 267–276.
UMAP 2017 Doctoral Consortium 
UMAP’17, July 9-12, 2017, Bratislava, Slovakia
330
