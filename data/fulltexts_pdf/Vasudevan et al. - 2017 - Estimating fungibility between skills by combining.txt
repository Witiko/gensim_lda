Estimating fungibility between skills by combining
skill-similarities obtained from multiple data sources
Shrihari Vasudevan
∗
,
Moninder Singh
†
,
Joydeep Mondal
∗
,
Michael Peran
‡
,
Ben Zweig
‡
,
Brian Johnston
‡
& Rachel Rosenfeld
‡
∗
IBM Research - India.
Email: shrivasu@in.ibm.com
†
IBM Research - T.J.
Watson Research Center,
NY,
USA.
Email: moninder@us.ibm.com
‡
IBM Chief Analytics Office - Armonk,
NY,
USA.
Email: mperan@us.ibm.com
Abstract—This
paper
proposes
an approach to
estimating
fungibility between skills given multiple information sources of
those
skills.
An estimate
of
skill
adjacency or
fungibility or
substitutability is critical for effective capacity planning, analytics
and optimization in the face of
changing skill
requirements of
an organization.
The proposed approach is based on computing
a similarity measure between skills,
using each available data
source, and combining these similarities into a measure of fungi-
bility.
We present both supervised and unsupervised integration
methods and demonstrate that these produce improved outcomes,
compared to
using
any
single
skill
similarity
source
alone,
using data from a large IT organization.
The skills’ fungibility
matrix created using this approach has been deployed by the
organization for clustering skills for use in demand forecasting.
A possible extension of this work is to use the fungibility measure
to cluster skills and develop a skill-centric representation of an
organization to enable strategic assessments and planning.
I.
I
NTRODUCTION
People-driven organizations tend to rely on an employee-
centric organizational structure. The representation can enable
the lookup of an employees position and association within the
hierarchy.
Employee skills are directly or indirectly encoded
in many different information sources ranging from their CVs
to skills-sets
and projects
associated with them within the
organization.
As a result
of this,
a full
understanding of the
skills
available in an organization is
typically unavailable.
Direct
implications
of
this
are
that
the
resource
(people)
available for a particular skill is not known and that a measure
of “adjacency” between people and skills does not exist.
Agile organizations need to be responsive to changing mar-
ket scenarios. Demands from products and services constantly
change;
this results in changing skill-set
requirements.
Man-
agement in an organization needs to have resource information
available at multiple levels of abstraction to facilitate decision
making and capacity planning,
both for immediate needs and
for
looking into the future.
For
instance,
it
is often easier
to up-skill
an existing employee with closely related skills
than go through the process of hiring a new employee.
These
goals require a notion of fungibility (substitution with minimal
up-skilling) between employees and in particular,
their skill-
sets.
Similarly,
a measure of fungibility between skills allows
organizations
to improve demand forecasts
for
those skills
considering skill
usage data from prior engagements.
This is
due to the fact that the number of skills across an organization
may be fairly large and many skills
may occur
relatively
infrequently in the historical
engagement
data.
Aggregating
skills
into skill
clusters
using fungibility can allow more
accurate demand forecasting to be done at
the level
of skill-
clusters, and provide a balance between forecast accuracy and
usability.
This paper focuses on the problem of estimating fungibility
between skills for use in capacity planning and potentially, the
development
of a skill-centric representation of an organiza-
tion. We discuss some relevant work in Section II. In Sections
III and IV,
we describe the two information sources used in
this work - (1) skill
descriptions and (2) people skill
transi-
tions,
and discuss our method for estimating skill
similarity
from these sources. We then cast the estimation of fungibility
(Section V) as a problem of combining skill similarity matrices
obtained using these individual data sources into a composite
similarity measure.
The matrix integration can be done in
a supervised or unsupervised manner based on the available
data.
In Section VI,
we describe how this work is being used
at a large IT organization and also present experimental results
showing that
the integrated results
obtained from multiple
sources are better than any individual source alone. Finally, we
discuss future work and offer concluding remarks in Sections
VII and VIII,
respectively.
II.
R
ELATED WORK
The
recent-past
has
experienced a
spurt
in skill
based
analytics for human capital management. Many of these works
leverage recent
advances
in text
analytics
and information
retrieval
to provide decision support
systems based on em-
ployee skills.
Richter
et
al.
[1]
describe one such decision
support
tool
that
provides
globally optimal
workforce
as-
signment
recommendations for
a given supply demand sce-
nario; optimality is defined by a utility function incorporating
different
business
metrics.
Judy [2]
describes
a method to
estimate a transferability measure for workers moving between
occupations using occupational
attributes based on publicly
available
structured databases
of
occupations
and requires
manual
selection of important
dimensions/attributes involved
(for
each occupation as
well
as
for
combining dimensions
for
pairs of
occupations).
Bauer
et
al.
[3]
similarly address
a related problem of developing skill
associations for groups
of
employees through the use of
co-clustering.
Instead of
a
fixed skill-taxonomy representation,
skills are extracted from
enterprise and social data, and used to identify employees who
have expertise in desired skills.
Connors et
al.
[4]
describe
a system for providing substitutable skills against
a demand.
It
relies
on the demand specifying acceptable substitutions
on various attributes (skills,
skill-level
etc.).
Substitutes are
ranked (penalties for different substitutions) on this basis and
provided to the decision maker.
Finally,
Ramamurthy et
al.
[5]
present
an approach for
developing an adjacency model
for skills as a weighted-combination of other skills by using
historical employee skills data.
Other
than [5],
these approaches are generally concerned
with identifying employees
who have
certain (in-demand)
skills so that
they can be considered for deployment
to meet
such demand;
they do not
attempt
to develop a quantitative
notion of adjacency or fungibility of skills. While Ramamurthy
et
al.
[5] do address this problem more directly than others,
their approach still
does not
yield pair-wise skill
fungibility
distance.
More importantly,
it
is unable to infer a signal
for
skills that are new, or have been recently introduced, and thus
have few or no employees associated with that skill.
III.
S
KILLS DATA
This paper uses people skill-data and skill
representations
of one of the largest
IT corporations in the world to develop
its thesis.
The organization is people and skill
driven.
It
has
an employee-centric organization;
however,
it
also has
an
established skills
taxonomy;
one particular
level
of
which
is
actively used by management
in decision making.
This
taxonomy is briefly described in Table I with an example.
TABLE I
E
XPERTISE
T
AXONOMY
Expertise taxonomy level
Example
Primary Job Category /
Technical Services
Secondary Job Category
Other Technical Services
Job Role (JR)
System Administrator
Job Role - Skill Set (JRSS)
System Administrator - Windows
Skill
Perform system administration for Windows
The JRSS level of this hierarchy is particularly important to
decision making - it is the functional unit of skill measurement
for
the organization in consideration.
JRs,
JRSSs and skills
have descriptions that
provide detailed information on them.
Every JRSS therefore has an associated JR,
JR description,
JRSS description,
associated skills
and their
descriptions.
Whereas
the
existence
of
a
skills
structure
or
taxonomy
lends additional structure and information that may be useful
in various
contexts,
the only requirement
for
the approach
presented in this paper
is the existence of
a functional
unit
of
skill
measurement
(hereafter,
referred to simply as skill)
and descriptions associated with skills;
the more detailed the
description,
the richer the data source.
In any organization,
from a skills perspective,
people gen-
erally grow with time i.e.
they acquire new skills.
Employees
may have joined with a certain set of skills.
With experience,
the employee may transition to new roles
or
take on new
projects,
thereby acquiring new skills.
By viewing historical
data of each employee, it is possible to identify skill transitions
that have occurred. Such skill transitions may represent fungi-
bility between the skills.
Potential issues with the availability
of this data include (a) incomplete employee information - not
all employees of all business units have up-to-date records and
this is only one source of employee skills information within
an organization (b)
imbalance -
due to constant
change in
workforce in response to changing skill requirements,
certain
skills
have only very few employees
associated with them
whereas some others have many and (c)
skills information
of
employees is dispersed in many different
databases.
For
this paper,
the data was available from a single database and
was assumed to be largely complete.
In other organizations,
there may be other data-bases or data sources available.
The
approaches presented can be adapted suitably to factor them.
IV.
E
STIMATING SIMILARITY BETWEEN SKILLS
This section discusses approaches to estimating skill
simi-
larities given skill descriptions and people skill data.
A.
Skill similarity from skill names and descriptions
Every skill
has associated key words and descriptions (see
Section III).
A similarity measure between the descriptions
associated with two skills could provide a valuable measure
of
semantic similarity between them.
A recent
contribution
from Mikolov et
al.
[6]
(word2vec)
proposed a neural
net-
work based approach to learn vector representations of words
to capture semantic context
(co-occurrence of
words).
The
authors proposed two methods requiring opposite implemen-
tation architectures - continuous bag of words (CBOW) and
skip-gram (SG), to learn word vectors. The difference between
the approaches is in the input-output
combinations and their
physical
interpretations.
Both approaches operate on strings
of
words,
the
input
text
being a
collection of
strings
of
words.
The CBOW approach learns to predict
a word given
its context
(co-occurring)
words.
The SG approach,
on the
other hand,
learns to predict context words for a given word.
After the learning stage,
each word has a vector representa-
tion.
Similarity between words can be computed by a cosine
similarity between their
corresponding feature vectors.
The
referred paper
demonstrated the ability of
this approach to
capture syntactic and semantic regularities.
This paper
uses
the approach to compute semantic similarity between skills
(names and descriptions) as shown in Figure 1.
Word-vector
representations of the skills are learnt by using the word2vec
skip-gram approach that
learns words that
co-occur with the
skill
word.
Semantic similarity between two skills was then
computed as the cosine similarity between the representations
of every pair of skills; the result is a similarity matrix.
B.
Skill similarity from people skill data
Skill similarity from people-skill data is computed based on
the notion that
if an employee has two skills,
then a person
may be trained from one to the other.
As such,
we look at
each skill,
and compute a profile for that
skill
consisting of
Fig.
1.
Similarity from skill descriptions
Fig.
2.
Similarity from people skill data
the union of all
skills possessed by all
employees with that
skill.
Then,
similarity between the profiles of two skills gives
us a measure of the adjacency between them.
To compute this people-skill
similarity,
we use the term-
frequency inverse-document-frequency (TF-IDF) [7], [8] rep-
resentation,
a standard feature representation technique used
in document retrieval problems.
The term (TF) represents the
frequency of
the occurrence of
a token (e.g.
term or
word)
within a document,
and is
a measure of
how common it
is in the document.
The inverse document
frequency (IDF)
is
a measure of
how often that
token occurs
in a corpus
of documents,
and is a measure of its discriminating power
between documents.
The product of the two terms (TF-IDF),
thus,
provides a measure of the importance of a token to the
document,
in a corpus of documents.
High TF-IDF suggests
that a term occurs frequently in a document but in few other
documents;
it
could be used to distinguish a document
from
other documents.
Every document
is represented as a feature
vector comprising of TF-IDF measures of tokens (e.g.
words
or terms) within that document. Similarity between documents
is computed as the cosine similarity between their respective
TF-IDF feature vector representations.
Estimating skill-similarity using people skill
data is done
using the TF-IDF approach as shown in Figure 2.
For every
skill S,
a “document” is constructed,
consisting of every skill
(“token”)
that
a person with skill
S has
transitioned from.
Then,
the term-frequency (TF)
for
skill
T in that
document
represents the number of people with skill
S who also have
skill T.
Similarly,
the IDF for skill T measures how common
the skill T is across people with all skills.
Thus,
every skill S
is represented by a TF-IDF feature vector representation,
and
skill
similarity is computed as the cosine similarity between
the
feature
vectors.
This
similarity encodes
the
historical
people based evidence in the organization.
For
a given set
of skills,
a similarity matrix is thus obtained.
V.
E
STIMATING FUNGIBILITY BETWEEN SKILLS
This
paper
defines
and estimates
fungibility (or
substi-
tutability) between skills
1
as the composite similarity measure
obtained by combining skill similarities obtained from multi-
ple information sources. Two sources of skills information are
considered in this paper - skill
descriptions and people skill-
transitions.
Pairwise skill-similarity matrices
obtained from
these sources are thus integrated into a single measure of fun-
gibility or substitutability between skills - also a pairwise ma-
trix between skills.
Future extension options may include the
inclusion of additional data sources/metrics such as number-of-
years, type of experience (on-site, off-site) etc. Some of these
may produce additional
similarity matrices
between skills;
1
Unlike the dictionary definition of
fungibility,
two skills are not
freely
exchangeable or they would be no distinction between them; fungibility in a
skills context represents substitution with minimal time or cost or re-training.
some may be better
suited as constraints within a specific
application problem.
The resulting fungibility matrix can in
turn provide the basis for any subsequent
clustering of skills
to develop skill-centric representations of an organization and
for
applications like short
term capacity planning,
strategic
planning,
shortlisting of
candidates for
re-skilling and other
skill
based analyses.
Combining similarity matrices can be
done in a supervised or
unsupervised manner
depending on
the data that exists. A visual depiction of this process is shown
in Figure 3.
A.
Unsupervised integration using PCA
An unsupervised approach to similarity matrix integration
is useful
when no prior subject
matter expert
(SME) opinion
or
information on fungible
skills
exist.
In such cases,
a
reasonable objective of similarity matrix integration would be
to maximize information captured in the resulting matrix,
of
the input
similarity matrices.
Principal
Component
Analysis
(PCA) provides a way to achieve this objective.
PCA is a linear orthogonal projection of data; the projection
produces components that greedily maximize the data-variance
that
they account
for.
Thus,
the projection of the data along
the first component captures most of the variance in the data;
the projection along the second component
is the next
most
informative, in this respect, and so on. Integration of similarity
matrices can be done by projecting the data from the two
matrices,
taken together,
along the first
principal
component
that will maximally capture the variance in the input similarity
matrices. The PCA approach to integration of similarity matri-
ces is thus completely unsupervised in that it does not require
SME input
and relies only on the principle of
information
(variance) maximization. The approach is approximate in that
information captured by projections
along the second and
subsequent components are lost and the quality of integration
is dependent on the amount of variance the first component is
able to capture.
B.
Unsupervised integration using people data support (PDS)
This unsupervised approach to similarity matrix integration
regards people (skill-transition)
data as sacrosanct;
skill
de-
scription data is used as an alternative, when people-data infor-
mation about skill pairs is unavailable or unreliable. Similarity
matrix integration is performed as a linear weighted sum of the
individual
matrices (people and description data similarities).
The weights (
pwt
) for the skill similarity matrix obtained from
people skill
data are computed as follows;
the weights (
dwt
)
for
the similarity matrix obtained from description data are
obtained as
dwt = [1] − pwt
. Given the skill similarity matrix
from people data (
S
p
)
and the skill
similarity matrix from
description data (
S
d
),
the resulting fungibility matrix is given
by
S = (pwt . S
p
) + (dwt . S
d
)
(1)
People skill
data,
while being an invaluable resource,
can
be scarce for many skill pairs; not everyone diligently updates
their skills information in organizations.
Let
n
i
represent
the
number
of
people with skill
i
,
n
j
represent
the number
of
people with skill
j
and
n
ij
represent
the number
of
people
who have both skills
i
and
j
. The maximum number of people
that
can have both skills is
min(n
i
, n
j
)
.
Thus,
a measure of
people data support for a given pair of skills is given by
pwt
ij
=
n
ij
min(n
i
, n
j
)
(2)
To trust the people data support measure only if a reasonable
support
of
information on individual
skills is available,
the
denominator in the expression above can be lower bounded by
some desired threshold.
For this work,
based on an empirical
plot
of the number of employees with each skill,
percentiles
(including median) of these numbers were chosen as the lower
bound. Thus, the people data support for a pair of skills (i and
j) is given by
pwt
ij
=
n
ij
max( percentile(n
k
) , min(n
i
, n
j
) )
(3)
where k ranges over the set
of all
employee counts over in-
dividual skills. This measure effectively penalizes PDS values
where the maximum possible support
is below a confidence
threshold.
A variation of
the above penalty-based PDS computation
is one of
a switching model
between people skill-transition
similarities and skill-description similarities based on whether
the maximum possible support
exceeds a threshold.
In this
case,
the measure of people data support
for a given pair of
skills is given by Equation 2 if
min(n
i
, n
j
) > percentile(n
k
)
and zero otherwise,
resulting in the use of description based
similarities. As before, the threshold is empirically selected as
percentiles of numbers of people with each skill
in consider-
ation.
C.
Supervised integration using some fungible skills
When SME information about
fungible
skills
(pairs
or
clusters
of
skills)
is
available,
a supervised approach may
be
used to combine
similarity matrices.
The
objective
of
similarity matrix integration in this case, would be to produce
a resultant matrix that maximizes the likelihood of occurrence
of the exemplars provided by the SME.
A way of achieving this objective is to find a weighted linear
combination (LINSUM)
of
(normalized)
similarity matrices
that
maximizes the clustering outcome F-measure score (or
similar metric), for the given set of exemplars. The search for
weights can be done using an off-the-shelf optimization tool.
Bounds on weights and constraints (e.g.
sum of weights = 1)
can significantly simplify the search process. An outline of the
steps involved follows -
1)
Given - SME provided valid skill
clusters representing
fungible sets of skills.
2)
Compute normalized similarity matrices (range =
[0, 1]
).
Extract
sub-matrices of the similarity matrices contain-
ing only skills referred to in the SME exemplars.
The
next
step operates on only the sub-matrices to estimate
weights.
3)
For every set of weights in the search space of weights
Fig.
3.
Combining skill similarity matrices into a fungibility matrix
a)
Compute a linear weighted sum of similarity sub-
matrices to obtain a single fungibility matrix be-
tween skills.
b)
Use an off-the-shelf clustering approach to obtain
skill
clusters
-
e.g.
partitioning around medoids
(PAM)
or
hierarchical
clustering.
The number
of
skill
clusters is set
based on the number of SME
provided exemplar skill clusters; hierarchical clus-
tering can pick the clustering level based on this.
c)
Generate skill-pairings from the clusters (e.g. clus-
ter with (1,2) gives (1,1),
(1,2),
(2,1) and (2,2))
d)
Compute the Precision (fraction of the clustering
outcomes that
are correct),
Recall
(fraction of the
SME exemplar pairs produced in the clustering out-
come) and F-measure (harmonic mean of Precision
and Recall) of clustering outcome with respect
to
given SME exemplars.
e)
Maintain a record of
the F-measure for
the set
of weights used;
in an optimization tool,
the cost
function would be the F-measure with the objective
being its maximization.
4)
Choose weights
that
maximize the F-measure of
the
clustering outcome.
Where multiple solutions are ob-
tained,
the first
can be chosen;
other methods can also
be used e.g.
maximize sum of precision and recall
and
use most
similar
weights to balance information from
different sources.
5)
Given the weights thus obtained, the resulting fungibility
(or substitutability) matrix is the linear weighted sum of
the individual similarity matrices.
This work was implemented in Python.
Particular libraries
that have been used include NLTK [9], Gensim [10], the SciPy
stack [11] and Scikit-learn [12].
VI.
D
EPLOYMENT AND
E
VALUATION
A set of 1351 skills of a large IT organization were consid-
ered.
As mentioned in Section III and Table I,
each skill had
associated meta-data,
capabilities and all of their descriptions
associated with it.
These were subject
to pre-processing to
handle word-variations
(short
forms),
typos,
singular/plural
word forms,
uninformative words,
symbols and punctuation
marks. Pre-processed words were were concatenated into lists
of
words with the skill
word as an additional
identifier/tag
word for
each such list.
This
data
was
used as
input
to
learn word2vec feature vectors for
the skill
tag words.
The
representation basically learns to predict
co-occurring words
to the skill
word in question.
Given feature vectors for each
skill,
pairwise similarities
between them can be computed
using the cosine similarity between the corresponding feature
vectors.
The result
is a similarity matrix obtained from skill
descriptions.
Employee records of
over
400 thousand employees were
mined to extract
their current
skills and all
skills associated
with them until the current time. A percentile plot of employee
counts per skill is shown in Figure 4. The figure shows 0-
90
th
percentile to clearly show the distribution across a majority of
skills. About 265 skills had no recorded employee counts and
about 304, below 20 employees each. Amongst the 1351 skills
in consideration,
the maximum employees for
any one skill
ranged up to 21132 - corresponding to the
100
th
percentile.
A TF-IDF feature vector representation for each skill
was
learnt in terms of all skills in question; the TF and IDF values
for
each token were decided by the employee skill
records.
As
before,
given feature
vectors
for
each skill,
pairwise
similarities
between them were computed using the cosine
similarity between corresponding feature vectors.
The result
is a similarity matrix obtained from employee skill records.
Fig.
4.
Percentile plot of employee counts per skill.
Maximum skills
Fig. 5.
A single skill cluster showing similarity between outcomes from skill
similarity obtained from people skill transitions and from skill descriptions.
TABLE II
P
ERFORMANCE COMPARISON
Integration approach
Precision
Recall
F-measure
People data similarities
0.68
0.55
0.61
Description data similarities
0.61
0.61
0.61
PCA
0.64
0.62
0.63
LINSUM
0.84
0.65
0.73
PDS 25 percentile
0.48
0.46
0.47
PDS 50 percentile
0.52
0.47
0.49
PDS 75 percentile
0.6
0.61
0.6
PDS 25 percentile switching
0.68
0.54
0.6
PDS 50 percentile switching
0.7
0.5
0.58
PDS 75 percentile switching
0.68
0.62
0.65
Similarity matrix integration was then performed using the
PCA and LINSUM approaches. The LINSUM integration was
carried out using a preliminary SME feedback of 8 groups of
skills (about 30 in total) obtained through earlier discussions;
a single skill
cluster
depicted in Figure 5 showed a simi-
larity between skill
clusters obtained from each information
source used.
The resultant
fungibility matrix was then used
Fig.
6.
Similarity matrix from skill descriptions
Fig.
7.
Similarity matrix from people skill data
to cluster the skills into about
400 groups (the number was
chosen empirically based on the groups produced) which were
then presented to the business
and very well
received.
At
this
stage,
the quality of
the skill
clusters
generated using
both approaches was similar;
thus the decision was made to
deploy the PCA-based clusters as the business felt
using the
unsupervised approach made more sense,
given the limited
amount of feedback available initially.
The skill
clusters are being used by the IT organization to
forecast
demand,
given skills usage information from prior
engagements. Forecasting demand at the level of skill clusters
(instead of individual skills) achieves good trade-off between
accuracy and usability. This is due to the fact that the number
of skills is fairly large,
but
many skills are rare in historical
engagement data and forecasting their demand directly is not
Fig. 8.
Fungibility matrix integrating both people and description similarities
obtained using the supervised LINSUM approach.
Fig. 9.
Fungibility matrix integrating both people and description similarities
obtained using the unsupervised people data support (switching) approach.
accurate.
However,
aggregating them using fungibility into
skill clusters results in higher prediction accuracy.
Upon presentation of these groups of skills to the SMEs,
additional feedback collection was also started.
The feedback
expected was
in the form of
comments
against
each skill,
listed by group.
SME feedback obtained included blank lines
(no comments) and explicit comments grouping specific skills
together.
Blank lines (i.e.
no comment)
may be assumed as
approval.
However,
given that SMEs had to parse 1351 skills
and group numbers,
blank lines may also reflect
the case of
partial
feedback for the most
obvious of skill
groupings that
was apparent to the SME.
For the purpose of this paper,
only
Fig.
10.
Fungibility matrix integrating both people and description similar-
ities obtained using unsupervised PCA approach.
skills accompanied with explicit
feedback on their groupings
(i.e.
fungible) with other skills are considered for evaluation.
Their comments were manually parsed and a set of 19 groups
of skills (about 71 in total) were obtained. With this additional
data,
we could once again evaluate LINSUM against PCA as
well
as the other methods.
The aforementioned skill
groups
constituted the exemplars
against
which different
methods
were evaluated.
Similarity matrix integration was
once
again performed
using the
different
methods
presented in Section V.
The
rows and columns corresponding to the exemplar skills were
extracted from the fungibility matrix.
Using this fungibility
(sub-)matrix,
a clustering procedure was performed and the
clustering outcome was evaluated with respect
to the SME
input.
These evaluation steps
are similar
to step 3 of
the
supervised approach to similarity matrix integration presented
in section V-C.
The resulting fungibility matrices
obtained
agreed with SME inputs to the extent
of the precision,
recall
and F-measure scores captured in Table II.
The table shows
the metrics obtained using only people skill transition data or
skill
description data.
It
also shows outcomes of the people
data support
approach -
using both a penalty based support
measure (Equation 3) and the switching model (Equation 2 or
zero subject
to the threshold),
for three different
confidence
thresholds defined in terms of the employee counts per skill.
The similarity matrices from skill
descriptions and people
skill transition data are respectively shown in Figures 6 and 7.
The three best
integrated fungibility matrices obtained using
the
LINSUM,
PDS and PCA approaches
are
respectively
shown in Figures
8,
9,
and 10.
The LINSUM outcome is
composed approximately of about 72% people skill similarity
information and 28% skill
description information and hence
appears rather
different
from the other
two outcomes.
This
particular weighting was chosen as it
maximized F-measure,
maximized the
sum of
precision and recall
and balanced
information used from individual matrices. The inverse combi-
nation of about 26% people skill transition based similarity and
74% skill description similarities performed almost identically
well
- the outcome of this case would appear similar to the
PDS and PCA approaches.
Provision of
further
exemplars
of
fungible
skills
could further
narrow down the
weight-
combinations giving best outcomes in the supervised LINSUM
case.
As such,
we intend to replace PCA with LINSUM in
subsequent deployments as more feedback becomes available.
Each of the three outcomes shown produced outcomes superior
to that
obtained using the individual
similarity matrices by
themselves;
this suggests the capture of the synergy between
the different skill similarity information sources.
It
should be
emphasized that
an objective
measure
of
fungibility between skills does not
exist
in the organization
whose data has been used for this study;
we believe this is
the norm across organizations.
Given the current
state of no
clear
baseline and sparse SME inputs
to work or
validate
models
with,
the
similarity matrices
from individual
data
sources already provide a measure of substitutability between
skills.
This paper
further
defines fungibility as a composite
similarity score between skills,
considering all
available data
sources in the organization;
the improved outcomes from the
composite measure demonstrate the potential
for
synergistic
use of multiple skill
data sources,
that
an organization might
have,
towards estimating an objective measure of fungibility
between skills.
While the paper
describes and evaluates both supervised
and unsupervised approaches to integrating skill
similarities,
the emphasis of the paper is in the definition and estimation
of
fungibility between skills
obtained by integrating skill
similarities obtained from different
information sources;
the
integration is performed using a supervised or
unsupervised
approach as afforded by the application scenario.
Other
in-
tegration methods exist
and may be used in place of
those
presented in this paper.
Quality or
uncertainty measures for
individual
data sources may also be incorporated if
there is
explicit prior knowledge or a reference to compare with and a
validation mechanism.
The fungibility measure may be used
within skill based recommender systems; its definition in terms
of
multiple information sources
of
skill
similarity lends
it
a level
of robustness to ”cold-start” problems (ill-defined or
incomplete information source) that
may occur in enterprises
with less rigorous skill taxonomy or recording mechanisms.
VII.
F
UTURE WORK
Numerous
avenues
for
extending this
work exist;
these
may consider
additional
data sources or
evaluate alternative
representation and integration methodologies.
Some specific
examples include the inclusion of
Wikipedia (or
similar
re-
source) as an additional source of skill description information,
particularly in relation to domain specific keywords, the use of
alternative vector-space representations to encode skills (e.g.
paragraph vectors
in [13])
and the detailed comparison of
multiple methods of integrating skill similarity matrices.
VIII.
C
ONCLUSION
A measure of
fungibility between skills
was
defined to
enable effective capacity planning,
analytics and optimization
for modern organizations that have to cope with ever-changing
skill requirements. Fungibility was estimated as a combination
of skill similarities obtained from different information sources
including (but
not
limited to) people skill-transition data and
skill descriptions. Supervised and unsupervised similarity ma-
trix integration methods were proposed and experiments (with
this measure) demonstrated improved outcomes compared to
using any single
skill
similarity source
alone.
Fungibility
matrix created using the unsupervised PCA-based matrix inte-
gration approach has been deployed by a large IT organization
for clustering skills for use in demand forecasting.
Feedback
on the current deployment has resulted in additional improve-
ments in the performance of the supervised similarity matrix
integration (LINSUM)
approach which is,
thus,
expected to
replace the unsupervised-approach in subsequent deployments.
A
CKNOWLEDGMENT
The authors
thank Jonathan DeBusk,
Pankaj
Srivastava,
Owen Cropper and Steve Loehr for their support and valuable
inputs.
R
EFERENCES
[1]
Y.
Richter,
Y.
Naveh,
D.
Gresh,
and D.
Connors,
“Applying constraint
programming to workforce management
of highly-skilled employees,”
in proc.
of IEEE SOLI,
2007.
[2]
R. Judy, “Method for statistical comparison of occupations by skill sets
and other relevant attributes,” Patent US8 082 168B1,
2011.
[3]
J.
Bauer,
D.
Fang,
A.
Mojsilovic,
K.
Ramamurthy,
K.
Varshney,
and
J.
Wang,
“Method,
system and computer program product for automat-
ing expertise management
using social
and enterprise data,” Patent
US20 150 317 376A1,
2015.
[4]
D.
Connors,
J.
Fasano,
and D.
Gresh,
“Method for
substitution of
employees in a service engagement,” Patent US20 080 294 486A1, 2008.
[5]
K.
N.
Ramamurthy,
M.
Singh,
M.
Davis,
J.
A.
Kevern,
U.
Klein,
and
M.
Peran,
“Identifying employees
for
re-skilling using an analytics-
based approach,” in IEEE ICDM Workshop on Data Mining for Service,
2015,
pp.
345–354.
[6]
T.
Mikolov,
K.
Chen,
G.
Corrado,
and J.
Dean,
“Efficient
estimation
of
word representations
in vector
space,” in proc.
the International
Conference on Learning Representations,
2013.
[7]
C.
Manning,
P.
Raghavan,
and H.
Sch
¨
utze,
Introduction to Information
Retrieval.
Cambridge University Press,
2008.
[8]
A. Rajaraman and J. Ullman, Mining of Massive Datasets.
Cambridge
University Press,
2011,
ch.
Data Mining,
pp.
1–17.
[9]
S.
Bird,
E.
Loper,
and E.
Klein,
Natural
Language Processing with
Python.
O’Reilly Media Inc,
2009.
[10]
R.
Rehurek and P.
Sojka,
“Software framework for
topic modelling
with large corpora,” in in proc.
of
the LREC 2010 Workshop on New
Challenges for NLP Frameworks,
2010.
[11]
E.
Jones,
T.
Oliphant,
P.
Peterson et al.,
“SciPy: Open source scientific
tools for Python,” 2001.
[Online].
Available: http://www.scipy.org/
[12]
F.
Pedregosa,
G.
Varoquaux,
A.
Gramfort,
V.
Michel,
B.
Thirion,
O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vander-
plas,
A.
Passos,
D.
Cournapeau,
M.
Brucher,
M.
Perrot,
and E.
Duch-
esnay,
“Scikit-learn:
Machine learning in Python,” Journal
of
Machine
Learning Research,
vol.
12,
pp.
2825–2830,
2011.
[13]
Q.
Le and T.
Mikolov,
“Distributed Representations of Sentences and
Documents,” in Proceedings of the ICML,
2014,
pp.
1188–1196.
